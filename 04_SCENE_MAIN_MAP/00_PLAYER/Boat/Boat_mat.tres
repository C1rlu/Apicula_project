[gd_resource type="ShaderMaterial" load_steps=35 format=3 uid="uid://cndqni443mbf"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_fxhmh"]
parameter_name = "Dark_color"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_mv3jv"]
size = Vector2(580, 220)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_eya70"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_cah2u"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_u3q1m"]

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_06wf8"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e8g3j"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_ns3hw"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="Gradient" id="Gradient_hiog5"]
offsets = PackedFloat32Array(0.492447, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_wk5qj"]
gradient = SubResource("Gradient_hiog5")
fill_from = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ovaad"]
texture = SubResource("GradientTexture2D_wk5qj")

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_6auyh"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_reqxo"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ekp67"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_iofbm"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ck2et"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_f2m0l"]
function = 31

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_k1qbr"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ioca7"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_fdbnt"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_54rfw"]
source = 5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_rnhxr"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ebfyt"]
parameter_name = "isSubscene_value"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_6y2l4"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 1, 1)]
op_type = 3

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_x2o1m"]
parameter_name = "stayGlobal"
default_value_enabled = true

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_ru784"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_1n1ih"]
parameter_name = "active_Dither"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_fib1o"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_sfp8n"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(1, 1, 1)]
op_type = 4

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_knqx8"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_40cy3"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShader" id="VisualShader_iqp7a"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

global uniform vec4 Dark_color : source_color;
global uniform bool isGray;
global uniform bool active_Dither;
uniform bool stayGlobal = false;
uniform vec4 Color : source_color;
global uniform float isSubscene_value;
global uniform float Dither_size;
uniform sampler2D tex_lgt_16;
uniform sampler2D Texture2DParameter;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		float luminance = 0.299 * vec3(n_out2p0.xyz).x + 0.587 * vec3(n_out2p0.xyz).y + 0.114 * vec3(n_out2p0.xyz).z;
		n_out3p0 = luminance;
	}


// BooleanParameter:6
	bool n_out6p0 = isGray;


// Mix:5
	vec3 n_out5p0 = mix(vec3(n_out2p0.xyz), vec3(n_out3p0), vec3(n_out6p0 ? 1.0 : 0.0));


// Output:0
	ALBEDO = n_out5p0;


}

void light() {
// BooleanParameter:39
	bool n_out39p0 = active_Dither;


// BooleanParameter:37
	bool n_out37p0 = stayGlobal;


// ColorParameter:26
	vec4 n_out26p0 = Color;


// FloatParameter:32
	float n_out32p0 = isSubscene_value;


// Mix:35
	vec3 n_in35p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out35p0 = mix(n_in35p0, vec3(n_out26p0.xyz), vec3(n_out32p0));


	vec3 n_out38p0;
// Switch:38
	n_out38p0 = mix(vec3(n_out26p0.xyz), n_out35p0, float(n_out37p0));


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatParameter:42
	float n_out42p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out42p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Texture2D:16
	vec4 n_out16p0 = texture(tex_lgt_16, UV);


	vec4 n_out28p0;
// Texture2D:28
	n_out28p0 = texture(Texture2DParameter, vec2(n_out16p0.xy));


// Clamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out28p0.x, n_in10p1, n_in10p2);


// Input:12
	vec3 n_out12p0 = NORMAL;


// Input:19
	vec3 n_out19p0 = LIGHT;


// DotProduct:13
	float n_out13p0 = dot(n_out12p0, n_out19p0);


// Clamp:17
	float n_in17p1 = 0.00000;
	float n_in17p2 = 1.00000;
	float n_out17p0 = clamp(n_out13p0, n_in17p1, n_in17p2);


// Input:20
	float n_out20p0 = ATTENUATION;


// VectorOp:21
	vec2 n_out21p0 = vec2(n_out17p0) * vec2(n_out20p0);


// FloatFunc:23
	float n_out23p0 = 1.0 - n_out21p0.x;


// Mix:22
	float n_in22p1 = 0.00000;
	float n_out22p0 = mix(n_out10p0, n_in22p1, n_out23p0);


// Step:11
	float n_out11p0 = step(n_out4p0, n_out22p0);


// Mix:25
	vec3 n_in25p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out25p0 = mix(n_in25p0, n_out38p0, vec3(n_out11p0));


// Mix:41
	vec3 n_in41p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out41p0 = mix(n_in41p0, n_out38p0, vec3(n_out22p0));


	vec3 n_out40p0;
// Switch:40
	n_out40p0 = mix(n_out41p0, n_out25p0, float(n_out39p0));


// Output:0
	SPECULAR_LIGHT = n_out40p0;


}
"
graph_offset = Vector2(670.029, 323.097)
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/0/position = Vector2(600, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_fxhmh")
nodes/fragment/2/position = Vector2(-600, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_mv3jv")
nodes/fragment/3/position = Vector2(-244.515, -224.551)
nodes/fragment/3/size = Vector2(580, 220)
nodes/fragment/3/input_ports = "0,4,color;"
nodes/fragment/3/output_ports = "0,0,grey_value;"
nodes/fragment/3/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/5/node = SubResource("VisualShaderNodeMix_eya70")
nodes/fragment/5/position = Vector2(495.485, -44.5506)
nodes/fragment/6/node = SubResource("VisualShaderNodeBooleanParameter_cah2u")
nodes/fragment/6/position = Vector2(-180, 280)
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 1, 2, 0, 3, 0, 2, 0, 5, 0, 5, 0, 0, 0, 6, 0, 5, 2)
nodes/light/0/position = Vector2(2620, 1260)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_rnhxr")
nodes/light/3/position = Vector2(80, 1880)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_fib1o")
nodes/light/4/position = Vector2(380, 2000)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/10/node = SubResource("VisualShaderNodeClamp_u3q1m")
nodes/light/10/position = Vector2(320, 960)
nodes/light/11/node = SubResource("VisualShaderNodeStep_06wf8")
nodes/light/11/position = Vector2(1220, 1380)
nodes/light/12/node = SubResource("VisualShaderNodeInput_e8g3j")
nodes/light/12/position = Vector2(-420, 1220)
nodes/light/13/node = SubResource("VisualShaderNodeDotProduct_ns3hw")
nodes/light/13/position = Vector2(0, 1340)
nodes/light/16/node = SubResource("VisualShaderNodeTexture_ovaad")
nodes/light/16/position = Vector2(-1300, 1100)
nodes/light/17/node = SubResource("VisualShaderNodeClamp_6auyh")
nodes/light/17/position = Vector2(200, 1220)
nodes/light/19/node = SubResource("VisualShaderNodeInput_reqxo")
nodes/light/19/position = Vector2(-420, 1520)
nodes/light/20/node = SubResource("VisualShaderNodeInput_ekp67")
nodes/light/20/position = Vector2(100, 1500)
nodes/light/21/node = SubResource("VisualShaderNodeVectorOp_iofbm")
nodes/light/21/position = Vector2(460, 1240)
nodes/light/22/node = SubResource("VisualShaderNodeMix_ck2et")
nodes/light/22/position = Vector2(860, 1220)
nodes/light/23/node = SubResource("VisualShaderNodeFloatFunc_f2m0l")
nodes/light/23/position = Vector2(640, 1400)
nodes/light/25/node = SubResource("VisualShaderNodeMix_k1qbr")
nodes/light/25/position = Vector2(2220, 1180)
nodes/light/26/node = SubResource("VisualShaderNodeColorParameter_ioca7")
nodes/light/26/position = Vector2(940, 720)
nodes/light/27/node = SubResource("VisualShaderNodeTexture2DParameter_fdbnt")
nodes/light/27/position = Vector2(-540, 780)
nodes/light/28/node = SubResource("VisualShaderNodeTexture_54rfw")
nodes/light/28/position = Vector2(-105.501, 1032.88)
nodes/light/32/node = SubResource("VisualShaderNodeFloatParameter_ebfyt")
nodes/light/32/position = Vector2(960, 520)
nodes/light/35/node = SubResource("VisualShaderNodeMix_6y2l4")
nodes/light/35/position = Vector2(1340, 620)
nodes/light/37/node = SubResource("VisualShaderNodeBooleanParameter_x2o1m")
nodes/light/37/position = Vector2(1520, 500)
nodes/light/38/node = SubResource("VisualShaderNodeSwitch_ru784")
nodes/light/38/position = Vector2(2000, 660)
nodes/light/39/node = SubResource("VisualShaderNodeBooleanParameter_1n1ih")
nodes/light/39/position = Vector2(1900, 1520)
nodes/light/40/node = SubResource("VisualShaderNodeSwitch_sfp8n")
nodes/light/40/position = Vector2(2420, 1480)
nodes/light/41/node = SubResource("VisualShaderNodeMix_knqx8")
nodes/light/41/position = Vector2(1710.14, 1126.07)
nodes/light/42/node = SubResource("VisualShaderNodeFloatParameter_40cy3")
nodes/light/42/position = Vector2(-360, 1980)
nodes/light/connections = PackedInt32Array(12, 0, 13, 0, 17, 0, 21, 0, 20, 0, 21, 1, 21, 0, 23, 0, 3, 0, 4, 0, 26, 0, 35, 1, 32, 0, 35, 2, 35, 0, 38, 1, 26, 0, 38, 2, 38, 0, 25, 1, 27, 0, 28, 2, 10, 0, 22, 0, 23, 0, 22, 2, 22, 0, 11, 1, 19, 0, 13, 1, 13, 0, 17, 0, 4, 0, 11, 0, 25, 0, 40, 1, 22, 0, 41, 2, 38, 0, 41, 1, 41, 0, 40, 2, 28, 0, 10, 0, 16, 0, 28, 0, 42, 0, 4, 1, 37, 0, 38, 0, 39, 0, 40, 0, 40, 0, 0, 1, 11, 0, 25, 2)

[sub_resource type="Gradient" id="Gradient_mtt02"]

[sub_resource type="GradientTexture2D" id="GradientTexture2D_4me54"]
gradient = SubResource("Gradient_mtt02")
fill_from = Vector2(1, 0.995726)

[resource]
render_priority = 2
shader = SubResource("VisualShader_iqp7a")
shader_parameter/stayGlobal = false
shader_parameter/Color = Color(0.94902, 0.654902, 0.360784, 1)
shader_parameter/Texture2DParameter = SubResource("GradientTexture2D_4me54")
