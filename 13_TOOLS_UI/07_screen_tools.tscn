[gd_scene load_steps=46 format=3 uid="uid://bwmu5iwushsl5"]

[ext_resource type="Texture2D" uid="uid://d31xi5f7tan5w" path="res://05_SHADER_TEST/Full_screen/Dither_pattners/Blue_noise/HDR_LA_7.png" id="1_2l1ih"]
[ext_resource type="Script" path="res://13_TOOLS_UI/INSTANCE_NOTE.gd" id="1_fcb2u"]
[ext_resource type="Script" path="res://13_TOOLS_UI/Scanner_UI_dots_effect.gd" id="2_2br5g"]
[ext_resource type="Resource" uid="uid://duqn0ehtc8aao" path="res://12_INVENTORY/Words_note/FindSeagull_orders.tres" id="2_58sax"]
[ext_resource type="Resource" uid="uid://61umivwjjcjs" path="res://12_INVENTORY/Words_note/Birds_goLighthouse_note.tres" id="2_77vs0"]
[ext_resource type="Resource" uid="uid://bvadwmoawvfs0" path="res://12_INVENTORY/Words_note/Meet_Ela_note.tres" id="3_unfol"]
[ext_resource type="Texture2D" uid="uid://dto78na6ad5o2" path="res://00_SYSTEMS/KeyOrPad/Key_inputs.png" id="4_c4v0f"]
[ext_resource type="Material" uid="uid://bxikm4g1nkywk" path="res://06_UI/Disolved_simple_texture.tres" id="4_opffw"]
[ext_resource type="Resource" uid="uid://nb378vtwr23i" path="res://12_INVENTORY/Words_note/Find_The_Apicula_note.tres" id="4_whlox"]
[ext_resource type="Texture2D" uid="uid://4bq2l5jjm4r2" path="res://00_SYSTEMS/KeyOrPad/Pad_inputs.png" id="5_jufic"]
[ext_resource type="Script" path="res://13_TOOLS_UI/Noted_take.gd" id="8_1e106"]
[ext_resource type="Texture2D" uid="uid://b8a0h0ol2etdj" path="res://10_BOARD/00_BOOK/01_UI/cursor_book.png" id="8_1mkkt"]
[ext_resource type="PackedScene" uid="uid://clc3sbquuu1us" path="res://13_TOOLS_UI/Clock_montre/Clock_ui_prefab.tscn" id="11_0fkac"]

[sub_resource type="GDScript" id="GDScript_ebu32"]
script/source = "extends Node


@onready var front_element = $\"../Front_element\"




func _check_npc_photo():
	
	if _global_datas.Npc_Dialogue != null:
		var photodata = _global_datas.Npc_Dialogue.photo_data
		
		if check_photo_exist(photodata):
			return
			
		_global_datas._photo_flash.emit()	
			
		_global_datas.selected_photoData = photodata
		_global_datas.ui_photo_flash.emit()
		_global_datas.show_on_scanner.emit(true)
	
		
		_global_datas.photo_archives.append(photodata)
		_global_datas._show_object_legend.emit(true,photodata.legend)
	

func check_photo_exist(photo_Data):
	
	for photo in _global_datas.photo_archives:
		if photo == photo_Data:
			return true 	


"

[sub_resource type="GDScript" id="GDScript_cnn2b"]
script/source = "extends Node


@onready var description_text = $\"../../Description_Text\"

var t 
var _is_typing : bool = false

var ls_index : int = 0 
@onready var timer = $Timer

var info : info_data

func _ready():

	_global_datas._show_object_legend.connect(_update_text)
	_global_datas._change_language_state.connect(change_ls)

	
func change_ls(ls):
	ls_index = ls
	
	if info == null:
		return
	var info_reader = board_info_reader.new()
	var text_info = info_reader.node_by_name(info,ls_index)
	description_text.text = text_info
	
func _update_text(condition : bool, _info : info_data):
	
	if !condition:
		description_text.visible = false
		return
	
	info = _info
	var info_reader = board_info_reader.new()
	var text_info = info_reader.node_by_name(info,ls_index)

	description_text.visible = condition
	description_text.text = text_info
	var text_count = text_info.length()
	
	type_text(text_count)

func type_text(count : int):
	
	#timer.start()
	
	description_text.visible_ratio = 0.0
	var speed = 0.025 * count
	_is_typing = true
	
	
	var node = get_tree()
	if !node:
		return
	if t:
		t.kill()
	t = create_tween()
	
	t .tween_method(change_ration,0.0,1.0,speed)
	await create_tween().tween_interval(speed).finished

	_is_typing = false
	
func change_ration(value : float):
	description_text.visible_ratio = value
	



func _on_timer_timeout():
	_global_datas._show_object_legend.emit(false,null)
"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_uy744"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_rxrqi"]
parameter_name = "Noise"
texture_repeat = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_tysav"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_1rnw3"]
default_input_values = [0, 0.4, 1, 0.0, 2, 1.0]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_1llfs"]
constant = 5.0

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_koe1o"]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ql4qe"]
default_input_values = [1, Vector2(1, 0.5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_i57nw"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_atirq"]
default_input_values = [0, 0.0, 1, 0.001]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_05767"]
default_input_values = [0, 0.0, 1, 0.025]
operator = 2

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_lrevg"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_0tnew"]
size = Vector2(760, 540)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_6bqx5"]
constant = 5.011

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_e4o2p"]
constant = 0.105

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_0mmdj"]
default_input_values = [1, Vector2(0, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yw3km"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_7nvmw"]
default_input_values = [1, Vector2(1.8, 1), 2, Vector2(0.5, 0)]
function = 1

[sub_resource type="VisualShader" id="VisualShader_vokeb"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Noise : repeat_enable;
uniform float Opacity : hint_range(0, 1) = 0.5;



void fragment() {
// UVFunc:44
	vec2 n_in44p1 = vec2(1.00000, 0.50000);
	vec2 n_in44p2 = vec2(0.00000, 0.00000);
	vec2 n_out44p0 = (UV - n_in44p2) * n_in44p1 + n_in44p2;


// FloatConstant:42
	float n_out42p0 = 5.000000;


// Input:45
	float n_out45p0 = TIME;


// FloatOp:46
	float n_in46p1 = 0.00100;
	float n_out46p0 = n_out45p0 * n_in46p1;


// FloatOp:47
	float n_in47p1 = 0.02500;
	float n_out47p0 = n_out46p0 * n_in47p1;


// UVFunc:43
	vec2 n_out43p0 = (n_out44p0 - vec2(n_out47p0)) * vec2(n_out42p0) + vec2(n_out47p0);


	vec4 n_out36p0;
// Texture2D:36
	n_out36p0 = texture(Noise, n_out43p0);


// FloatParameter:34
	float n_out34p0 = Opacity;


// Mix:37
	float n_in37p0 = 0.40000;
	float n_out37p0 = mix(n_in37p0, n_out36p0.x, n_out34p0);


// Input:78
	vec2 n_out78p0 = UV;


// UVFunc:79
	vec2 n_in79p1 = vec2(1.80000, 1.00000);
	vec2 n_in79p2 = vec2(0.50000, 0.00000);
	vec2 n_out79p0 = (n_out78p0 - n_in79p2) * n_in79p1 + n_in79p2;


// UVFunc:77
	vec2 n_in77p1 = vec2(0.00000, 1.00000);
	vec2 n_in77p2 = vec2(0.00000, 0.00000);
	vec2 n_out77p0 = n_in77p2 * n_in77p1 + n_out79p0;


// FloatConstant:75
	float n_out75p0 = 0.105000;


// FloatConstant:74
	float n_out74p0 = 5.011000;


	vec4 n_out73p0;
// Expression:73
	n_out73p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out77p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out75p0,n_out75p0 + n_out74p0,d);
		n_out73p0 = vec4(vec3(c),1.0);
	}


// Step:49
	float n_out49p0 = step(n_out37p0, n_out73p0.x);


// Output:0
	COLOR.a = n_out49p0;


}
"
graph_offset = Vector2(-2097.69, 613.149)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(-400, 1800)
nodes/fragment/34/node = SubResource("VisualShaderNodeFloatParameter_uy744")
nodes/fragment/34/position = Vector2(-1800, 2680)
nodes/fragment/35/node = SubResource("VisualShaderNodeTexture2DParameter_rxrqi")
nodes/fragment/35/position = Vector2(-2400, 2740)
nodes/fragment/36/node = SubResource("VisualShaderNodeTexture_tysav")
nodes/fragment/36/position = Vector2(-1840, 2100)
nodes/fragment/37/node = SubResource("VisualShaderNodeMix_1rnw3")
nodes/fragment/37/position = Vector2(-1400, 2140)
nodes/fragment/42/node = SubResource("VisualShaderNodeFloatConstant_1llfs")
nodes/fragment/42/position = Vector2(-3400, 2760)
nodes/fragment/43/node = SubResource("VisualShaderNodeUVFunc_koe1o")
nodes/fragment/43/position = Vector2(-2900, 2680)
nodes/fragment/44/node = SubResource("VisualShaderNodeUVFunc_ql4qe")
nodes/fragment/44/position = Vector2(-3400, 2480)
nodes/fragment/45/node = SubResource("VisualShaderNodeInput_i57nw")
nodes/fragment/45/position = Vector2(-3700, 2980)
nodes/fragment/46/node = SubResource("VisualShaderNodeFloatOp_atirq")
nodes/fragment/46/position = Vector2(-3180, 2920)
nodes/fragment/47/node = SubResource("VisualShaderNodeFloatOp_05767")
nodes/fragment/47/position = Vector2(-3120, 3120)
nodes/fragment/49/node = SubResource("VisualShaderNodeStep_lrevg")
nodes/fragment/49/position = Vector2(-900, 1800)
nodes/fragment/73/node = SubResource("VisualShaderNodeExpression_0tnew")
nodes/fragment/73/position = Vector2(-2080, 1080)
nodes/fragment/73/size = Vector2(760, 540)
nodes/fragment/73/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/73/output_ports = "0,5,color;"
nodes/fragment/73/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/74/node = SubResource("VisualShaderNodeFloatConstant_6bqx5")
nodes/fragment/74/position = Vector2(-2620, 1320)
nodes/fragment/75/node = SubResource("VisualShaderNodeFloatConstant_e4o2p")
nodes/fragment/75/position = Vector2(-2560, 1100)
nodes/fragment/77/node = SubResource("VisualShaderNodeUVFunc_0mmdj")
nodes/fragment/77/position = Vector2(-2220, 700)
nodes/fragment/78/node = SubResource("VisualShaderNodeInput_yw3km")
nodes/fragment/78/position = Vector2(-3000, 640)
nodes/fragment/79/node = SubResource("VisualShaderNodeUVFunc_7nvmw")
nodes/fragment/79/position = Vector2(-2580, 780)
nodes/fragment/connections = PackedInt32Array(35, 0, 36, 2, 37, 0, 49, 0, 45, 0, 46, 0, 46, 0, 47, 0, 42, 0, 43, 1, 47, 0, 43, 2, 43, 0, 36, 0, 44, 0, 43, 0, 34, 0, 37, 2, 36, 0, 37, 1, 49, 0, 0, 1, 78, 0, 79, 0, 79, 0, 77, 0, 74, 0, 73, 2, 77, 0, 73, 0, 75, 0, 73, 1, 73, 0, 49, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_augab"]
shader = SubResource("VisualShader_vokeb")
shader_parameter/Opacity = 0.0
shader_parameter/Noise = ExtResource("1_2l1ih")

[sub_resource type="GDScript" id="GDScript_1c22g"]
script/source = "extends Node

@onready var pad_img = $\"../pad_img\"
@onready var key_img = $\"../key_img\"

@onready var material_pad : Material = pad_img.get_material()
@onready var material_key : Material = key_img.get_material()

var t
var actual_condition = false
func _ready():
	_global_datas.using_pad.connect(show_whats_used)
	
	
func show_whats_used(condition : bool):
	
	if actual_condition == condition:
		return 
	actual_condition = condition
		
	pad_img.visible = condition
	key_img.visible = !condition
	
	if t:
		t.kill()
	t = create_tween()
	
	if condition:
		t .tween_method(set_shader_value,1.0,0.0,1.0)
	else:
		t .tween_method(set_shader_value_key,1.0,0.0,1.0)	

func set_shader_value(value):
	
	material_pad.set_shader_parameter(\"Opacity\",value)

func set_shader_value_key(value):
	
	material_key.set_shader_parameter(\"Opacity\",value)
"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ump4c"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_iq5qb"]
constant = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_1yxey"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_pkny8"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_r8b16"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_tbhmt"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_t5wpx"]
function = 31

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u76xp"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShader" id="VisualShader_jkcb7"]
code = "shader_type canvas_item;
render_mode blend_mix, unshaded;

uniform vec4 ColorParameter : source_color;
uniform float Opacity : hint_range(0, 1) = 1;



void fragment() {
// ColorParameter:10
	vec4 n_out10p0 = ColorParameter;


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(TEXTURE, UV);
	float n_out7p4 = n_out7p0.a;


// FloatFunc:8
	float n_out8p0 = 1.0 - n_out7p4;


// FloatParameter:9
	float n_out9p0 = Opacity;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out9p0 - DITHER_THRESHOLDS[index];
	}


// Step:5
	float n_out5p0 = step(n_out8p0, n_out4p0);


// Output:0
	COLOR.rgb = vec3(n_out10p0.xyz);
	COLOR.a = n_out5p0;


}
"
mode = 1
flags/unshaded = true
flags/light_only = false
nodes/fragment/0/position = Vector2(640, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_iq5qb")
nodes/fragment/2/position = Vector2(-1040, 480)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_1yxey")
nodes/fragment/4/position = Vector2(-760, 340)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeStep_pkny8")
nodes/fragment/5/position = Vector2(180, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_r8b16")
nodes/fragment/6/position = Vector2(-740, -40)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_tbhmt")
nodes/fragment/7/position = Vector2(-300, -40)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatFunc_t5wpx")
nodes/fragment/8/position = Vector2(40, 40)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_u76xp")
nodes/fragment/9/position = Vector2(-1380, 160)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorParameter_ump4c")
nodes/fragment/10/position = Vector2(470.01, -110.066)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 1, 4, 0, 5, 1, 5, 0, 0, 1, 6, 0, 7, 2, 7, 4, 8, 0, 8, 0, 5, 0, 9, 0, 4, 0, 10, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ecg01"]
resource_local_to_scene = true
shader = SubResource("VisualShader_jkcb7")
shader_parameter/ColorParameter = Color(0.721569, 0.580392, 0.407843, 1)
shader_parameter/Opacity = 1.0

[node name="07_SCREEN_UI" type="Node"]

[node name="INSTANCE_PICTURES" type="Node" parent="."]
script = SubResource("GDScript_ebu32")

[node name="INSTANCE_NOTE" type="Node" parent="."]
script = ExtResource("1_fcb2u")
all_N_note = Array[Resource("res://12_INVENTORY/Words_note/Note_data.gd")]([ExtResource("2_58sax"), ExtResource("2_77vs0"), ExtResource("3_unfol"), ExtResource("4_whlox")])

[node name="Description" type="Node2D" parent="."]
position = Vector2(989, 752)

[node name="Update_description" type="Node" parent="Description"]
script = SubResource("GDScript_cnn2b")

[node name="Timer" type="Timer" parent="Description/Update_description"]
wait_time = 2.5
one_shot = true

[node name="Front_element" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[node name="Description_Text" type="Label" parent="."]
visible = false
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -300.0
offset_top = -135.0
offset_right = 300.0
offset_bottom = -35.0
grow_horizontal = 2
grow_vertical = 0
theme_override_colors/font_color = Color(0.721569, 0.580392, 0.407843, 1)
theme_override_font_sizes/font_size = 25
text = "Lorem ipsum "
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 1

[node name="Photo_tools" type="Node" parent="."]

[node name="Ui_Scanner_Dots" type="Node" parent="Photo_tools"]
script = ExtResource("2_2br5g")

[node name="Dots_scanner" type="ColorRect" parent="Photo_tools"]
material = SubResource("ShaderMaterial_augab")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
color = Color(0.784314, 0.709804, 0.513726, 1)

[node name="Inputs_used" type="Control" parent="."]
layout_mode = 3
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -128.0
offset_top = -111.0
offset_bottom = 17.0
grow_horizontal = 0
grow_vertical = 0

[node name="Show_Use_inputs" type="Node" parent="Inputs_used"]
script = SubResource("GDScript_1c22g")

[node name="pad_img" type="TextureRect" parent="Inputs_used"]
visible = false
material = ExtResource("4_opffw")
clip_contents = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("5_jufic")
expand_mode = 1
stretch_mode = 4

[node name="key_img" type="TextureRect" parent="Inputs_used"]
visible = false
material = ExtResource("4_opffw")
clip_contents = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = ExtResource("4_c4v0f")
expand_mode = 1
stretch_mode = 4

[node name="Information_noted" type="Control" parent="."]
layout_mode = 3
anchors_preset = 1
anchor_left = 1.0
anchor_right = 1.0
offset_left = -40.0
offset_bottom = 40.0
grow_horizontal = 0

[node name="Noted_take" type="Node" parent="Information_noted"]
script = ExtResource("8_1e106")

[node name="book_img" type="TextureRect" parent="Information_noted"]
visible = false
material = SubResource("ShaderMaterial_ecg01")
clip_contents = true
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -91.0
offset_top = 35.0
offset_right = -3.0
offset_bottom = 123.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.72783, 0.72783)
texture = ExtResource("8_1mkkt")
expand_mode = 1
stretch_mode = 4

[node name="Clock" parent="." instance=ExtResource("11_0fkac")]
offset_left = 620.0
offset_top = 67.0
offset_right = 660.0
offset_bottom = 107.0

[connection signal="timeout" from="Description/Update_description/Timer" to="Description/Update_description" method="_on_timer_timeout"]
