[gd_resource type="VisualShader" load_steps=16 format=3 uid="uid://db5bcfw5o30ce"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5ohxv"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_7uf03"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_0csn4"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bunws"]
input_name = "normal"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_bfg52"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_odkpw"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_nsrv7"]
parameter_name = "Main_color"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_q1hpv"]
parameter_name = "Main_color_02"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_3vt63"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_tlqco"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_pv8f1"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_44gfw"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="Gradient" id="Gradient_o0krw"]
offsets = PackedFloat32Array(0, 0.528875, 0.547112, 0.984802)
colors = PackedColorArray(1, 1, 1, 1, 0.0102558, 0.0102558, 0.0102558, 1, 0.0243161, 0.0243161, 0.0243161, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_2xai1"]
gradient = SubResource("Gradient_o0krw")
fill_from = Vector2(0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_msk2a"]
source = 5
texture = SubResource("GradientTexture2D_2xai1")

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 Main_color : source_color;
uniform sampler2D Gradiant;
global uniform float Dither_size;
uniform vec4 Main_color_02 : source_color;
global uniform bool isGray;



void fragment() {
// ColorParameter:17
	vec4 n_out17p0 = Main_color;


// Input:13
	vec3 n_out13p0 = NORMAL;


	vec4 n_out8p0;
// Texture2D:8
	n_out8p0 = texture(Gradiant, vec2(n_out13p0.xy));


// FloatConstant:10
	float n_out10p0 = 0.826000;


// FloatParameter:19
	float n_out19p0 = Dither_size;


	float n_out11p0;
// Expression:11
	n_out11p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out19p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out11p0 = n_out10p0 - DITHER_THRESHOLDS[index];
	}


// Step:12
	float n_out12p0 = step(n_out8p0.x, n_out11p0);


// ColorParameter:18
	vec4 n_out18p0 = Main_color_02;


// Mix:14
	vec3 n_out14p0 = mix(vec3(n_out17p0.xyz), vec3(n_out12p0), vec3(n_out18p0.xyz));


	float n_out20p0;
// Expression:20
	n_out20p0 = 0.0;
	{
		float luminance = 0.299 * n_out14p0.x + 0.587 * n_out14p0.y + 0.114 * n_out14p0.z;
		n_out20p0 = luminance;
	}


// BooleanParameter:22
	bool n_out22p0 = isGray;


// Mix:21
	vec3 n_out21p0 = mix(n_out14p0, vec3(n_out20p0), vec3(n_out22p0 ? 1.0 : 0.0));


// Output:0
	ALBEDO = n_out21p0;


}
"
flags/unshaded = true
nodes/fragment/0/position = Vector2(680, 220)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_msk2a")
nodes/fragment/8/position = Vector2(-1500, -380)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatConstant_5ohxv")
nodes/fragment/10/position = Vector2(-3000, -160)
nodes/fragment/11/node = SubResource("VisualShaderNodeExpression_7uf03")
nodes/fragment/11/position = Vector2(-2680, 60)
nodes/fragment/11/size = Vector2(724.789, 654.559)
nodes/fragment/11/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/11/output_ports = "0,0,Dither_Node;"
nodes/fragment/11/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/12/node = SubResource("VisualShaderNodeStep_0csn4")
nodes/fragment/12/position = Vector2(-1240, 400)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_bunws")
nodes/fragment/13/position = Vector2(-2080, -620)
nodes/fragment/14/node = SubResource("VisualShaderNodeMix_bfg52")
nodes/fragment/14/position = Vector2(-220, 220)
nodes/fragment/16/node = SubResource("VisualShaderNodeTexture2DParameter_odkpw")
nodes/fragment/16/position = Vector2(-2040, -420)
nodes/fragment/17/node = SubResource("VisualShaderNodeColorParameter_nsrv7")
nodes/fragment/17/position = Vector2(-660, -20)
nodes/fragment/18/node = SubResource("VisualShaderNodeColorParameter_q1hpv")
nodes/fragment/18/position = Vector2(-516.535, 450.105)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatParameter_3vt63")
nodes/fragment/19/position = Vector2(-3253.6, 45.0023)
nodes/fragment/20/node = SubResource("VisualShaderNodeExpression_tlqco")
nodes/fragment/20/position = Vector2(-300, -400)
nodes/fragment/20/size = Vector2(620, 200)
nodes/fragment/20/input_ports = "0,4,color;"
nodes/fragment/20/output_ports = "0,0,grey_value;"
nodes/fragment/20/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/21/node = SubResource("VisualShaderNodeMix_pv8f1")
nodes/fragment/21/position = Vector2(440, -60)
nodes/fragment/22/node = SubResource("VisualShaderNodeBooleanParameter_44gfw")
nodes/fragment/22/position = Vector2(-140, -40)
nodes/fragment/connections = PackedInt32Array(10, 0, 11, 0, 11, 0, 12, 1, 16, 0, 8, 2, 12, 0, 14, 1, 17, 0, 14, 0, 13, 0, 8, 0, 8, 0, 12, 0, 18, 0, 14, 2, 19, 0, 11, 1, 20, 0, 21, 1, 22, 0, 21, 2, 21, 0, 0, 0, 14, 0, 20, 0, 14, 0, 21, 0)
