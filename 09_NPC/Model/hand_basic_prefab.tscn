[gd_scene load_steps=52 format=3 uid="uid://4jlgiieqpdca"]

[ext_resource type="PackedScene" uid="uid://drunutsliuerk" path="res://09_NPC/Model/hand_basic.blend" id="1_b4yql"]

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_fga0a"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_6v33x"]
constant = 1.2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_mqxcy"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_onlou"]
function = 31

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_02qc0"]
constant = Color(0.00253758, 0.0101586, 0.0101586, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_wio8m"]
constant = 0.3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_l073x"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_yelev"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_mwet3"]
frequency = 0.005

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_634l2"]
noise = SubResource("FastNoiseLite_mwet3")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1aqw2"]
texture = SubResource("NoiseTexture2D_634l2")

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_58c2y"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_5yhcs"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_knqmn"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_r8xpi"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_d2rvk"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_5yopq"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_tyw8f"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_othgx"]
constant = 0.3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_76tnn"]
default_input_values = [0, 0.0, 1, 0.38]
operator = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_5o1pk"]
parameter_name = "Attenuation"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ny61k"]
constant = Color(0.00524036, 0.0173928, 0.0173929, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_xsbny"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ps5ro"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_oc8wl"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_l8rk2"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_6gii6"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShader" id="VisualShader_ibmoi"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_6;
uniform vec4 Color : source_color;
uniform float Attenuation = 1;



void fragment() {
// ColorConstant:17
	vec4 n_out17p0 = vec4(0.002538, 0.010159, 0.010159, 1.000000);


// FloatConstant:14
	float n_out14p0 = 1.200000;


// MultiplyAdd:13
	vec3 n_in13p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out13p0 = fma(vec3(n_out17p0.xyz), vec3(n_out14p0), n_in13p2);


// Texture2D:6
	vec4 n_out6p0 = texture(tex_frg_6, UV);


// FloatConstant:4
	float n_out4p0 = 1.000000;


// FloatConstant:3
	float n_out3p0 = 0.300000;


	float n_out5p0;
// Expression:5
	n_out5p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out3p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out5p0 = n_out4p0 - DITHER_THRESHOLDS[index];
	}


// Step:7
	float n_out7p0 = step(n_out6p0.x, n_out5p0);


// FloatFunc:16
	float n_out16p0 = 1.0 - n_out7p0;


// Mix:15
	vec3 n_out15p0 = mix(vec3(n_out17p0.xyz), n_out13p0, vec3(n_out16p0));


// Output:0
	ALBEDO = n_out15p0;


}

void light() {
// ColorConstant:27
	vec4 n_out27p0 = vec4(0.005240, 0.017393, 0.017393, 1.000000);


// ColorParameter:17
	vec4 n_out17p0 = Color;


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatConstant:2
	float n_out2p0 = 0.300000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:7
	vec3 n_out7p0 = NORMAL;


// Input:11
	vec3 n_out11p0 = LIGHT;


// DotProduct:8
	float n_out8p0 = dot(n_out7p0, n_out11p0);


// Clamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out8p0, n_in10p1, n_in10p2);


// Input:12
	float n_out12p0 = ATTENUATION;


// FloatParameter:25
	float n_out25p0 = Attenuation;


// FloatOp:24
	float n_out24p0 = pow(n_out12p0, n_out25p0);


// VectorOp:13
	vec2 n_out13p0 = vec2(n_out10p0) * vec2(n_out24p0);


// Step:6
	float n_out6p0 = step(n_out4p0, n_out13p0.x);


// Mix:16
	vec3 n_out16p0 = mix(vec3(n_out27p0.xyz), vec3(n_out17p0.xyz), vec3(n_out6p0));


// Output:0
	SPECULAR_LIGHT = n_out16p0;


}
"
graph_offset = Vector2(-487.038, -120.462)
nodes/vertex/0/position = Vector2(1020, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_wio8m")
nodes/fragment/3/position = Vector2(-1600, 1140)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_l073x")
nodes/fragment/4/position = Vector2(-1520, 1020)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_yelev")
nodes/fragment/5/position = Vector2(-1180, 1000)
nodes/fragment/5/size = Vector2(724.789, 654.559)
nodes/fragment/5/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/5/output_ports = "0,0,Dither_Node;"
nodes/fragment/5/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_1aqw2")
nodes/fragment/6/position = Vector2(-900, 700)
nodes/fragment/7/node = SubResource("VisualShaderNodeStep_58c2y")
nodes/fragment/7/position = Vector2(-440, 760)
nodes/fragment/13/node = SubResource("VisualShaderNodeMultiplyAdd_fga0a")
nodes/fragment/13/position = Vector2(-140, 320)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatConstant_6v33x")
nodes/fragment/14/position = Vector2(-340, 440)
nodes/fragment/15/node = SubResource("VisualShaderNodeMix_mqxcy")
nodes/fragment/15/position = Vector2(-100, 620)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatFunc_onlou")
nodes/fragment/16/position = Vector2(-240, 800)
nodes/fragment/17/node = SubResource("VisualShaderNodeColorConstant_02qc0")
nodes/fragment/17/position = Vector2(-700, 340)
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 1, 4, 0, 5, 0, 5, 0, 7, 1, 6, 0, 7, 0, 7, 0, 16, 0, 16, 0, 15, 2, 17, 0, 15, 0, 14, 0, 13, 1, 13, 0, 15, 1, 17, 0, 13, 0, 15, 0, 0, 0)
nodes/light/0/position = Vector2(1080, 480)
nodes/light/2/node = SubResource("VisualShaderNodeFloatConstant_othgx")
nodes/light/2/position = Vector2(-1860, 980)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_xsbny")
nodes/light/3/position = Vector2(-1780, 860)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_ps5ro")
nodes/light/4/position = Vector2(-1440, 840)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/6/node = SubResource("VisualShaderNodeStep_oc8wl")
nodes/light/6/position = Vector2(-800, 460)
nodes/light/7/node = SubResource("VisualShaderNodeInput_l8rk2")
nodes/light/7/position = Vector2(-2480, 340)
nodes/light/8/node = SubResource("VisualShaderNodeDotProduct_6gii6")
nodes/light/8/position = Vector2(-2060, 460)
nodes/light/10/node = SubResource("VisualShaderNodeClamp_5yhcs")
nodes/light/10/position = Vector2(-1860, 340)
nodes/light/11/node = SubResource("VisualShaderNodeInput_knqmn")
nodes/light/11/position = Vector2(-2480, 640)
nodes/light/12/node = SubResource("VisualShaderNodeInput_r8xpi")
nodes/light/12/position = Vector2(-1960, 620)
nodes/light/13/node = SubResource("VisualShaderNodeVectorOp_d2rvk")
nodes/light/13/position = Vector2(-1600, 360)
nodes/light/16/node = SubResource("VisualShaderNodeMix_5yopq")
nodes/light/16/position = Vector2(0, 380)
nodes/light/17/node = SubResource("VisualShaderNodeColorParameter_tyw8f")
nodes/light/17/position = Vector2(-860, 140)
nodes/light/24/node = SubResource("VisualShaderNodeFloatOp_76tnn")
nodes/light/24/position = Vector2(-1560, 580)
nodes/light/25/node = SubResource("VisualShaderNodeFloatParameter_5o1pk")
nodes/light/25/position = Vector2(-2140, 700)
nodes/light/27/node = SubResource("VisualShaderNodeColorConstant_ny61k")
nodes/light/27/position = Vector2(-240, 180)
nodes/light/connections = PackedInt32Array(7, 0, 8, 0, 8, 0, 10, 0, 11, 0, 8, 1, 10, 0, 13, 0, 2, 0, 4, 1, 3, 0, 4, 0, 4, 0, 6, 0, 13, 0, 6, 1, 12, 0, 24, 0, 24, 0, 13, 1, 25, 0, 24, 1, 6, 0, 16, 2, 17, 0, 16, 1, 16, 0, 0, 1, 27, 0, 16, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xna2s"]
render_priority = 0
shader = SubResource("VisualShader_ibmoi")
shader_parameter/Color = Color(0.541176, 0.529412, 0.396078, 1)
shader_parameter/Attenuation = 0.35

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5wdb4"]
parameter_name = "Dark_color"
qualifier = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_nnd0l"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_15wnf"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_21snx"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dwmwp"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_3m30o"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_spyi7"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_grq5y"]
constant = 0.2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_bgink"]
parameter_name = "isSubscene_value"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_godlg"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 1, 1)]
op_type = 3

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_0ac8c"]
parameter_name = "stayGlobal"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_yrjog"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wurr6"]
default_input_values = [0, 0.0, 1, 0.38]
operator = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_k6vk1"]
parameter_name = "Attenuation"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_f27i0"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_3oy5b"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_qo3ar"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5jrwc"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_0rtmb"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShader" id="VisualShader_s3ay2"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

global uniform vec4 Dark_color : source_color;
uniform bool stayGlobal = true;
uniform vec4 Color : source_color;
global uniform float isSubscene_value;
uniform float Attenuation = 1;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


}

void light() {
// BooleanParameter:22
	bool n_out22p0 = stayGlobal;


// ColorParameter:17
	vec4 n_out17p0 = Color;


// FloatParameter:20
	float n_out20p0 = isSubscene_value;


// Mix:21
	vec3 n_in21p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out21p0 = mix(n_in21p0, vec3(n_out17p0.xyz), vec3(n_out20p0));


	vec3 n_out23p0;
// Switch:23
	vec3 n_in23p2 = vec3(0.00000, 0.00000, 0.00000);
	n_out23p0 = mix(n_in23p2, n_out21p0, float(n_out22p0));


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatConstant:2
	float n_out2p0 = 0.200000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:7
	vec3 n_out7p0 = NORMAL;


// Input:11
	vec3 n_out11p0 = LIGHT;


// DotProduct:8
	float n_out8p0 = dot(n_out7p0, n_out11p0);


// Clamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out8p0, n_in10p1, n_in10p2);


// Input:12
	float n_out12p0 = ATTENUATION;


// FloatParameter:25
	float n_out25p0 = Attenuation;


// FloatOp:24
	float n_out24p0 = pow(n_out12p0, n_out25p0);


// VectorOp:13
	vec2 n_out13p0 = vec2(n_out10p0) * vec2(n_out24p0);


// Step:6
	float n_out6p0 = step(n_out4p0, n_out13p0.x);


// Mix:16
	vec3 n_in16p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out16p0 = mix(n_in16p0, n_out23p0, vec3(n_out6p0));


// Output:0
	SPECULAR_LIGHT = n_out16p0;


}
"
graph_offset = Vector2(-318.132, -80.6591)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_5wdb4")
nodes/fragment/2/position = Vector2(-160, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
nodes/light/2/node = SubResource("VisualShaderNodeFloatConstant_grq5y")
nodes/light/2/position = Vector2(-1860, 980)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_f27i0")
nodes/light/3/position = Vector2(-1780, 860)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_3oy5b")
nodes/light/4/position = Vector2(-1440, 840)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/6/node = SubResource("VisualShaderNodeStep_qo3ar")
nodes/light/6/position = Vector2(-800, 460)
nodes/light/7/node = SubResource("VisualShaderNodeInput_5jrwc")
nodes/light/7/position = Vector2(-2480, 340)
nodes/light/8/node = SubResource("VisualShaderNodeDotProduct_0rtmb")
nodes/light/8/position = Vector2(-2060, 460)
nodes/light/10/node = SubResource("VisualShaderNodeClamp_nnd0l")
nodes/light/10/position = Vector2(-1860, 340)
nodes/light/11/node = SubResource("VisualShaderNodeInput_15wnf")
nodes/light/11/position = Vector2(-2480, 640)
nodes/light/12/node = SubResource("VisualShaderNodeInput_21snx")
nodes/light/12/position = Vector2(-1960, 620)
nodes/light/13/node = SubResource("VisualShaderNodeVectorOp_dwmwp")
nodes/light/13/position = Vector2(-1600, 360)
nodes/light/16/node = SubResource("VisualShaderNodeMix_3m30o")
nodes/light/16/position = Vector2(0, 380)
nodes/light/17/node = SubResource("VisualShaderNodeColorParameter_spyi7")
nodes/light/17/position = Vector2(-860, 140)
nodes/light/20/node = SubResource("VisualShaderNodeFloatParameter_bgink")
nodes/light/20/position = Vector2(-860, -60)
nodes/light/21/node = SubResource("VisualShaderNodeMix_godlg")
nodes/light/21/position = Vector2(-460, 40)
nodes/light/22/node = SubResource("VisualShaderNodeBooleanParameter_0ac8c")
nodes/light/22/position = Vector2(-280, -80)
nodes/light/23/node = SubResource("VisualShaderNodeSwitch_yrjog")
nodes/light/23/position = Vector2(60, 80)
nodes/light/24/node = SubResource("VisualShaderNodeFloatOp_wurr6")
nodes/light/24/position = Vector2(-1560, 580)
nodes/light/25/node = SubResource("VisualShaderNodeFloatParameter_k6vk1")
nodes/light/25/position = Vector2(-2140, 700)
nodes/light/connections = PackedInt32Array(7, 0, 8, 0, 8, 0, 10, 0, 11, 0, 8, 1, 10, 0, 13, 0, 2, 0, 4, 1, 3, 0, 4, 0, 4, 0, 6, 0, 17, 0, 21, 1, 20, 0, 21, 2, 21, 0, 23, 1, 23, 0, 16, 1, 6, 0, 16, 2, 22, 0, 23, 0, 13, 0, 6, 1, 12, 0, 24, 0, 24, 0, 13, 1, 25, 0, 24, 1, 16, 0, 0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pcvgn"]
render_priority = 0
shader = SubResource("VisualShader_s3ay2")
shader_parameter/stayGlobal = true
shader_parameter/Color = Color(0.227451, 0.411765, 0.411765, 1)
shader_parameter/Attenuation = 1.735

[node name="hand_basic" instance=ExtResource("1_b4yql")]

[node name="Hand_basic" parent="." index="0"]
layers = 32
surface_material_override/0 = SubResource("ShaderMaterial_xna2s")

[node name="Manche" parent="." index="1"]
layers = 32
surface_material_override/0 = SubResource("ShaderMaterial_pcvgn")
