[gd_scene load_steps=31 format=3 uid="uid://dym7sjmq33hdc"]

[ext_resource type="Material" uid="uid://cnldw4hovjlgd" path="res://05_SHADER_TEST/Subscene_materials/Subscene_shine_elements_mat.tres" id="2_dulgr"]
[ext_resource type="Material" uid="uid://goq7y1lqdpxa" path="res://05_SHADER_TEST/Subscene_materials/element_subscene_x_ray_VFX_LIGHT.tres" id="3_cb240"]

[sub_resource type="GDScript" id="GDScript_vsb1f"]
script/source = "extends Node

@onready var root = $\"..\"
@onready var gpu_explosed = $\"../GPU_Explosed\"

func _ready():

	_global_datas.Mirror_vortex_Node = root
	#_global_datas._mirror_switch.connect(emit_fx)
	
func _remove_mirror():
	root.queue_free()
				
	
func emit_fx(value):
	gpu_explosed.emitting = true

"

[sub_resource type="GDScript" id="GDScript_tujf2"]
script/source = "extends Node

@onready var gpu_circle_effect = $\"../GPU_CircleEffect\"

@onready var render_vortex = $\"../Render_vortex\"
@onready var render_vortex_mat : Material = render_vortex.get_surface_override_material(0)

var t
var actual_value : float




func _on_mirror_prefabs_area_shape_entered(area_rid, area, area_shape_index, local_shape_index):
	if area:
		if area.get_node_or_null(\"Player_photoActive\"):
			start_tween(true)


func _on_mirror_prefabs_area_shape_exited(area_rid, area, area_shape_index, local_shape_index):
	if area:
		if area.get_node_or_null(\"Player_photoActive\"):
			start_tween(false)


func start_tween(condition : bool):
	
	
	gpu_circle_effect.emitting = condition
	if t:
		t.kill()	
	t = create_tween()	
	
	if condition:
		

		t.tween_method(change_value,0.5,1.0,0.25)		
			
	else:

		t.tween_method(change_value,actual_value,0.5,0.25)				

func change_value(value : float):
	render_vortex_mat.set_shader_parameter(\"Speed\",value)	
	var range_value = clampf(value * 2,1.0,1.05)
	render_vortex.scale = Vector3(range_value,range_value,range_value)
"

[sub_resource type="SphereMesh" id="SphereMesh_ic6q1"]

[sub_resource type="SphereMesh" id="SphereMesh_iskgr"]
lightmap_size_hint = Vector2i(17, 9)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_sfogy"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_5amth"]
default_input_values = [2, true, 3, 2.035]

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_rptpt"]
default_input_values = [2, true, 3, 4.135]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_gycj4"]
default_input_values = [0, 0.0, 1, 4.505, 2, 1.105]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_ul2ib"]
function = 31

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_dyvyn"]
default_input_values = [0, 0.0, 1, -0.26]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ovd8l"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_nssor"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fixfd"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_hc01c"]
constant = 0.1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_73ijq"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ofase"]
operator = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_uq8jc"]
noise_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_t0o2r"]
seamless = true
noise = SubResource("FastNoiseLite_uq8jc")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_8748o"]
texture = SubResource("NoiseTexture2D_t0o2r")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_k5fdg"]
default_input_values = [0, 0.0, 1, 0.045]
operator = 2

[sub_resource type="VisualShader" id="VisualShader_vn78f"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_front, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform sampler2D tex_vtx_8;
uniform vec4 ColorParameter : source_color;



void vertex() {
// Input:4
	float n_out4p0 = TIME;


// FloatConstant:5
	float n_out5p0 = 0.100000;


// FloatOp:7
	float n_out7p0 = n_out4p0 * n_out5p0;


// UVFunc:6
	vec2 n_in6p1 = vec2(1.00000, 1.00000);
	vec2 n_out6p0 = vec2(n_out7p0) * n_in6p1 + UV;


// Texture2D:8
	vec4 n_out8p0 = texture(tex_vtx_8, n_out6p0);


// FloatOp:9
	float n_in9p1 = 0.04500;
	float n_out9p0 = n_out8p0.x * n_in9p1;


// Input:2
	vec3 n_out2p0 = VERTEX;


// VectorOp:3
	vec4 n_out3p0 = vec4(n_out9p0) + vec4(n_out2p0, 0.0);


// Output:0
	VERTEX = vec3(n_out3p0.xyz);


}

void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// Fresnel:3
	float n_in3p3 = 2.03500;
	float n_out3p0 = pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in3p3);


// Fresnel:4
	float n_in4p3 = 4.13500;
	float n_out4p0 = pow(clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in4p3);


// FloatOp:7
	float n_in7p1 = -0.26000;
	float n_out7p0 = n_out4p0 * n_in7p1;


// Mix:5
	float n_out5p0 = mix(n_out3p0, n_out7p0, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out5p0;


}
"
graph_offset = Vector2(-585.502, 234.416)
modes/cull = 1
flags/unshaded = true
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_ovd8l")
nodes/vertex/2/position = Vector2(-500, 400)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_nssor")
nodes/vertex/3/position = Vector2(80, 120)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_fixfd")
nodes/vertex/4/position = Vector2(-1420, 160)
nodes/vertex/5/node = SubResource("VisualShaderNodeFloatConstant_hc01c")
nodes/vertex/5/position = Vector2(-1320, 320)
nodes/vertex/6/node = SubResource("VisualShaderNodeUVFunc_73ijq")
nodes/vertex/6/position = Vector2(-840, 280)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatOp_ofase")
nodes/vertex/7/position = Vector2(-1040, 320)
nodes/vertex/8/node = SubResource("VisualShaderNodeTexture_8748o")
nodes/vertex/8/position = Vector2(-560, -40)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatOp_k5fdg")
nodes/vertex/9/position = Vector2(-120, 20)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 1, 6, 0, 8, 0, 4, 0, 7, 0, 5, 0, 7, 1, 7, 0, 6, 2, 8, 0, 9, 0, 9, 0, 3, 0, 3, 0, 0, 0)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_sfogy")
nodes/fragment/2/position = Vector2(-340, 0)
nodes/fragment/3/node = SubResource("VisualShaderNodeFresnel_5amth")
nodes/fragment/3/position = Vector2(-380, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeFresnel_rptpt")
nodes/fragment/4/position = Vector2(-480, 440)
nodes/fragment/5/node = SubResource("VisualShaderNodeMix_gycj4")
nodes/fragment/5/position = Vector2(120.498, 375.416)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatFunc_ul2ib")
nodes/fragment/6/position = Vector2(-140, 580)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_dyvyn")
nodes/fragment/7/position = Vector2(140, 580)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 5, 0, 0, 1, 3, 0, 5, 0, 4, 0, 6, 0, 4, 0, 5, 2, 4, 0, 7, 0, 7, 0, 5, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rw8rk"]
render_priority = 0
shader = SubResource("VisualShader_vn78f")
shader_parameter/ColorParameter = Color(0.286275, 0.286275, 0.286275, 1)

[sub_resource type="SphereShape3D" id="SphereShape3D_b7y4g"]
radius = 0.0957538

[sub_resource type="Curve" id="Curve_o04a3"]
_data = [Vector2(0.00246305, 0.0469924), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_60tdt"]
curve = SubResource("Curve_o04a3")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_ov2hl"]
particle_flag_disable_z = true
emission_shape = 2
emission_sphere_radius = 0.6
gravity = Vector3(0, 0, 0)
tangential_accel_min = 0.9
tangential_accel_max = 1.0
scale_curve = SubResource("CurveTexture_60tdt")

[sub_resource type="SphereMesh" id="SphereMesh_8a3y3"]
radius = 0.05
height = 0.1
radial_segments = 16
rings = 16

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_tviuq"]
emission_shape = 2
emission_sphere_radius = 0.53
inherit_velocity_ratio = -0.525
direction = Vector3(0, 0, 0)
gravity = Vector3(0, 0, 0)
radial_accel_min = -3.0
scale_curve = SubResource("CurveTexture_60tdt")

[node name="Mirror_prefabs" type="Area3D"]
collision_layer = 4
collision_mask = 4

[node name="Mirror" type="Node" parent="."]
script = SubResource("GDScript_vsb1f")

[node name="PLayer_InZone" type="Node" parent="."]
script = SubResource("GDScript_tujf2")

[node name="Render_vortex" type="MeshInstance3D" parent="."]
layers = 32768
mesh = SubResource("SphereMesh_ic6q1")
skeleton = NodePath("")
surface_material_override/0 = ExtResource("3_cb240")

[node name="Render_vortex_globe" type="MeshInstance3D" parent="Render_vortex"]
transform = Transform3D(-5.62846e-08, 1.28764, 0, -1.28764, -5.62846e-08, 0, 0, 0, 1.28764, 0.0134362, 0.095031, 0)
layers = 32768
mesh = SubResource("SphereMesh_iskgr")
surface_material_override/0 = SubResource("ShaderMaterial_rw8rk")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1.42314, 0, 0, 0, 1.42314, 0, 0, 0, 1.42314, 0.0120305, 0.0105445, 0)
shape = SubResource("SphereShape3D_b7y4g")

[node name="GPU_CircleEffect" type="GPUParticles3D" parent="."]
layers = 4
material_override = ExtResource("2_dulgr")
emitting = false
amount = 250
process_material = SubResource("ParticleProcessMaterial_ov2hl")
draw_pass_1 = SubResource("SphereMesh_8a3y3")

[node name="GPU_Explosed" type="GPUParticles3D" parent="."]
layers = 4
material_override = ExtResource("2_dulgr")
emitting = false
amount = 250
one_shot = true
speed_scale = 2.0
explosiveness = 1.0
fixed_fps = 24
interpolate = false
fract_delta = false
process_material = SubResource("ParticleProcessMaterial_tviuq")
draw_pass_1 = SubResource("SphereMesh_8a3y3")

[connection signal="area_shape_entered" from="." to="PLayer_InZone" method="_on_mirror_prefabs_area_shape_entered"]
[connection signal="area_shape_exited" from="." to="PLayer_InZone" method="_on_mirror_prefabs_area_shape_exited"]
