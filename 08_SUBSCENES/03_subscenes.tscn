[gd_scene load_steps=66 format=3 uid="uid://nigmie4bbn6"]

[ext_resource type="Script" path="res://08_SUBSCENES/00_Scripts/Subscene_loader.gd" id="1_7uoo0"]
[ext_resource type="Script" path="res://13_TOOLS_UI/set_Resolution_viewports.gd" id="2_3srhu"]
[ext_resource type="PackedScene" uid="uid://g7u8o55jrnyy" path="res://08_SUBSCENES/Player_subscene/Player_sub.tscn" id="2_ri8q1"]
[ext_resource type="Script" path="res://03_CAMERA/CameraFollow_subscene.gd" id="2_tc6o2"]
[ext_resource type="Script" path="res://08_SUBSCENES/Tools/Switch_tools_input.gd" id="3_2mtx3"]
[ext_resource type="Material" uid="uid://dbu2q4lhlk8w5" path="res://05_SHADER_TEST/Full_screen/Subscene_screen/Main_subscene_dither.tres" id="3_w42nb"]
[ext_resource type="Material" uid="uid://b7ffjkgpmtkc6" path="res://05_SHADER_TEST/Full_screen/Subscene_screen/Scanner_x_subscene_dither.tres" id="4_bkck3"]
[ext_resource type="Resource" uid="uid://d11cl4f25dgwg" path="res://08_SUBSCENES/Tools/Flash_light.tres" id="4_h1r1k"]
[ext_resource type="Resource" uid="uid://380xcgsxw62f" path="res://08_SUBSCENES/Tools/Orbe_spawner.tres" id="5_5xftw"]
[ext_resource type="Script" path="res://08_SUBSCENES/Tools/Play_Orber_tool.gd" id="6_51m8x"]
[ext_resource type="Resource" uid="uid://vv3dws7dmhtd" path="res://08_SUBSCENES/Tools/Scanner.tres" id="6_b80v7"]
[ext_resource type="Script" path="res://08_SUBSCENES/Tools/PhotoData_list_update.gd" id="10_w7dre"]
[ext_resource type="Script" path="res://08_SUBSCENES/Mirror_out_element_VFX.gd" id="14_bj7yb"]
[ext_resource type="Resource" uid="uid://dqpl0ihtab1su" path="res://08_SUBSCENES/Tools/Fusion_tool.tres" id="14_glnqv"]
[ext_resource type="Script" path="res://03_CAMERA/Active_scene_viewports.gd" id="21_jai7k"]

[sub_resource type="GDScript" id="GDScript_btuws"]
script/source = "extends Node

@onready var subscenes_cam_scene = $\"../Viewport/Main\"
@onready var timer = $Timer

@onready var material : Material = subscenes_cam_scene.get_material()
@onready var subscenes_cam_scanner_x = $\"../Viewport/Scanner_x\"


@onready var active_scene_viewports = $\"../Viewport/Active_scene_viewports\"


func _ready():
	_global_datas._go_Subscene.connect(_fade_in)
	
func _fade_in():
	subscenes_cam_scene.visible = true
	subscenes_cam_scanner_x.visible = true

	timer.start()
	
	active_scene_viewports._active_viewports(true)
	

func _process(delta):
	

	if timer.is_stopped():
		return
		
	var lerp_time = lerp(0.0,1.0, timer.time_left / timer.wait_time)	
	material.set_shader_parameter(\"Opacity\",lerp_time)	
	

func _on_timer_timeout():
	timer.stop()
	_global_datas.show_3D_MainScene.emit(false)

"

[sub_resource type="GDScript" id="GDScript_4qsuv"]
script/source = "extends Node

@onready var subscenes_cam_scene = $\"../Viewport/Main\"
@onready var timer = $Timer

@onready var material : Material = subscenes_cam_scene.get_material()

@onready var subscenes_cam_scanner_x = $\"../Viewport/Scanner_x\"

@onready var active_scene_viewports = $\"../Viewport/Active_scene_viewports\"

func _ready():
	_global_datas._go_Mainscene.connect(_fade_out)
	
func _fade_out():
	timer.start()
	subscenes_cam_scanner_x.visible = false

	
	_global_datas.show_3D_MainScene.emit(true)
	active_scene_viewports._active_viewports(false)
	
	
	
func _process(delta):
	
	if timer.is_stopped():
		return
		
	var lerp_time = lerp(1.0,0.0, timer.time_left / timer.wait_time)	
	material.set_shader_parameter(\"Opacity\",lerp_time)	


func _on_timer_timeout():
	timer.stop()
	subscenes_cam_scene.visible = false
	
"

[sub_resource type="GDScript" id="GDScript_71vlv"]
script/source = "extends Node


var active = false


func _ready():
	_global_datas._end_ini_subscene.connect(is_active)
	_global_datas._go_Mainscene.connect(disable)

	
func in_mirror(condition : bool):
	active = !condition
func is_active():
	active = true

func disable():
	active = false

func _on_surface_trigger_area_shape_entered(area_rid, area, area_shape_index, local_shape_index):
	if !active:
		return
		
	if area:
		var player_is_here = area.get_node_or_null(\"Player_photoActive\")
		if player_is_here:
			#_global_datas._photo_flash.emit()
			_global_datas._go_Mainscene.emit()
			_global_datas._backFrom_subscene.emit()
			_global_datas.Player_InMirrorScene = false
	


"

[sub_resource type="GDScript" id="GDScript_nvaxv"]
script/source = "extends Node
@onready var subscenes_cam_scanner_x = $\"../Viewport/Scanner_x\"
@onready var material : Material = subscenes_cam_scanner_x.get_material()

var t
var actual_value : float

func _ready():
	
	_global_datas._scan_mirror_xray.connect(_flash_mirror)
	_global_datas._traceur_pause.connect(_set_paused)
	

func _set_paused(condition : bool):
	
	if condition:
		if t:
			t.kill()
	else :
		if t:
			t.kill()
		t = create_tween()
		t .tween_method(_set_opacity_value,actual_value,0,3.0)	
					
func _flash_mirror():

	#_global_datas.active_rapatrier_node = true
	if t:
		t.kill()
	t = create_tween()
	t .tween_method(_set_opacity_value,1.0,0,3.0)
	t.connect(\"finished\",done)
	
func done():
	pass
	#_global_datas.active_rapatrier_node = false
	
func _set_opacity_value( value : float):

	material.set_shader_parameter(\"Opacity\",value)	
	actual_value = value

"

[sub_resource type="ViewportTexture" id="ViewportTexture_gasoh"]
viewport_path = NodePath("Viewport/Main_SubViewport")

[sub_resource type="ViewportTexture" id="ViewportTexture_dqppn"]
viewport_path = NodePath("Viewport/Scanner_x_SubViewport")

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_3w81f"]
parameter_name = "Subscene_Darker_color"
qualifier = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_abf61"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_w67x6"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7uieb"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_hdslu"]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ware6"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_6qkhl"]
constant = 0.4

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_byfae"]
parameter_name = "Subscene_light_color"
qualifier = 1
default_value = Color(0.401313, 0.399257, 0, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jh5cn"]
default_input_values = [0, 0.0, 1, 0.665]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ll4uy"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1vypb"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_tbfgl"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_qf23q"]
constant = 1.156

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kq148"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_r4h88"]
default_input_values = [0, 0.0, 1, 0.125, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_6v3du"]
parameter_name = "Distance_power"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_fykmc"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_8ftyo"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_wdp26"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_kliuf"]
parameter_name = "Subscene_mirror_alpha"
qualifier = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_spa1s"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jf62u"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_a8ie7"]
default_input_values = [0, 0.0, 1, 0.03]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ytv0m"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vuhfu"]
parameter_name = "Distance_light"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_j88j7"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hpl21"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_ac1wj"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShader" id="VisualShader_uci2q"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, shadows_disabled, debug_shadow_splits;

global uniform vec4 Subscene_Darker_color : source_color;
uniform float Distance_power = 0.25;
global uniform vec4 Subscene_light_color : source_color;
uniform float Distance_light;
global uniform float Subscene_mirror_alpha = 0;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Subscene_Darker_color;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


}

void light() {
// Input:31
	vec3 n_out31p0 = ALBEDO;


// FloatParameter:33
	float n_out33p0 = Distance_power;


// FloatConstant:3
	float n_out3p0 = 1.156000;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:7
	vec3 n_out7p0 = NORMAL;


// Input:11
	vec3 n_out11p0 = LIGHT;


// DotProduct:8
	float n_out8p0 = dot(n_out7p0, n_out11p0);


// Clamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out8p0, n_in10p1, n_in10p2);


// Input:27
	float n_out27p0 = ATTENUATION;


// FloatOp:28
	float n_in28p1 = 1.00000;
	float n_out28p0 = n_out27p0 * n_in28p1;


// VectorOp:29
	vec3 n_out29p0 = vec3(n_out10p0) * vec3(n_out28p0);


// Step:6
	float n_out6p0 = step(n_out4p0, n_out29p0.x);


// Mix:32
	float n_in32p0 = 0.00000;
	float n_out32p0 = mix(n_in32p0, n_out33p0, n_out6p0);


// Mix:16
	vec3 n_in16p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out16p0 = mix(n_in16p0, n_out31p0, vec3(n_out32p0));


// ColorParameter:25
	vec4 n_out25p0 = Subscene_light_color;


// Input:12
	float n_out12p0 = ATTENUATION;


// FloatParameter:43
	float n_out43p0 = Distance_light;


// FloatOp:26
	float n_out26p0 = n_out12p0 * n_out43p0;


// VectorOp:13
	vec3 n_out13p0 = vec3(n_out10p0) * vec3(n_out26p0);


// Step:34
	float n_out34p0 = step(n_out4p0, n_out13p0.x);


// Mix:37
	vec3 n_out37p0 = mix(n_out16p0, vec3(n_out25p0.xyz), vec3(n_out34p0));


// Input:40
	float n_out40p0 = ATTENUATION;


// FloatOp:41
	float n_in41p1 = 0.03000;
	float n_out41p0 = n_out40p0 * n_in41p1;


// VectorOp:42
	vec3 n_out42p0 = vec3(n_out10p0) * vec3(n_out41p0);


// FloatParameter:39
	float n_out39p0 = Subscene_mirror_alpha;


// Mix:38
	vec3 n_out38p0 = mix(n_out37p0, n_out42p0, vec3(n_out39p0));


// Output:0
	SPECULAR_LIGHT = n_out38p0;


}
"
graph_offset = Vector2(-220.727, -92.3636)
flags/shadows_disabled = true
flags/debug_shadow_splits = true
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_3w81f")
nodes/fragment/2/position = Vector2(-340, -100)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
nodes/light/0/position = Vector2(1060, 580)
nodes/light/2/node = SubResource("VisualShaderNodeFloatConstant_6qkhl")
nodes/light/2/position = Vector2(-2200, 940)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_qf23q")
nodes/light/3/position = Vector2(-2200, 800)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_spa1s")
nodes/light/4/position = Vector2(-1920, 800)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/6/node = SubResource("VisualShaderNodeStep_j88j7")
nodes/light/6/position = Vector2(-1020, 320)
nodes/light/7/node = SubResource("VisualShaderNodeInput_hpl21")
nodes/light/7/position = Vector2(-2900, 140)
nodes/light/8/node = SubResource("VisualShaderNodeDotProduct_ac1wj")
nodes/light/8/position = Vector2(-2480, 260)
nodes/light/10/node = SubResource("VisualShaderNodeClamp_abf61")
nodes/light/10/position = Vector2(-2280, 140)
nodes/light/11/node = SubResource("VisualShaderNodeInput_w67x6")
nodes/light/11/position = Vector2(-2900, 440)
nodes/light/12/node = SubResource("VisualShaderNodeInput_7uieb")
nodes/light/12/position = Vector2(-2540, 560)
nodes/light/13/node = SubResource("VisualShaderNodeVectorOp_hdslu")
nodes/light/13/position = Vector2(-1980, 420)
nodes/light/16/node = SubResource("VisualShaderNodeMix_ware6")
nodes/light/16/position = Vector2(-40, -20)
nodes/light/25/node = SubResource("VisualShaderNodeColorParameter_byfae")
nodes/light/25/position = Vector2(-540, 380)
nodes/light/26/node = SubResource("VisualShaderNodeFloatOp_jh5cn")
nodes/light/26/position = Vector2(-2160, 540)
nodes/light/27/node = SubResource("VisualShaderNodeInput_ll4uy")
nodes/light/27/position = Vector2(-2027.75, 245.994)
nodes/light/28/node = SubResource("VisualShaderNodeFloatOp_1vypb")
nodes/light/28/position = Vector2(-1647.75, 225.994)
nodes/light/29/node = SubResource("VisualShaderNodeVectorOp_tbfgl")
nodes/light/29/position = Vector2(-1467.75, 105.994)
nodes/light/31/node = SubResource("VisualShaderNodeInput_kq148")
nodes/light/31/position = Vector2(-460, -140)
nodes/light/32/node = SubResource("VisualShaderNodeMix_r4h88")
nodes/light/32/position = Vector2(-180, 180)
nodes/light/33/node = SubResource("VisualShaderNodeFloatParameter_6v3du")
nodes/light/33/position = Vector2(-820, -20)
nodes/light/34/node = SubResource("VisualShaderNodeStep_fykmc")
nodes/light/34/position = Vector2(-1020, 520)
nodes/light/37/node = SubResource("VisualShaderNodeMix_8ftyo")
nodes/light/37/position = Vector2(440, 560)
nodes/light/38/node = SubResource("VisualShaderNodeMix_wdp26")
nodes/light/38/position = Vector2(510.145, 895.325)
nodes/light/39/node = SubResource("VisualShaderNodeFloatParameter_kliuf")
nodes/light/39/position = Vector2(60, 1040)
nodes/light/40/node = SubResource("VisualShaderNodeInput_jf62u")
nodes/light/40/position = Vector2(-1071.22, 1056.26)
nodes/light/41/node = SubResource("VisualShaderNodeFloatOp_a8ie7")
nodes/light/41/position = Vector2(-691.216, 1036.26)
nodes/light/42/node = SubResource("VisualShaderNodeVectorOp_ytv0m")
nodes/light/42/position = Vector2(-511.216, 916.257)
nodes/light/43/node = SubResource("VisualShaderNodeFloatParameter_vuhfu")
nodes/light/43/position = Vector2(-2460, 660)
nodes/light/connections = PackedInt32Array(10, 0, 13, 0, 2, 0, 4, 1, 3, 0, 4, 0, 12, 0, 26, 0, 26, 0, 13, 1, 10, 0, 29, 0, 32, 0, 16, 2, 33, 0, 32, 1, 6, 0, 32, 2, 25, 0, 37, 1, 16, 0, 37, 0, 34, 0, 37, 2, 27, 0, 28, 0, 28, 0, 29, 1, 8, 0, 10, 0, 7, 0, 8, 0, 29, 0, 6, 1, 31, 0, 16, 1, 13, 0, 34, 1, 11, 0, 8, 1, 4, 0, 34, 0, 4, 0, 6, 0, 39, 0, 38, 2, 38, 0, 0, 1, 37, 0, 38, 0, 40, 0, 41, 0, 41, 0, 42, 1, 10, 0, 42, 0, 42, 0, 38, 1, 43, 0, 26, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_toa8a"]
render_priority = 0
shader = SubResource("VisualShader_uci2q")
shader_parameter/Distance_power = -1.435
shader_parameter/Distance_light = 0.2

[sub_resource type="PlaneMesh" id="PlaneMesh_8q6wo"]
material = SubResource("ShaderMaterial_toa8a")
size = Vector2(10, 10)

[sub_resource type="Gradient" id="Gradient_wtm6t"]

[sub_resource type="GradientTexture2D" id="GradientTexture2D_twljs"]
gradient = SubResource("Gradient_wtm6t")
width = 1024
height = 1024
fill_from = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3d0nm"]
texture = SubResource("GradientTexture2D_twljs")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_tryc5"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_dv13s"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_cil7a"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_ydhyw"]
function = 31

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_lfhds"]
constant = Color(0.00866908, 0.0951614, 0.110476, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vfvbk"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShader" id="VisualShader_iok4r"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform sampler2D tex_frg_2;
global uniform float Dither_size;



void fragment() {
// ColorConstant:8
	vec4 n_out8p0 = vec4(0.008669, 0.095161, 0.110476, 1.000000);


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// FloatFunc:7
	float n_out7p0 = 1.0 - n_out2p0.x;


// FloatConstant:4
	float n_out4p0 = 1.000000;


// FloatParameter:9
	float n_out9p0 = Dither_size;


	float n_out5p0;
// Expression:5
	n_out5p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out9p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out5p0 = n_out4p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_out6p0 = step(n_out7p0, n_out5p0);


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	ALPHA = n_out6p0;


}
"
flags/unshaded = true
nodes/fragment/0/position = Vector2(660, 320)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_3d0nm")
nodes/fragment/2/position = Vector2(-420, 20)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_tryc5")
nodes/fragment/4/position = Vector2(-1200, 340)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_dv13s")
nodes/fragment/5/position = Vector2(-880, 560)
nodes/fragment/5/size = Vector2(724.789, 654.559)
nodes/fragment/5/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/5/output_ports = "0,0,Dither_Node;"
nodes/fragment/5/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_cil7a")
nodes/fragment/6/position = Vector2(400, 380)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_ydhyw")
nodes/fragment/7/position = Vector2(-20, 60)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorConstant_lfhds")
nodes/fragment/8/position = Vector2(380, 60)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_vfvbk")
nodes/fragment/9/position = Vector2(-1300, 640)
nodes/fragment/connections = PackedInt32Array(4, 0, 5, 0, 8, 0, 0, 0, 5, 0, 6, 1, 7, 0, 6, 0, 6, 0, 0, 1, 9, 0, 5, 1, 2, 0, 7, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5os4v"]
render_priority = 0
shader = SubResource("VisualShader_iok4r")

[sub_resource type="PlaneMesh" id="PlaneMesh_llvpy"]
material = SubResource("ShaderMaterial_5os4v")
size = Vector2(10, 10)

[sub_resource type="BoxShape3D" id="BoxShape3D_qfjre"]
size = Vector3(2.03379, 0.029557, 10.4284)

[node name="03_SUBSCENES" type="Node"]
script = ExtResource("1_7uoo0")
metadata/_edit_vertical_guides_ = [960.0]
metadata/_edit_horizontal_guides_ = [540.0]

[node name="set_Resolution" type="Node" parent="." node_paths=PackedStringArray("viewports")]
script = ExtResource("2_3srhu")
viewports = [NodePath("../Viewport/Main_SubViewport"), NodePath("../Viewport/Scanner_x_SubViewport")]

[node name="PhotoData_list_update" type="Node" parent="."]
script = ExtResource("10_w7dre")

[node name="FADE_IN" type="Node" parent="."]
script = SubResource("GDScript_btuws")

[node name="Timer" type="Timer" parent="FADE_IN"]

[node name="FADE_OUT" type="Node" parent="."]
script = SubResource("GDScript_4qsuv")

[node name="Timer" type="Timer" parent="FADE_OUT"]

[node name="GO_SURFACE" type="Node" parent="."]
script = SubResource("GDScript_71vlv")

[node name="TOOLS" type="Node" parent="."]

[node name="Switch_tools_input" type="Node" parent="TOOLS"]
script = ExtResource("3_2mtx3")
tool_list = Array[Resource("res://08_SUBSCENES/Tools/Tools_Data.gd")]([ExtResource("4_h1r1k"), ExtResource("14_glnqv"), ExtResource("6_b80v7"), ExtResource("5_5xftw")])

[node name="Action_inputs_call" type="Node" parent="TOOLS"]
script = ExtResource("6_51m8x")
light_tool = ExtResource("4_h1r1k")
Scanner_tool = ExtResource("6_b80v7")

[node name="SEE_MIRROR_FLASH" type="Node" parent="."]
script = SubResource("GDScript_nvaxv")

[node name="Viewport" type="Node" parent="."]

[node name="Active_scene_viewports" type="Node" parent="Viewport" node_paths=PackedStringArray("viewports")]
script = ExtResource("21_jai7k")
viewports = [NodePath("../Main_SubViewport"), NodePath("../Scanner_x_SubViewport")]

[node name="All_cam_follow" type="Node" parent="Viewport" node_paths=PackedStringArray("_all_cam_array")]
script = ExtResource("2_tc6o2")
_all_cam_array = [NodePath("../Main_SubViewport/CAM_STATE_MAIN"), NodePath("../Scanner_x_SubViewport/CAM_STATE_BOAT")]
basePos = Vector3(0, -0.35, 0)

[node name="Main_SubViewport" type="SubViewport" parent="Viewport"]
handle_input_locally = false
size = Vector2i(1920, 1080)

[node name="CAM_STATE_MAIN" type="Camera3D" parent="Viewport/Main_SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 1.8)
cull_mask = 4

[node name="Scanner_x_SubViewport" type="SubViewport" parent="Viewport"]
process_thread_group = 1
process_thread_group_order = 2
process_thread_messages = 0
transparent_bg = true
handle_input_locally = false
size = Vector2i(1920, 1080)

[node name="CAM_STATE_BOAT" type="Camera3D" parent="Viewport/Scanner_x_SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 1.8)
cull_mask = 4096

[node name="Main" type="TextureRect" parent="Viewport"]
visible = false
material = ExtResource("3_w42nb")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = SubResource("ViewportTexture_gasoh")
expand_mode = 3

[node name="Scanner_x" type="TextureRect" parent="Viewport"]
visible = false
material = ExtResource("4_bkck3")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
texture = SubResource("ViewportTexture_dqppn")
expand_mode = 3

[node name="Mirror_out_element_VFX" type="Node" parent="."]
script = ExtResource("14_bj7yb")

[node name="Player_Sub" parent="." instance=ExtResource("2_ri8q1")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.334, 0)
collision_layer = 6
collision_mask = 6
mass = 5.0
angular_damp = 2.5
actual_speed = 6.0
hight_speed = 8.0
normal_speed = 6.0
maxSpeed = 5.0

[node name="SubScene_back" type="MeshInstance3D" parent="."]
transform = Transform3D(29.7684, 0, 0, 0, 2.38419e-07, -19.1352, 0, 7.74673, 5.88919e-07, 0, -20.3691, -16.9804)
layers = 4
mesh = SubResource("PlaneMesh_8q6wo")

[node name="WATER_SURFACE" type="MeshInstance3D" parent="."]
transform = Transform3D(11.2155, 0, 0, 0, -7.74673, 4.39024e-08, 0, -6.77241e-07, -0.502185, 0, 0.964028, -0.773959)
layers = 4
mesh = SubResource("PlaneMesh_llvpy")

[node name="Surface_trigger" type="Area3D" parent="."]
transform = Transform3D(11.2155, 0, 0, 0, -7.74673, 4.39024e-08, 0, -6.77241e-07, -0.502185, 0, 1.0465, -0.242)
collision_layer = 4
collision_mask = 4
collision_priority = 0.0
input_ray_pickable = false

[node name="CollisionShape3D" type="CollisionShape3D" parent="Surface_trigger"]
shape = SubResource("BoxShape3D_qfjre")

[node name="LoadScene" type="Node" parent="."]

[node name="load_sublevel" type="ProgressBar" parent="."]
visible = false
offset_left = 7.0
offset_top = 26.0
offset_right = 60.0
offset_bottom = 58.0
scale = Vector2(0.602919, 0.602919)
theme_override_font_sizes/font_size = 20

[connection signal="timeout" from="FADE_IN/Timer" to="FADE_IN" method="_on_timer_timeout"]
[connection signal="timeout" from="FADE_OUT/Timer" to="FADE_OUT" method="_on_timer_timeout"]
[connection signal="area_shape_entered" from="Surface_trigger" to="GO_SURFACE" method="_on_surface_trigger_area_shape_entered"]
