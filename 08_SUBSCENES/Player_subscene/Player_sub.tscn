[gd_scene load_steps=82 format=3 uid="uid://g7u8o55jrnyy"]

[ext_resource type="Material" uid="uid://cf6ce8cjrx4es" path="res://05_SHADER_TEST/Subscene_materials/Subscene_basic_mat.tres" id="1_n1vw4"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/Player_sub_behaviour.gd" id="1_o2v73"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/Active_ZoneCollide.gd" id="3_k136c"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/Flash_inputs.gd" id="3_p6pm7"]
[ext_resource type="ArrayMesh" uid="uid://cm4cl6n84qj86" path="res://00_PLAYER/Boat/Boat_smoke/smoke_msh.obj" id="4_6vpi7"]
[ext_resource type="Script" path="res://08_SUBSCENES/Tools/Scanne_element.gd" id="5_jhkow"]
[ext_resource type="Resource" uid="uid://d11cl4f25dgwg" path="res://08_SUBSCENES/Tools/Flash_light.tres" id="6_axu5t"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/active_tool_scene.gd" id="8_8bfcd"]
[ext_resource type="Material" uid="uid://cnldw4hovjlgd" path="res://05_SHADER_TEST/Subscene_materials/Subscene_shine_elements_mat.tres" id="8_wvhjt"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/Active_scanner_visual_pulse.gd" id="10_ir8y2"]
[ext_resource type="Shader" uid="uid://drchaj5fcdan0" path="res://05_SHADER_TEST/Subscene_materials/Subscene_shine_sh.tres" id="12_cij64"]
[ext_resource type="Resource" uid="uid://380xcgsxw62f" path="res://08_SUBSCENES/Tools/Orbe_spawner.tres" id="12_nmehd"]
[ext_resource type="PackedScene" uid="uid://bktiy5sdjc87f" path="res://08_SUBSCENES/Player_subscene/Cosmo_Mod_01.blend" id="14_tdqlw"]
[ext_resource type="Material" uid="uid://cdnmf431kgh7" path="res://05_SHADER_TEST/Subscene_materials/Subscene_basic_mat_far.tres" id="15_evn0r"]
[ext_resource type="Resource" uid="uid://vv3dws7dmhtd" path="res://08_SUBSCENES/Tools/Scanner.tres" id="15_vswql"]
[ext_resource type="Script" path="res://08_SUBSCENES/Oddity/Scanner/Attract.gd" id="16_k51d3"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/look_at_camera.gd" id="17_mnoui"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/Push.gd" id="17_qkxfn"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_c70j3"]
bounce = 0.8

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_lp7h6"]
radius = 0.13152
height = 0.26304

[sub_resource type="GDScript" id="GDScript_lbkea"]
script/source = "extends Node

@onready var timer = $Timer

signal iniPos

func _ready():
	_global_datas._start_ini_subscene.connect(_ini)


func _ini():

	iniPos.emit()
	timer.start()


func _on_timer_timeout():
	_global_datas._end_ini_subscene.emit()
	

"

[sub_resource type="GDScript" id="GDScript_mbf75"]
script/source = "extends Node

var t
@onready var light_sphere = $\"../../Render_mesh/Light_Position/Light_sphere\"


func _ready():
	_global_datas._photo_flash.connect(_start_flash)

func _start_flash():


	
	light_sphere.visible = true

	if t:
		t.kill()
		
	t = create_tween()
	
	t.tween_method(change_scale,0.5,0.0,2.0)
	t.connect(\"finished\",done)

func change_scale(value : float):
	light_sphere.scale = Vector3(value,value,value)		

func done():
	light_sphere.visible = false


"

[sub_resource type="GDScript" id="GDScript_8qwgp"]
script/source = "extends Node

@onready var omni_light_3d = $\"../Light\"
@onready var omny_range : float 

var t

func _ready():
	_global_datas._photo_flash.connect(_take_photo)
	omny_range = omni_light_3d.omni_range
	
func _take_photo():

	if t:
		t.kill()
	t = create_tween()
	
	t .tween_method(set_shader_value,2.5,omny_range,2.0)

func set_shader_value(value):
	omni_light_3d.omni_range = value


"

[sub_resource type="BoxMesh" id="BoxMesh_8vb5i"]

[sub_resource type="TorusMesh" id="TorusMesh_507c3"]
inner_radius = 2.287
outer_radius = 2.545
rings = 32
ring_segments = 16

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_53ku2"]
parameter_name = "Light_color_ui"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cyinv"]
constant = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_teiut"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_1ycy5"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_q1plc"]
constant = 1.073

[sub_resource type="VisualShader" id="VisualShader_clku3"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

global uniform vec4 Light_color_ui : source_color;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Light_color_ui;


// FloatConstant:7
	float n_out7p0 = 1.073000;


// FloatConstant:3
	float n_out3p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out3p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out7p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_out6p0 = step(n_out2p0.x, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	ALPHA = n_out6p0;


}
"
flags/unshaded = true
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_53ku2")
nodes/fragment/2/position = Vector2(-760, -40)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_cyinv")
nodes/fragment/3/position = Vector2(-1380, 520)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_teiut")
nodes/fragment/4/position = Vector2(-1200, 380)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_1ycy5")
nodes/fragment/6/position = Vector2(-351.825, 215.819)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_q1plc")
nodes/fragment/7/position = Vector2(-1440, 360)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 4, 1, 4, 0, 6, 1, 2, 0, 6, 0, 6, 0, 0, 1, 7, 0, 4, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8eybx"]
render_priority = 0
shader = SubResource("VisualShader_clku3")

[sub_resource type="TorusMesh" id="TorusMesh_ljaqx"]
inner_radius = 3.922
outer_radius = 2.545
rings = 32
ring_segments = 16

[sub_resource type="TorusMesh" id="TorusMesh_k0nng"]
outer_radius = 0.65
rings = 16
ring_segments = 8

[sub_resource type="BoxMesh" id="BoxMesh_ptf3k"]

[sub_resource type="BoxMesh" id="BoxMesh_laopn"]

[sub_resource type="SphereMesh" id="SphereMesh_gj0qo"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_j5ih5"]
render_priority = 1
shader = ExtResource("12_cij64")
shader_parameter/ColorParameter2 = Color(0.180392, 0.462745, 0.337255, 1)

[sub_resource type="BoxMesh" id="BoxMesh_3nn6t"]

[sub_resource type="QuadMesh" id="QuadMesh_uqek7"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_uklap"]
default_input_values = [1, Vector2(0, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_7p2ft"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_77j0m"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_hj8fs"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_8iwnl"]
parameter_name = "flash_opacity"
hint = 1
max = 0.5
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_k1h02"]
default_input_values = [0, 0.03, 1, 0.065, 2, 0.26]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_npl1s"]
parameter_name = "Size"
default_value_enabled = true
default_value = 0.7

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_qpe65"]
parameter_name = "R"
default_value_enabled = true
default_value = 0.11

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_af5ld"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_wf0q3"]
default_input_values = [2, true, 3, 9.975]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_q8p0r"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_byinl"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_oi1jr"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_207ff"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_eey31"]
input_name = "uv"

[sub_resource type="VisualShader" id="VisualShader_75hiu"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_front, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform vec4 ColorParameter : source_color;
uniform float R = 0.10999999940395;
uniform float Size = 0.69999998807907;
uniform float flash_opacity : hint_range(0, 0.5) = 0.5;
global uniform float Dither_size;



void fragment() {
// ColorParameter:3
	vec4 n_out3p0 = ColorParameter;


// Input:9
	vec2 n_out9p0 = UV;


// UVFunc:10
	vec2 n_in10p1 = vec2(0.00000, 1.00000);
	vec2 n_in10p2 = vec2(0.00000, 0.00000);
	vec2 n_out10p0 = n_in10p2 * n_in10p1 + n_out9p0;


// FloatParameter:18
	float n_out18p0 = R;


// FloatParameter:17
	float n_out17p0 = Size;


	vec4 n_out11p0;
// Expression:11
	n_out11p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out10p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out18p0,n_out18p0 + n_out17p0,d);
		n_out11p0 = vec4(vec3(c),1.0);
	}


// FloatParameter:15
	float n_out15p0 = flash_opacity;


// FloatParameter:7
	float n_out7p0 = Dither_size;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out7p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out15p0 - DITHER_THRESHOLDS[index];
	}


// Step:12
	float n_out12p0 = step(n_out11p0.x, n_out14p0);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out12p0;


}
"
graph_offset = Vector2(-1179.91, -125.15)
modes/cull = 1
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_af5ld")
nodes/fragment/3/position = Vector2(-680, 20)
nodes/fragment/4/node = SubResource("VisualShaderNodeFresnel_wf0q3")
nodes/fragment/4/position = Vector2(-420, 280)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_q8p0r")
nodes/fragment/5/position = Vector2(-1500, 1360)
nodes/fragment/6/node = SubResource("VisualShaderNodeExpression_byinl")
nodes/fragment/6/position = Vector2(-1200, 1480)
nodes/fragment/6/size = Vector2(724.789, 654.559)
nodes/fragment/6/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/6/output_ports = "0,0,Dither_Node;"
nodes/fragment/6/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_oi1jr")
nodes/fragment/7/position = Vector2(-2540, 620)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_207ff")
nodes/fragment/8/position = Vector2(100, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_eey31")
nodes/fragment/9/position = Vector2(-4460, -500)
nodes/fragment/10/node = SubResource("VisualShaderNodeUVFunc_uklap")
nodes/fragment/10/position = Vector2(-3880, -560)
nodes/fragment/11/node = SubResource("VisualShaderNodeExpression_7p2ft")
nodes/fragment/11/position = Vector2(-3620, -340)
nodes/fragment/11/size = Vector2(513.781, 284.487)
nodes/fragment/11/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/11/output_ports = "0,5,color;"
nodes/fragment/11/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/12/node = SubResource("VisualShaderNodeStep_77j0m")
nodes/fragment/12/position = Vector2(-760, 300)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_hj8fs")
nodes/fragment/14/position = Vector2(-1760, -200)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_8iwnl")
nodes/fragment/15/position = Vector2(-3980, 300)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_k1h02")
nodes/fragment/16/position = Vector2(0, -300)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatParameter_npl1s")
nodes/fragment/17/position = Vector2(-4360, 0)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatParameter_qpe65")
nodes/fragment/18/position = Vector2(-4200, -300)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 5, 0, 6, 0, 7, 0, 6, 1, 6, 0, 8, 0, 4, 0, 8, 1, 10, 0, 11, 0, 12, 0, 16, 1, 11, 0, 12, 0, 14, 0, 12, 1, 15, 0, 14, 0, 17, 0, 11, 2, 18, 0, 11, 1, 9, 0, 10, 0, 12, 0, 0, 1, 7, 0, 14, 1)
nodes/light/0/position = Vector2(1060, 580)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4j2xv"]
render_priority = 0
shader = SubResource("VisualShader_75hiu")
shader_parameter/ColorParameter = Color(0.254902, 0.65098, 0.470588, 1)
shader_parameter/R = 0.11
shader_parameter/Size = 0.7
shader_parameter/flash_opacity = 0.5

[sub_resource type="Curve" id="Curve_mwumu"]
_data = [Vector2(0, 0.56015), 0.0, 0.0, 0, 0, Vector2(1, 0.181391), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_wj6vn"]
curve = SubResource("Curve_mwumu")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_icvuv"]
emission_shape = 2
emission_sphere_radius = 0.15
direction = Vector3(0, 0, 0)
spread = 180.0
gravity = Vector3(0, 0, 0)
radial_accel_min = -0.5
scale_min = 0.03
scale_max = 0.05
scale_curve = SubResource("CurveTexture_wj6vn")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_inbo0"]
shading_mode = 0
albedo_color = Color(0.815686, 0.654902, 0.423529, 1)

[sub_resource type="SphereMesh" id="SphereMesh_6ufqt"]
material = SubResource("StandardMaterial3D_inbo0")
radius = 0.25
height = 0.5
radial_segments = 8
rings = 8

[sub_resource type="SphereShape3D" id="SphereShape3D_g1ic5"]
radius = 0.303955

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_gp5bj"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_v5j0a"]
constant = Color(0.167591, 0.231187, 0.314371, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ocuib"]
default_input_values = [0, 0.0, 1, 1.0, 2, -0.135]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_etyct"]
output_port_for_preview = 0
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_l8b5q"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_y6t3h"]
size = Vector2(634.014, 470.339)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_oo3k7"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_hc8ne"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_u37kw"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_a018s"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_f165y"]
constant = 0.3

[sub_resource type="VisualShader" id="VisualShader_lmymd"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

global uniform bool isGray;
global uniform float Dither_size;



void fragment() {
// ColorConstant:15
	vec4 n_out15p0 = vec4(0.167591, 0.231187, 0.314371, 1.000000);


	float n_out30p0;
// Expression:30
	n_out30p0 = 0.0;
	{
		float luminance = 0.299 * vec3(n_out15p0.xyz).x + 0.587 * vec3(n_out15p0.xyz).y + 0.114 * vec3(n_out15p0.xyz).z;
		n_out30p0 = luminance;
	}


// BooleanParameter:29
	bool n_out29p0 = isGray;


// Mix:31
	vec3 n_out31p0 = mix(vec3(n_out15p0.xyz), vec3(n_out30p0), vec3(n_out29p0 ? 1.0 : 0.0));


// Fresnel:18
	float n_in18p3 = 1.00000;
	float n_out18p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in18p3);


// Input:17
	vec4 n_out17p0 = COLOR;


// Mix:16
	float n_in16p1 = 1.00000;
	float n_out16p0 = mix(n_out18p0, n_in16p1, n_out17p0.x);


// FloatConstant:4
	float n_out4p0 = 0.300000;


// FloatParameter:28
	float n_out28p0 = Dither_size;


	float n_out2p0;
// Expression:2
	n_out2p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out28p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out2p0 = n_out4p0 - DITHER_THRESHOLDS[index];
	}


// Step:10
	float n_out10p0 = step(n_out16p0, n_out2p0);


// Output:0
	ALBEDO = n_out31p0;
	ALPHA = n_out10p0;


}
"
graph_offset = Vector2(-96.7732, -371.046)
flags/unshaded = true
nodes/fragment/0/position = Vector2(780, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeExpression_y6t3h")
nodes/fragment/2/position = Vector2(-960, 820)
nodes/fragment/2/size = Vector2(634.014, 470.339)
nodes/fragment/2/input_ports = "0,4,noise;1,0,In;2,0,Size;"
nodes/fragment/2/output_ports = "0,0,Dither_Node;"
nodes/fragment/2/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_f165y")
nodes/fragment/4/position = Vector2(-1180, 880)
nodes/fragment/10/node = SubResource("VisualShaderNodeStep_gp5bj")
nodes/fragment/10/position = Vector2(-100, 420)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorConstant_v5j0a")
nodes/fragment/15/position = Vector2(-18.1255, 46.3031)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_ocuib")
nodes/fragment/16/position = Vector2(-260, 140)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_etyct")
nodes/fragment/17/position = Vector2(-840, 420)
nodes/fragment/18/node = SubResource("VisualShaderNodeFresnel_l8b5q")
nodes/fragment/18/position = Vector2(-520, 100)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatParameter_oo3k7")
nodes/fragment/28/position = Vector2(-1500.72, 1122.86)
nodes/fragment/29/node = SubResource("VisualShaderNodeBooleanParameter_hc8ne")
nodes/fragment/29/position = Vector2(299.286, -158.783)
nodes/fragment/30/node = SubResource("VisualShaderNodeExpression_u37kw")
nodes/fragment/30/position = Vector2(285.796, -431.17)
nodes/fragment/30/size = Vector2(620, 200)
nodes/fragment/30/input_ports = "0,4,color;"
nodes/fragment/30/output_ports = "0,0,grey_value;"
nodes/fragment/30/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/31/node = SubResource("VisualShaderNodeMix_a018s")
nodes/fragment/31/position = Vector2(985.796, -151.17)
nodes/fragment/connections = PackedInt32Array(4, 0, 2, 1, 2, 0, 10, 1, 16, 0, 10, 0, 17, 0, 16, 2, 18, 0, 16, 0, 28, 0, 2, 2, 10, 0, 0, 1, 30, 0, 31, 1, 29, 0, 31, 2, 15, 0, 30, 0, 15, 0, 31, 0, 31, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_auo33"]
render_priority = 3
shader = SubResource("VisualShader_lmymd")

[sub_resource type="Gradient" id="Gradient_1ksq0"]
offsets = PackedFloat32Array(0.142857, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_co4bx"]
gradient = SubResource("Gradient_1ksq0")

[sub_resource type="Curve" id="Curve_sac7r"]
_data = [Vector2(0, 0.968421), 0.0, 0.546851, 0, 0, Vector2(0.994118, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_tyy8c"]
curve = SubResource("Curve_sac7r")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_snyp2"]
lifetime_randomness = 0.5
particle_flag_rotate_y = true
angle_min = -720.0
angle_max = 720.0
direction = Vector3(0, 0, 0)
initial_velocity_min = 0.05
initial_velocity_max = 0.25
angular_velocity_max = 0.1
gravity = Vector3(0, 0, 0)
scale_min = 0.1
scale_max = 0.15
scale_curve = SubResource("CurveTexture_tyy8c")
color_ramp = SubResource("GradientTexture1D_co4bx")
turbulence_noise_strength = 0.05
turbulence_noise_scale = 0.1
turbulence_noise_speed_random = 0.0
turbulence_influence_min = 0.0
turbulence_influence_max = 0.0

[node name="Player_Sub" type="RigidBody3D"]
collision_layer = 2
collision_mask = 2
input_ray_pickable = false
axis_lock_linear_z = true
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
physics_material_override = SubResource("PhysicsMaterial_c70j3")
gravity_scale = 0.0
linear_damp = 1.0
script = ExtResource("1_o2v73")
orbe_tool = ExtResource("12_nmehd")
actual_speed = 8.0
hight_speed = 12.0
normal_speed = 8.0
maxSpeed = 12.0
startPos = Vector3(0, 1, 0)

[node name="Player_rg" type="Node" parent="."]

[node name="Active_ZoneCollide" type="Node" parent="."]
script = ExtResource("3_k136c")

[node name="Player_sub_collider" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.121499, 0)
shape = SubResource("CapsuleShape3D_lp7h6")

[node name="Ini_subscene" type="Node" parent="."]
script = SubResource("GDScript_lbkea")

[node name="Timer" type="Timer" parent="Ini_subscene"]
one_shot = true

[node name="Flash_inputs" type="Node" parent="."]
script = ExtResource("3_p6pm7")
flash_tool_data = ExtResource("6_axu5t")

[node name="Fade_flash" type="Node" parent="Flash_inputs"]
script = SubResource("GDScript_mbf75")

[node name="Timer" type="Timer" parent="Flash_inputs"]
wait_time = 2.0
one_shot = true

[node name="Scanne_element" type="Node" parent="."]
script = ExtResource("5_jhkow")
scanner_tool = ExtResource("15_vswql")

[node name="time_checker" type="Timer" parent="Scanne_element"]
wait_time = 0.1
one_shot = true

[node name="Active_scanner_visual_pulse" type="Node" parent="Scanne_element"]
script = ExtResource("10_ir8y2")
scanner_tool_data = ExtResource("15_vswql")

[node name="Timer" type="Timer" parent="Scanne_element/Active_scanner_visual_pulse"]
wait_time = 0.1

[node name="Photo_Flash" type="Node" parent="."]
script = SubResource("GDScript_8qwgp")

[node name="Render_mesh" type="Node3D" parent="."]

[node name="Active_visual_tools" type="Node" parent="Render_mesh"]

[node name="active_light" type="Node" parent="Render_mesh/Active_visual_tools" node_paths=PackedStringArray("list_of_object")]
script = ExtResource("8_8bfcd")
_tool_data = ExtResource("6_axu5t")
list_of_object = [NodePath("../../Light")]

[node name="active_scanner" type="Node" parent="Render_mesh/Active_visual_tools" node_paths=PackedStringArray("list_of_object")]
script = ExtResource("8_8bfcd")
_tool_data = ExtResource("15_vswql")
list_of_object = [NodePath("../../Light")]

[node name="Scanner" type="MeshInstance3D" parent="Render_mesh"]
transform = Transform3D(-1.7049e-09, -0.038187, 0, 0.0390036, -1.66921e-09, 0, 0, 0, 0.121949, 0.0349853, 0.140869, 0.0514166)
layers = 4
mesh = SubResource("BoxMesh_8vb5i")
skeleton = NodePath("../../Player_sub_collider")
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="01" type="MeshInstance3D" parent="Render_mesh/Scanner"]
transform = Transform3D(-4.69226e-08, -4.40394e-09, -1.07347, -1.09643, 9.82716e-15, 4.79258e-08, 1.2518e-14, 0.0322237, -1.50076e-08, 0.0940733, 0.0775418, 0.676853)
visible = false
layers = 4
mesh = SubResource("TorusMesh_507c3")
skeleton = NodePath("../../../..")
surface_material_override/0 = SubResource("ShaderMaterial_8eybx")

[node name="02" type="MeshInstance3D" parent="Render_mesh/Scanner"]
transform = Transform3D(-1.66866e-08, -1.56616e-09, -0.381751, -0.389912, -8.51955e-16, 1.70436e-08, 3.84901e-16, 0.0114595, -5.33701e-09, 0.0940733, 0.0775418, 0.676853)
visible = false
layers = 4
mesh = SubResource("TorusMesh_ljaqx")
skeleton = NodePath("../../../..")
surface_material_override/0 = SubResource("ShaderMaterial_8eybx")

[node name="Teleporter_msh2" type="MeshInstance3D" parent="Render_mesh/Scanner"]
transform = Transform3D(1.51265, -6.61196e-08, -6.61202e-08, -6.75333e-08, -6.75333e-08, -1.54498, 2.11474e-08, 0.483795, -2.11474e-08, 0, 0.0100367, 0.438774)
visible = false
layers = 4
mesh = SubResource("TorusMesh_k0nng")
skeleton = NodePath("../../../Player_sub_collider")
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="Teleporter_msh3" type="MeshInstance3D" parent="Render_mesh/Scanner"]
transform = Transform3D(2.25725, -9.86674e-08, -9.86684e-08, -1.00777e-07, -1.00777e-07, -2.30551, 3.15573e-08, 0.721946, -3.15573e-08, 0, 0.0100367, 0.438774)
layers = 4
mesh = SubResource("TorusMesh_k0nng")
skeleton = NodePath("../../../Player_sub_collider")
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="Light" type="MeshInstance3D" parent="Render_mesh"]
transform = Transform3D(-1.12055e-09, -0.0250984, 0, 0.0256351, -1.09709e-09, 0, 0, 0, 0.080151, -0.0384823, 0.127608, 0.0417079)
layers = 4
mesh = SubResource("BoxMesh_8vb5i")
skeleton = NodePath("../../Player_sub_collider")
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Render_mesh/Light"]
transform = Transform3D(2.14988, 2.70006e-13, 0, 1.91847e-13, 3.89926, 0, 0, 0, 0.488128, -0.0416613, -0.133781, 0.400945)
layers = 4
mesh = SubResource("BoxMesh_ptf3k")
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="small" type="MeshInstance3D" parent="Render_mesh/Light"]
transform = Transform3D(1.32942, 1.98952e-13, 0, 6.39488e-14, 2.10357, 0, 0, 0, 0.352518, -0.0164814, 0.134207, 0.6692)
layers = 4
mesh = SubResource("BoxMesh_laopn")
surface_material_override/0 = ExtResource("8_wvhjt")

[node name="Sonar" type="Node3D" parent="Render_mesh"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.00877953, -0.0123595, -0.0143354)

[node name="lampe" type="MeshInstance3D" parent="Render_mesh/Sonar"]
transform = Transform3D(-0.0379565, -3.31825e-09, 0, 3.31825e-09, -0.0379565, 0, 0, 0, 0.0379565, 0.0587758, 0.401025, -0.0883384)
layers = 4
mesh = SubResource("SphereMesh_gj0qo")
skeleton = NodePath("../MeshInstance3D")
surface_material_override/0 = SubResource("ShaderMaterial_j5ih5")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Render_mesh/Sonar"]
transform = Transform3D(0.00832142, 0, 0, 0, 0.224506, 0, 0, 0, -0.0044408, 0.0590617, 0.266138, -0.0899213)
layers = 4
mesh = SubResource("BoxMesh_3nn6t")
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="Cosmo_Mod_02" parent="Render_mesh" instance=ExtResource("14_tdqlw")]
transform = Transform3D(-1.68564e-09, 0, -0.0385629, 0, 0.0385629, 0, 0.0385629, 0, -1.68564e-09, 0, -0.0355417, 0)

[node name="msh_body" parent="Render_mesh/Cosmo_Mod_02" index="0"]
layers = 4
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="msh_helmet" parent="Render_mesh/Cosmo_Mod_02" index="1"]
layers = 4
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="msh_right_foot" parent="Render_mesh/Cosmo_Mod_02" index="2"]
layers = 4
surface_material_override/0 = ExtResource("1_n1vw4")
surface_material_override/1 = ExtResource("1_n1vw4")

[node name="msh_airsuit" parent="Render_mesh/Cosmo_Mod_02" index="3"]
layers = 4
surface_material_override/0 = ExtResource("1_n1vw4")
surface_material_override/1 = ExtResource("1_n1vw4")

[node name="msh_right_arm" parent="Render_mesh/Cosmo_Mod_02" index="4"]
layers = 4
surface_material_override/0 = ExtResource("1_n1vw4")
surface_material_override/1 = ExtResource("1_n1vw4")

[node name="msh_helmet_002" parent="Render_mesh/Cosmo_Mod_02" index="5"]
layers = 4
surface_material_override/0 = ExtResource("15_evn0r")

[node name="msh_Pod" parent="Render_mesh/Cosmo_Mod_02" index="6"]
layers = 4
surface_material_override/0 = ExtResource("1_n1vw4")

[node name="Light_Position" type="Node3D" parent="Render_mesh"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0531196, 0.377471, -0.104147)
script = ExtResource("17_mnoui")

[node name="Light_sphere" type="MeshInstance3D" parent="Render_mesh/Light_Position"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.00897159, 0.0082069, 0.00761116)
visible = false
layers = 4
cast_shadow = 0
mesh = SubResource("QuadMesh_uqek7")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_4j2xv")

[node name="Orbe_spawner_position" type="Node3D" parent="Render_mesh"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0341371, 0.137754, 0.194054)

[node name="VFX_SPHERE_MIRROR" type="GPUParticles3D" parent="Render_mesh/Orbe_spawner_position"]
transform = Transform3D(1.429, 0, 0, 0, 1.429, 0, 0, 0, 1.429, 0.00496598, -0.008692, -0.0181673)
layers = 4
cast_shadow = 0
emitting = false
amount = 50
speed_scale = 2.0
process_material = SubResource("ParticleProcessMaterial_icvuv")
draw_pass_1 = SubResource("SphereMesh_6ufqt")

[node name="ZoneCollide" type="Area3D" parent="."]
collision_layer = 4
collision_mask = 4
input_ray_pickable = false

[node name="Attract_me" type="Node" parent="ZoneCollide" node_paths=PackedStringArray("rg")]
script = ExtResource("16_k51d3")
rg = NodePath("../..")

[node name="Push" type="Node" parent="ZoneCollide" node_paths=PackedStringArray("rg")]
script = ExtResource("17_qkxfn")
rg = NodePath("../..")

[node name="Player" type="Node" parent="ZoneCollide"]

[node name="Player_photoActive" type="Node" parent="ZoneCollide"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="ZoneCollide"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.138627, 0)
shape = SubResource("SphereShape3D_g1ic5")

[node name="Light" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.348655, 0.114098)
layers = 4100
omni_range = 2.0

[node name="Fx_water" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.0390157, 0.999239, 0, -0.999239, 0.0390157, 0.00288114, 0.135205, -0.0997294)
layers = 4
material_override = SubResource("ShaderMaterial_auo33")
cast_shadow = 0
amount = 10
lifetime = 2.5
randomness = 0.14
interpolate = false
fract_delta = false
process_material = SubResource("ParticleProcessMaterial_snyp2")
draw_pass_1 = ExtResource("4_6vpi7")

[connection signal="timeout" from="Ini_subscene/Timer" to="Ini_subscene" method="_on_timer_timeout"]
[connection signal="timeout" from="Scanne_element/time_checker" to="Scanne_element" method="_on_time_checker_timeout"]
[connection signal="timeout" from="Scanne_element/Active_scanner_visual_pulse/Timer" to="Scanne_element/Active_scanner_visual_pulse" method="_on_timer_timeout"]

[editable path="Render_mesh/Cosmo_Mod_02"]
