[gd_scene load_steps=26 format=3 uid="uid://dj0ltbci8lav2"]

[ext_resource type="Script" path="res://08_SUBSCENES/Tools/Loader/Move_to_called_position.gd" id="1_l8hhe"]
[ext_resource type="Material" uid="uid://cf6ce8cjrx4es" path="res://05_SHADER_TEST/Subscene_materials/Subscene_basic_mat.tres" id="1_oihxj"]
[ext_resource type="Material" uid="uid://cnldw4hovjlgd" path="res://05_SHADER_TEST/Subscene_materials/Subscene_shine_elements_mat.tres" id="2_lqviy"]
[ext_resource type="ArrayMesh" uid="uid://cm4cl6n84qj86" path="res://00_PLAYER/Boat/Boat_smoke/smoke_msh.obj" id="4_7wt0t"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_yiruh"]

[sub_resource type="SphereMesh" id="SphereMesh_xhujg"]

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_gp5bj"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_v5j0a"]
constant = Color(0.167591, 0.231187, 0.314371, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ocuib"]
default_input_values = [0, 0.0, 1, 1.0, 2, -0.135]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_etyct"]
output_port_for_preview = 0
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_l8b5q"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_y6t3h"]
size = Vector2(634.014, 470.339)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_oo3k7"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_hc8ne"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_u37kw"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_a018s"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_f165y"]
constant = 0.3

[sub_resource type="VisualShader" id="VisualShader_lmymd"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

global uniform bool isGray;
global uniform float Dither_size;



void fragment() {
// ColorConstant:15
	vec4 n_out15p0 = vec4(0.167591, 0.231187, 0.314371, 1.000000);


	float n_out30p0;
// Expression:30
	n_out30p0 = 0.0;
	{
		float luminance = 0.299 * vec3(n_out15p0.xyz).x + 0.587 * vec3(n_out15p0.xyz).y + 0.114 * vec3(n_out15p0.xyz).z;
		n_out30p0 = luminance;
	}


// BooleanParameter:29
	bool n_out29p0 = isGray;


// Mix:31
	vec3 n_out31p0 = mix(vec3(n_out15p0.xyz), vec3(n_out30p0), vec3(n_out29p0 ? 1.0 : 0.0));


// Fresnel:18
	float n_in18p3 = 1.00000;
	float n_out18p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in18p3);


// Input:17
	vec4 n_out17p0 = COLOR;


// Mix:16
	float n_in16p1 = 1.00000;
	float n_out16p0 = mix(n_out18p0, n_in16p1, n_out17p0.x);


// FloatConstant:4
	float n_out4p0 = 0.300000;


// FloatParameter:28
	float n_out28p0 = Dither_size;


	float n_out2p0;
// Expression:2
	n_out2p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out28p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out2p0 = n_out4p0 - DITHER_THRESHOLDS[index];
	}


// Step:10
	float n_out10p0 = step(n_out16p0, n_out2p0);


// Output:0
	ALBEDO = n_out31p0;
	ALPHA = n_out10p0;


}
"
graph_offset = Vector2(-96.7732, -371.046)
flags/unshaded = true
nodes/fragment/0/position = Vector2(780, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeExpression_y6t3h")
nodes/fragment/2/position = Vector2(-960, 820)
nodes/fragment/2/size = Vector2(634.014, 470.339)
nodes/fragment/2/input_ports = "0,4,noise;1,0,In;2,0,Size;"
nodes/fragment/2/output_ports = "0,0,Dither_Node;"
nodes/fragment/2/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_f165y")
nodes/fragment/4/position = Vector2(-1180, 880)
nodes/fragment/10/node = SubResource("VisualShaderNodeStep_gp5bj")
nodes/fragment/10/position = Vector2(-100, 420)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorConstant_v5j0a")
nodes/fragment/15/position = Vector2(-18.1255, 46.3031)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_ocuib")
nodes/fragment/16/position = Vector2(-260, 140)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_etyct")
nodes/fragment/17/position = Vector2(-840, 420)
nodes/fragment/18/node = SubResource("VisualShaderNodeFresnel_l8b5q")
nodes/fragment/18/position = Vector2(-520, 100)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatParameter_oo3k7")
nodes/fragment/28/position = Vector2(-1500.72, 1122.86)
nodes/fragment/29/node = SubResource("VisualShaderNodeBooleanParameter_hc8ne")
nodes/fragment/29/position = Vector2(299.286, -158.783)
nodes/fragment/30/node = SubResource("VisualShaderNodeExpression_u37kw")
nodes/fragment/30/position = Vector2(285.796, -431.17)
nodes/fragment/30/size = Vector2(620, 200)
nodes/fragment/30/input_ports = "0,4,color;"
nodes/fragment/30/output_ports = "0,0,grey_value;"
nodes/fragment/30/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/31/node = SubResource("VisualShaderNodeMix_a018s")
nodes/fragment/31/position = Vector2(985.796, -151.17)
nodes/fragment/connections = PackedInt32Array(4, 0, 2, 1, 2, 0, 10, 1, 16, 0, 10, 0, 17, 0, 16, 2, 18, 0, 16, 0, 28, 0, 2, 2, 10, 0, 0, 1, 30, 0, 31, 1, 29, 0, 31, 2, 15, 0, 30, 0, 15, 0, 31, 0, 31, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_uekxl"]
render_priority = 3
shader = SubResource("VisualShader_lmymd")

[sub_resource type="Gradient" id="Gradient_53k3o"]
offsets = PackedFloat32Array(0.142857, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_co4bx"]
gradient = SubResource("Gradient_53k3o")

[sub_resource type="Curve" id="Curve_n6rs1"]
_data = [Vector2(0, 0.968421), 0.0, 0.546851, 0, 0, Vector2(0.994118, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_tyy8c"]
curve = SubResource("Curve_n6rs1")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_kil22"]
lifetime_randomness = 0.5
particle_flag_rotate_y = true
angle_min = -720.0
angle_max = 720.0
direction = Vector3(0, 0, 0)
initial_velocity_min = 0.05
initial_velocity_max = 0.25
angular_velocity_max = 0.1
gravity = Vector3(0, 0, 0)
scale_min = 0.1
scale_max = 0.15
scale_curve = SubResource("CurveTexture_tyy8c")
color_ramp = SubResource("GradientTexture1D_co4bx")
turbulence_noise_strength = 0.05
turbulence_noise_scale = 0.1
turbulence_noise_speed_random = 0.0
turbulence_influence_min = 0.0
turbulence_influence_max = 0.0

[sub_resource type="SphereShape3D" id="SphereShape3D_jk4vm"]
radius = 0.055231

[node name="Loader" type="Node3D"]
script = ExtResource("1_l8hhe")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(0.186741, 0, 0, 0, 0.186741, 0, 0, 0, 0.186741, -0.000321721, 0, -0.166518)
layers = 4
mesh = SubResource("CapsuleMesh_yiruh")
surface_material_override/0 = ExtResource("1_oihxj")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0628972, 0, 0, 0, 0.0628972, 0, 0, 0, 0.0628972, -0.000321721, 0, -0.0853449)
layers = 4
mesh = SubResource("SphereMesh_xhujg")
surface_material_override/0 = ExtResource("2_lqviy")

[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0628972, 0, 0, 0, 0.0628972, 0, 0, 0, 0.0628972, 0.0977776, 0, -0.15512)
layers = 4
mesh = SubResource("SphereMesh_xhujg")
surface_material_override/0 = ExtResource("2_lqviy")

[node name="MeshInstance3D4" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0628972, 0, 0, 0, 0.0628972, 0, 0, 0, 0.0628972, -0.0987166, 0, -0.15512)
layers = 4
mesh = SubResource("SphereMesh_xhujg")
surface_material_override/0 = ExtResource("2_lqviy")

[node name="Fx_water" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.0390157, 0.999239, 0, -0.999239, 0.0390157, 0.00288114, 0.129281, -0.30401)
layers = 4
material_override = SubResource("ShaderMaterial_uekxl")
cast_shadow = 0
amount = 10
lifetime = 2.5
randomness = 0.14
interpolate = false
fract_delta = false
process_material = SubResource("ParticleProcessMaterial_kil22")
draw_pass_1 = ExtResource("4_7wt0t")

[node name="Area3D" type="Area3D" parent="."]
collision_layer = 4
collision_mask = 4

[node name="Loading_oxygene" type="Node" parent="Area3D"]

[node name="CollisionShape3D2" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(2.75354, 0, 0, 0, 2.75354, 0, 0, 0, 2.75354, 0, 0, 0)
shape = SubResource("SphereShape3D_jk4vm")
