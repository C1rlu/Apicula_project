[gd_scene load_steps=30 format=3 uid="uid://50ubp7klhsex"]

[ext_resource type="Script" path="res://08_SUBSCENES/01_Main_Oddity/Main_oddity.gd" id="1_1fc0u"]
[ext_resource type="Script" path="res://08_SUBSCENES/01_Main_Oddity/Fusion_Oddity.gd" id="1_bfxfx"]
[ext_resource type="Script" path="res://08_SUBSCENES/01_Main_Oddity/Main_Fusion_Parameter.gd" id="1_rlete"]
[ext_resource type="PackedScene" uid="uid://b3e0cgra0jrsb" path="res://08_SUBSCENES/Model/ODDITY/Peon_oddity_v01.blend" id="4_jvbw0"]
[ext_resource type="Script" path="res://08_SUBSCENES/Player_subscene/look_at_camera.gd" id="4_qf42y"]
[ext_resource type="Material" uid="uid://d2t0ju6dynwgf" path="res://05_SHADER_TEST/Subscene_materials/oddity_mirror.tres" id="5_caks8"]
[ext_resource type="PackedScene" uid="uid://2sm6h4yiky2p" path="res://08_SUBSCENES/02_Fusionnable_elements/Parabol_object/Blender/Parabol_mesh.blend" id="6_8k8t7"]

[sub_resource type="GDScript" id="GDScript_u7ou3"]
script/source = "extends Area3D

signal follow

func _ready():
	_global_datas.Main_oddity_node = self
	follow.emit()
"

[sub_resource type="GDScript" id="GDScript_7nn0l"]
script/source = "extends Node
@onready var root = $\"..\"

var t
@onready var light_sphere = $\"../Light_Position/Light_sphere\"

var actual_value : float 
var is_paused : bool
@onready var fash_timer = $fash_timer


func _ready():
	_global_datas.flash_x_ray_oddity.connect(_start_flash)
	_global_datas._traceur_pause.connect(_set_paused)


func _set_paused(condition : bool):
	
	is_paused = condition
	
	if condition:
		if t:
			t.kill()
	else :
		if t:
			t.kill()
		t = create_tween()
		t .tween_method(change_scale,actual_value,0,1.5)	

func _start_flash():
	
	if is_paused:
		return
	light_sphere.visible = true

	if t:
		t.kill()
		
	t = create_tween()
	
	t.tween_method(change_scale,1.0,0.0,1.5)
	t.connect(\"finished\",done)

func change_scale(value : float):
	light_sphere.scale = Vector3(value,value,value)		
	actual_value = value 
func done():
	light_sphere.visible = false


func _on_fash_timer_timeout():
	_start_flash()
	_global_datas._scan_mirror_xray.emit()
	fash_timer.wait_time = randf_range(1.0,3.0)
"

[sub_resource type="SphereShape3D" id="SphereShape3D_lls1c"]
radius = 0.0439911

[sub_resource type="SphereMesh" id="SphereMesh_kihk2"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_kwven"]
default_input_values = [1, Vector2(0, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_e003w"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_if3it"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_hkm4y"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_8la6w"]
parameter_name = "flash_opacity"
hint = 1
max = 0.5
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ccs0k"]
default_input_values = [0, 0.03, 1, 0.065, 2, 0.26]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_4ysed"]
parameter_name = "Size"
default_value_enabled = true
default_value = 0.7

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_d0u7s"]
parameter_name = "R"
default_value_enabled = true
default_value = 0.11

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_a0x06"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_xdo26"]
default_input_values = [2, true, 3, 9.975]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_c0wh5"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_pfal7"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_hjop0"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_p4onu"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_qleyu"]
input_name = "uv"

[sub_resource type="VisualShader" id="VisualShader_t3o1v"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_front, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform vec4 ColorParameter : source_color;
uniform float R = 0.10999999940395;
uniform float Size = 0.69999998807907;
uniform float flash_opacity : hint_range(0, 0.5) = 0.5;
global uniform float Dither_size;



void fragment() {
// ColorParameter:3
	vec4 n_out3p0 = ColorParameter;


// Input:9
	vec2 n_out9p0 = UV;


// UVFunc:10
	vec2 n_in10p1 = vec2(0.00000, 1.00000);
	vec2 n_in10p2 = vec2(0.00000, 0.00000);
	vec2 n_out10p0 = n_in10p2 * n_in10p1 + n_out9p0;


// FloatParameter:18
	float n_out18p0 = R;


// FloatParameter:17
	float n_out17p0 = Size;


	vec4 n_out11p0;
// Expression:11
	n_out11p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out10p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out18p0,n_out18p0 + n_out17p0,d);
		n_out11p0 = vec4(vec3(c),1.0);
	}


// FloatParameter:15
	float n_out15p0 = flash_opacity;


// FloatParameter:7
	float n_out7p0 = Dither_size;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out7p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out15p0 - DITHER_THRESHOLDS[index];
	}


// Step:12
	float n_out12p0 = step(n_out11p0.x, n_out14p0);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out12p0;


}
"
graph_offset = Vector2(-1179.91, -125.15)
modes/cull = 1
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_a0x06")
nodes/fragment/3/position = Vector2(-680, 20)
nodes/fragment/4/node = SubResource("VisualShaderNodeFresnel_xdo26")
nodes/fragment/4/position = Vector2(-420, 280)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_c0wh5")
nodes/fragment/5/position = Vector2(-1500, 1360)
nodes/fragment/6/node = SubResource("VisualShaderNodeExpression_pfal7")
nodes/fragment/6/position = Vector2(-1200, 1480)
nodes/fragment/6/size = Vector2(724.789, 654.559)
nodes/fragment/6/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/6/output_ports = "0,0,Dither_Node;"
nodes/fragment/6/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_hjop0")
nodes/fragment/7/position = Vector2(-2540, 620)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_p4onu")
nodes/fragment/8/position = Vector2(100, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_qleyu")
nodes/fragment/9/position = Vector2(-4460, -500)
nodes/fragment/10/node = SubResource("VisualShaderNodeUVFunc_kwven")
nodes/fragment/10/position = Vector2(-3880, -560)
nodes/fragment/11/node = SubResource("VisualShaderNodeExpression_e003w")
nodes/fragment/11/position = Vector2(-3620, -340)
nodes/fragment/11/size = Vector2(513.781, 284.487)
nodes/fragment/11/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/11/output_ports = "0,5,color;"
nodes/fragment/11/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/12/node = SubResource("VisualShaderNodeStep_if3it")
nodes/fragment/12/position = Vector2(-760, 300)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_hkm4y")
nodes/fragment/14/position = Vector2(-1760, -200)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_8la6w")
nodes/fragment/15/position = Vector2(-3980, 300)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_ccs0k")
nodes/fragment/16/position = Vector2(0, -300)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatParameter_4ysed")
nodes/fragment/17/position = Vector2(-4360, 0)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatParameter_d0u7s")
nodes/fragment/18/position = Vector2(-4200, -300)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 5, 0, 6, 0, 7, 0, 6, 1, 6, 0, 8, 0, 4, 0, 8, 1, 10, 0, 11, 0, 12, 0, 16, 1, 11, 0, 12, 0, 14, 0, 12, 1, 15, 0, 14, 0, 17, 0, 11, 2, 18, 0, 11, 1, 9, 0, 10, 0, 12, 0, 0, 1, 7, 0, 14, 1)
nodes/light/0/position = Vector2(1060, 580)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mj1ec"]
render_priority = 0
shader = SubResource("VisualShader_t3o1v")
shader_parameter/ColorParameter = Color(0.333333, 0.764706, 0.568627, 1)
shader_parameter/R = 0.11
shader_parameter/Size = 0.7
shader_parameter/flash_opacity = 0.5

[sub_resource type="SphereShape3D" id="SphereShape3D_tmaie"]
radius = 0.315621

[node name="Main_Oddity" type="Area3D"]
collision_layer = 4
collision_mask = 4
script = SubResource("GDScript_u7ou3")

[node name="Main_Fusion_Parameter" type="Node" parent="."]
script = ExtResource("1_rlete")

[node name="Fusion_Oddity" type="Node" parent="."]
script = ExtResource("1_bfxfx")

[node name="Movable_Main_oddity" type="Node" parent="."]
script = ExtResource("1_1fc0u")
position_from_player = Vector3(0.25, 1, 0)
speed = 1.0

[node name="Random_range_update" type="Timer" parent="Movable_Main_oddity"]
wait_time = 2.0
autostart = true

[node name="Wait_before_follow" type="Timer" parent="Movable_Main_oddity"]
wait_time = 0.5
one_shot = true

[node name="Fade_flash" type="Node" parent="."]
script = SubResource("GDScript_7nn0l")

[node name="fash_timer" type="Timer" parent="Fade_flash"]
wait_time = 1.5

[node name="Fusion_area" type="Area3D" parent="."]
collision_layer = 4
collision_mask = 4

[node name="col" type="CollisionShape3D" parent="Fusion_area"]
transform = Transform3D(0.4, 0, 0, 0, 0.4, 0, 0, 0, 0.4, 0, 0, 0)
shape = SubResource("SphereShape3D_lls1c")

[node name="Light_Position" type="Node3D" parent="."]
script = ExtResource("4_qf42y")

[node name="Light_sphere" type="MeshInstance3D" parent="Light_Position"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.00897159, 0.0082069, 0.00761116)
visible = false
layers = 4
cast_shadow = 0
mesh = SubResource("SphereMesh_kihk2")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_mj1ec")

[node name="Light" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0177747, 0)
layers = 4096
omni_range = 2.0

[node name="col" type="CollisionShape3D" parent="."]
shape = SubResource("SphereShape3D_tmaie")

[node name="Render_root" type="Node3D" parent="."]

[node name="msh_oddity_peon" parent="Render_root" instance=ExtResource("4_jvbw0")]
transform = Transform3D(0.0349114, 0, 0, 0, 0.0349114, 0, 0, 0, 0.0349114, 0, 0, 0)

[node name="msh_oddity_peon" parent="Render_root/msh_oddity_peon" index="0"]
layers = 4
cast_shadow = 0
gi_mode = 0
surface_material_override/0 = ExtResource("5_caks8")

[node name="Parabol_mesh" parent="Render_root" instance=ExtResource("6_8k8t7")]
transform = Transform3D(0.0244353, -0.00982125, 0.00134562, 0.00231981, 0.00218527, -0.0261762, 0.00963775, 0.0243746, 0.00288899, -1.71401e-05, 0.00817058, 0.0163614)
visible = false

[node name="Parabol_msh" parent="Render_root/Parabol_mesh" index="0"]
transform = Transform3D(1, 3.93484e-08, -1.86265e-09, 9.8953e-09, 1, 0, 1.86265e-09, 0, 1, 0, 0, 0)
layers = 4
surface_material_override/0 = ExtResource("5_caks8")

[connection signal="body_entered" from="." to="Movable_Main_oddity" method="_on_movable_oddity_example_body_entered"]
[connection signal="body_exited" from="." to="Movable_Main_oddity" method="_on_movable_oddity_example_body_exited"]
[connection signal="follow" from="." to="Movable_Main_oddity" method="_follow"]
[connection signal="add_organic" from="Fusion_Oddity" to="Main_Fusion_Parameter" method="_add_organic"]
[connection signal="add_sonar" from="Fusion_Oddity" to="Main_Fusion_Parameter" method="_add_sonar"]
[connection signal="tree_exited" from="Movable_Main_oddity" to="Movable_Main_oddity" method="_on_tree_exited"]
[connection signal="timeout" from="Movable_Main_oddity/Random_range_update" to="Movable_Main_oddity" method="_on_random_range_update_timeout"]
[connection signal="timeout" from="Movable_Main_oddity/Wait_before_follow" to="Movable_Main_oddity" method="_on_wait_before_follow_timeout"]
[connection signal="timeout" from="Fade_flash/fash_timer" to="Fade_flash" method="_on_fash_timer_timeout"]
[connection signal="area_entered" from="Fusion_area" to="Fusion_Oddity" method="_on_fusion_area_area_entered"]

[editable path="Render_root/msh_oddity_peon"]
[editable path="Render_root/Parabol_mesh"]
