[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://b4xbrp36syqmj"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jd2pw"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ace7k"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_d2fvq"]
parameter_name = "Color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 Color : source_color;



void fragment() {
// ColorParameter:4
	vec4 n_out4p0 = Color;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, UV);
	float n_out3p4 = n_out3p0.a;


// Output:0
	COLOR.rgb = vec3(n_out4p0.xyz);
	COLOR.a = n_out3p4;


}
"
graph_offset = Vector2(-360.178, 18.6054)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_jd2pw")
nodes/fragment/2/position = Vector2(-420, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_ace7k")
nodes/fragment/3/position = Vector2(-140, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_d2fvq")
nodes/fragment/4/position = Vector2(-140, 80)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 4, 0, 1, 4, 0, 0, 0)
