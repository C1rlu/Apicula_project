[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://ej0qgif660ai"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ko8ig"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_6jpsv"]
constant = 0.5

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_otjmr"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vrx5k"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_u3g3p"]
output_port_for_preview = 0
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_uxj4c"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 0, 0)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_f8l13"]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_dncpi"]
function = 31

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:8
	vec4 n_out8p0 = COLOR;


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(TEXTURE, UV);
	float n_out6p4 = n_out6p0.a;


// FloatFunc:9
	float n_out9p0 = 1.0 - n_out6p4;


// FloatConstant:3
	float n_out3p0 = 0.500000;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:7
	vec3 n_out7p0 = step(vec3(n_out9p0), vec3(n_out4p0));


// Output:0
	COLOR.rgb = vec3(n_out8p0.xyz);
	COLOR.a = n_out7p0.x;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(660, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_ko8ig")
nodes/fragment/2/position = Vector2(-1040, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_6jpsv")
nodes/fragment/3/position = Vector2(-1040, 80)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_otjmr")
nodes/fragment/4/position = Vector2(-720, 300)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_vrx5k")
nodes/fragment/5/position = Vector2(-760, -60)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_u3g3p")
nodes/fragment/6/position = Vector2(-440, -120)
nodes/fragment/7/node = SubResource("VisualShaderNodeStep_uxj4c")
nodes/fragment/7/position = Vector2(280, 320)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_f8l13")
nodes/fragment/8/position = Vector2(80, 40)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_dncpi")
nodes/fragment/9/position = Vector2(-60, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 1, 3, 0, 4, 0, 5, 0, 6, 2, 4, 0, 7, 1, 8, 0, 0, 0, 7, 0, 0, 1, 6, 4, 9, 0, 9, 0, 7, 0)
