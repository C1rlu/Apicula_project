[gd_resource type="VisualShader" load_steps=18 format=3 uid="uid://b3rm1lse2ntpr"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_suqtf"]
parameter_name = "Opacity"
hint = 1
step = 0.0
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_c1pdq"]
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ubsal"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_vl3h1"]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_balba"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_pm0xd"]
constant = 0.5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_n0oov"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_ohp4k"]
default_input_values = [0, 1.5, 1, 0.0]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_hexsk"]
noise_type = 2
seed = 245
frequency = 0.001
fractal_type = 0
cellular_distance_function = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_07l1v"]
width = 1920
height = 1080
noise = SubResource("FastNoiseLite_hexsk")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pu6cw"]
texture = SubResource("NoiseTexture2D_07l1v")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_lfvun"]
function = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6eg77"]
default_input_values = [0, 0.35, 1, 2.095]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_787l6"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_47y50"]
size = Vector2(634.014, 470.339)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_opcwl"]
constant = 0.3

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_nt82q"]
default_input_values = [0, 1.5, 1, 0.0]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Opacity : hint_range(0, 1) = 1;



void fragment() {
// FloatConstant:23
	float n_out23p0 = 1.000000;


// FloatConstant:5
	float n_out5p0 = 0.300000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out23p0 - DITHER_THRESHOLDS[index];
	}


// Step:29
	float n_in29p0 = 1.50000;
	float n_out29p0 = step(n_in29p0, n_out4p0);


// FloatParameter:18
	float n_out18p0 = Opacity;


// Step:7
	float n_out7p0 = step(n_out18p0, n_out4p0);


// Output:0
	COLOR.rgb = vec3(n_out29p0);
	COLOR.a = n_out7p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_47y50")
nodes/fragment/4/position = Vector2(-880, 620)
nodes/fragment/4/size = Vector2(634.014, 470.339)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_opcwl")
nodes/fragment/5/position = Vector2(-1200, 860)
nodes/fragment/7/node = SubResource("VisualShaderNodeStep_nt82q")
nodes/fragment/7/position = Vector2(-200, 260)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatParameter_suqtf")
nodes/fragment/18/position = Vector2(-720, 260)
nodes/fragment/23/node = SubResource("VisualShaderNodeFloatConstant_c1pdq")
nodes/fragment/23/position = Vector2(-1260, 780)
nodes/fragment/24/node = SubResource("VisualShaderNodeInput_ubsal")
nodes/fragment/24/position = Vector2(-1220, -280)
nodes/fragment/25/node = SubResource("VisualShaderNodeTexture_vl3h1")
nodes/fragment/25/position = Vector2(-780, -520)
nodes/fragment/26/node = SubResource("VisualShaderNodeVectorOp_balba")
nodes/fragment/26/position = Vector2(-380, -300)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatConstant_pm0xd")
nodes/fragment/27/position = Vector2(-680, -180)
nodes/fragment/28/node = SubResource("VisualShaderNodeMix_n0oov")
nodes/fragment/28/position = Vector2(-160, -20)
nodes/fragment/29/node = SubResource("VisualShaderNodeStep_ohp4k")
nodes/fragment/29/position = Vector2(-370.691, 150.903)
nodes/fragment/31/node = SubResource("VisualShaderNodeTexture_pu6cw")
nodes/fragment/31/position = Vector2(-1040, -20)
nodes/fragment/32/node = SubResource("VisualShaderNodeUVFunc_lfvun")
nodes/fragment/32/position = Vector2(-1420, 40)
nodes/fragment/34/node = SubResource("VisualShaderNodeFloatOp_6eg77")
nodes/fragment/34/position = Vector2(-1700, 200)
nodes/fragment/35/node = SubResource("VisualShaderNodeFloatConstant_787l6")
nodes/fragment/35/position = Vector2(-1680, 80)
nodes/fragment/connections = PackedInt32Array(4, 0, 7, 1, 18, 0, 7, 0, 5, 0, 4, 1, 23, 0, 4, 0, 24, 0, 25, 2, 25, 0, 26, 0, 27, 0, 26, 1, 26, 0, 28, 0, 25, 0, 28, 1, 4, 0, 29, 1, 7, 0, 0, 1, 32, 0, 31, 0, 29, 0, 0, 0, 35, 0, 32, 1, 34, 0, 32, 2)
