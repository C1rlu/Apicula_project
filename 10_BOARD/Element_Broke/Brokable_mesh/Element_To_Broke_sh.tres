[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://8c5nl3vialmc"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_c8i4f"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_x5ran"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_x7io1"]
constant = 0.064

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_tbaon"]
parameter_name = "Color2"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_rq85s"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pmvsj"]
parameter_name = "FloatParameter"

[sub_resource type="Gradient" id="Gradient_q5o0p"]
offsets = PackedFloat32Array(0, 0.332054, 0.733205, 1)
colors = PackedColorArray(0, 0, 0, 1, 0.646029, 0.646029, 0.646029, 1, 0.429175, 0.429175, 0.429175, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_6ngd3"]
gradient = SubResource("Gradient_q5o0p")
fill_to = Vector2(0.273504, 0.0897436)
repeat = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_qwrqh"]
texture = SubResource("GradientTexture2D_6ngd3")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_jva7d"]
constant = 1.475

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_yvs53"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_dydas"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_53xsb"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform vec4 Color : source_color;
uniform vec4 Color2 : source_color;
uniform sampler2D tex_frg_5;
global uniform float Dither_size;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Color;


// ColorParameter:13
	vec4 n_out13p0 = Color2;


// Texture2D:5
	vec4 n_out5p0 = texture(tex_frg_5, UV);


// FloatConstant:6
	float n_out6p0 = 1.475000;


// FloatParameter:7
	float n_out7p0 = Dither_size;


	float n_out8p0;
// Expression:8
	n_out8p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out7p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out8p0 = n_out6p0 - DITHER_THRESHOLDS[index];
	}


// Step:9
	float n_out9p0 = step(n_out5p0.x, n_out8p0);


// Mix:10
	vec3 n_out10p0 = mix(vec3(n_out2p0.xyz), vec3(n_out13p0.xyz), vec3(n_out9p0));


// Output:0
	ALBEDO = n_out10p0;


}
"
graph_offset = Vector2(-709.951, -8.58925)
flags/unshaded = true
flags/shadows_disabled = true
flags/ambient_light_disabled = true
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_rq85s")
nodes/fragment/2/position = Vector2(-700, -200)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_pmvsj")
nodes/fragment/3/position = Vector2(-1020, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture_qwrqh")
nodes/fragment/5/position = Vector2(-840, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_jva7d")
nodes/fragment/6/position = Vector2(-840, 620)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_yvs53")
nodes/fragment/7/position = Vector2(-1040, 700)
nodes/fragment/8/node = SubResource("VisualShaderNodeExpression_dydas")
nodes/fragment/8/position = Vector2(-640, 640)
nodes/fragment/8/size = Vector2(724.789, 654.559)
nodes/fragment/8/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/8/output_ports = "0,0,Dither_Node;"
nodes/fragment/8/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/9/node = SubResource("VisualShaderNodeStep_53xsb")
nodes/fragment/9/position = Vector2(184, 525.623)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_c8i4f")
nodes/fragment/10/position = Vector2(-14.0923, 145.543)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_x5ran")
nodes/fragment/11/position = Vector2(-500, 80)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_x7io1")
nodes/fragment/12/position = Vector2(-780, 20)
nodes/fragment/13/node = SubResource("VisualShaderNodeColorParameter_tbaon")
nodes/fragment/13/position = Vector2(-420, 200)
nodes/fragment/connections = PackedInt32Array(6, 0, 8, 0, 7, 0, 8, 1, 5, 0, 9, 0, 8, 0, 9, 1, 2, 0, 10, 0, 10, 0, 0, 0, 9, 0, 10, 2, 2, 0, 11, 0, 12, 0, 11, 1, 13, 0, 10, 1)
