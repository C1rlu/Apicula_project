[gd_scene load_steps=23 format=3 uid="uid://dxjn0mjuqebwy"]

[ext_resource type="Resource" uid="uid://bcid58kxecbk2" path="res://12_INVENTORY/Photo/Maurice_photoData.tres" id="1_vlt1h"]
[ext_resource type="Script" path="res://10_BOARD/Take_Object.tres.gd" id="2_gdyj0"]
[ext_resource type="Shader" uid="uid://upo0fuo5sqgd" path="res://05_SHADER_TEST/Board/Board_sh.tres" id="3_aco5g"]
[ext_resource type="Material" uid="uid://bs4xcdhvj0k0p" path="res://05_SHADER_TEST/Board/board_scanner_texture.tres" id="4_5hroj"]

[sub_resource type="GDScript" id="GDScript_2oe2p"]
script/source = "extends Area3D

@export var photo_data : PhotoData

@onready var collision_shape_3d = $CollisionShape3D
@onready var mesh_instance_3d_7 = $MeshInstance3D7
@onready var photo = $photo



func _ready():
	_disable_object()
		
func _active():
	collision_shape_3d.disabled = false	
	mesh_instance_3d_7.visible = true
	photo.visible = true


func _disable_object():
	
	collision_shape_3d.disabled = true
	mesh_instance_3d_7.visible = false
	photo.visible = false


	
"

[sub_resource type="GDScript" id="GDScript_32kbr"]
script/source = "extends Node

@onready var select_this = $\"../Select_this\"

@onready var photo = $\"../photo\"

@onready var material : Material = photo.get_surface_override_material(0)

func _ready():
	
	var texture_data = select_this.photo_data.image
	material.set_shader_parameter(\"Texture\",texture_data)
"

[sub_resource type="QuadMesh" id="QuadMesh_540lh"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_53wbb"]
function = 31

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_025qg"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5qx1q"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ijvmg"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_7m0jy"]
constant = Color(0.84, 0.5376, 0.168, 1)

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_13c7n"]

[sub_resource type="Gradient" id="Gradient_754lt"]
offsets = PackedFloat32Array(0, 0.738614, 0.90495, 0.956436, 1)
colors = PackedColorArray(0, 0, 0, 1, 0, 0, 0, 1, 0.212305, 0.212305, 0.212305, 1, 0, 0, 0, 1, 0.0303292, 0.0303292, 0.0303292, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_npgut"]
gradient = SubResource("Gradient_754lt")
fill = 2
fill_from = Vector2(0.5, 0.5)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_vcijt"]
texture = SubResource("GradientTexture2D_npgut")

[sub_resource type="VisualShader" id="VisualShader_jlr7g"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform sampler2D tex_frg_9;



void fragment() {
// ColorConstant:5
	vec4 n_out5p0 = vec4(0.840000, 0.537600, 0.168000, 1.000000);


// Texture2D:9
	vec4 n_out9p0 = texture(tex_frg_9, UV);


// FloatFunc:10
	float n_out10p0 = 1.0 - n_out9p0.x;


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:8
	float n_out8p0 = step(n_out10p0, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out5p0.xyz);
	ALPHA = n_out8p0;


}
"
graph_offset = Vector2(-683.156, -435.322)
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(680, 20)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_025qg")
nodes/fragment/2/position = Vector2(-708.999, 749.102)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_5qx1q")
nodes/fragment/3/position = Vector2(-708.999, 609.102)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_ijvmg")
nodes/fragment/4/position = Vector2(-408.999, 729.102)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeColorConstant_7m0jy")
nodes/fragment/5/position = Vector2(331.001, -290.898)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_13c7n")
nodes/fragment/8/position = Vector2(353.087, -105.897)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_vcijt")
nodes/fragment/9/position = Vector2(-360, -260)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatFunc_53wbb")
nodes/fragment/10/position = Vector2(60, -120)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 1, 3, 0, 4, 0, 4, 0, 8, 1, 8, 0, 0, 1, 5, 0, 0, 0, 9, 0, 10, 0, 10, 0, 8, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_v4xfe"]
render_priority = 0
shader = SubResource("VisualShader_jlr7g")

[sub_resource type="CylinderMesh" id="CylinderMesh_nufnr"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4jhqi"]
render_priority = 0
shader = ExtResource("3_aco5g")
shader_parameter/Dark_color = Color(0, 0, 0, 1)
shader_parameter/ColorParameter = Color(0.0941176, 0.145098, 0.14902, 1)
shader_parameter/light_color = Color(0.137255, 0.2, 0.207843, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_mdprb"]
size = Vector3(0.0690674, 0.017453, 0.0662781)

[sub_resource type="CylinderMesh" id="CylinderMesh_8mitn"]

[node name="Scanner_area" type="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.00272226, 0)
script = SubResource("GDScript_2oe2p")
photo_data = ExtResource("1_vlt1h")

[node name="Select_this" type="Node" parent="."]
script = ExtResource("2_gdyj0")

[node name="texture" type="Node" parent="."]
script = SubResource("GDScript_32kbr")

[node name="IS_SELECT" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0922867, 0, 0, 0, -4.03398e-09, 0.0922867, 0, -0.0922867, -4.03398e-09, 0, 0.00213066, 0)
visible = false
layers = 2
mesh = SubResource("QuadMesh_540lh")
surface_material_override/0 = SubResource("ShaderMaterial_v4xfe")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0682586, 0, 0, 0, 0.00230959, 0, 0, 0, 0.0682586, 0, 0, 0)
layers = 2
mesh = SubResource("CylinderMesh_nufnr")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("ShaderMaterial_4jhqi")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000622556, 0.00826263, -0.000192255)
shape = SubResource("BoxShape3D_mdprb")
disabled = true

[node name="photo" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0575424, 0, 0, 0, -0.00215731, -5.03052e-09, 0, 1.88598e-10, -0.0575425, 0.000475392, 0.00130028, 0)
layers = 2
mesh = SubResource("CylinderMesh_8mitn")
skeleton = NodePath("")
surface_material_override/0 = ExtResource("4_5hroj")

[connection signal="on_click" from="Select_this" to="Select_this" method="_on_on_click"]
