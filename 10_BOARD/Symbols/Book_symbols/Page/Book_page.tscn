[gd_scene load_steps=8 format=3 uid="uid://db6k1p6qd826g"]

[ext_resource type="Script" path="res://10_BOARD/Symbols/Book_symbols/Page/Book_page_set.gd" id="1_oto3u"]
[ext_resource type="PackedScene" uid="uid://cotyiiewaqqpu" path="res://10_BOARD/Symbols/Book_symbols/Page/page_00.tscn" id="3_ybf1m"]
[ext_resource type="PackedScene" uid="uid://c2xru5it6u2xg" path="res://00_SCENE/Scene_Test/Test_ui_2d_3d/Ui.tscn" id="5_aq46x"]

[sub_resource type="ViewportTexture" id="ViewportTexture_wygim"]
viewport_path = NodePath("Book_inputViewports/SubViewport")

[sub_resource type="GDScript" id="GDScript_hjfak"]
script/source = "extends Node

@onready var display = $\"../Render\"
@onready var viewport = $\"../SubViewport\"
@onready var area = $\"../Render/Area3D\"

var mesh_size = Vector2()

var mouse_entered = false
var mouse_held = false
var mouse_inside = false

var last_mouse_pos_3D = null
var last_mouse_pos_2D = null	


# Called when the node enters the scene tree for the first time.
func _ready():
	#area.mouse_entered.connect(func(): mouse_entered = true)
	viewport.set_process_input(true)
	
	
func _unhandled_input(event):
	
	if !mouse_entered:
		return
		
	var is_mouse_event = false
	if event is InputEventMouseMotion or event is InputEventMouseButton:
		is_mouse_event = true
		
	if mouse_entered and (is_mouse_event or mouse_held):
		handle_mouse(event)
	elif not is_mouse_event:
		viewport.push_input(event,true)
	
	
func handle_mouse(event):
	mesh_size = display.mesh.size
	
	if event is InputEventMouseButton or event is InputEventScreenTouch:
		mouse_held = event.pressed
	else:
		return	
	var mouse_pos3D = find_mouse(event.global_position)
	
	mouse_inside = mouse_pos3D != null
	
	if mouse_inside:
		mouse_pos3D = area.global_transform.affine_inverse() * mouse_pos3D
		last_mouse_pos_3D = mouse_pos3D
	else:
		mouse_pos3D = last_mouse_pos_3D
		if mouse_pos3D == null:
			mouse_pos3D = Vector3.ZERO
	var mouse_pos2D = Vector2(mouse_pos3D.x, -mouse_pos3D.y)
	
	#convert from -meshsize/2 to meshsize/2
	mouse_pos2D.x += mesh_size.x / 2
	mouse_pos2D.y += mesh_size.y / 2
	#convert to 0 to 1
	mouse_pos2D.x = mouse_pos2D.x / mesh_size.x 
	mouse_pos2D.y = mouse_pos2D.y / mesh_size.y
	#convert to viewport range 0 to veiwport size
	mouse_pos2D.x = mouse_pos2D.x * viewport.size.x
	mouse_pos2D.y = mouse_pos2D.y * viewport.size.y
	
	event.position = mouse_pos2D
	event.global_position = mouse_pos2D
	
	if event is InputEventMouseMotion:
		if last_mouse_pos_2D == null:
			event.relative = Vector2(0,0)
		else:
			event.relative = mouse_pos2D - last_mouse_pos_2D
		
	last_mouse_pos_2D = mouse_pos2D
	
	viewport.push_input(event)
	

func find_mouse(pos:Vector2):
	
	#var camera = _global_datas.board_camera
	var camera = get_viewport().get_camera_3d()
	var dss:PhysicsDirectSpaceState3D = camera.get_world_3d().direct_space_state
	
	var rayparam = PhysicsRayQueryParameters3D.new()
	rayparam.from = camera.project_ray_origin(pos)
	var dis = 10
	rayparam.to = rayparam.from + camera.project_ray_normal(pos) * dis
	rayparam.collide_with_bodies = false
	rayparam.collide_with_areas = true
	
	var result = dss.intersect_ray(rayparam)
	#print(result)
	if result.size() > 0:
		return result.position
	else:
		return null
	


func _on_area_3d_mouse_entered():
	mouse_entered = true


func _on_area_3d_mouse_exited():
	mouse_entered = false
"

[sub_resource type="QuadMesh" id="QuadMesh_xhsor"]

[sub_resource type="BoxShape3D" id="BoxShape3D_rbi75"]
size = Vector3(0.989746, 0.999625, 0.0659904)

[node name="Book_page" type="Node3D"]
script = ExtResource("1_oto3u")

[node name="Timer" type="Timer" parent="."]
wait_time = 0.25
one_shot = true

[node name="Init_timer" type="Timer" parent="."]
wait_time = 0.25
one_shot = true

[node name="Render_text" type="Sprite3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0, 1, 0, -1, 0, 0, 0.366, 0)
layers = 512
texture = SubResource("ViewportTexture_wygim")

[node name="Book_inputViewports" type="Node3D" parent="."]
transform = Transform3D(5.83591, 0, 0, 0, 5.83591, 0, 0, 0, 5.83591, 0, 0.462836, 0)

[node name="Input_behave" type="Node" parent="Book_inputViewports"]
script = SubResource("GDScript_hjfak")

[node name="Render" type="MeshInstance3D" parent="Book_inputViewports"]
transform = Transform3D(1.6, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
layers = 0
mesh = SubResource("QuadMesh_xhsor")

[node name="Area3D" type="Area3D" parent="Book_inputViewports/Render"]
priority = 1

[node name="CollisionShape3D" type="CollisionShape3D" parent="Book_inputViewports/Render/Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, -2.98023e-08, 0, 2.98023e-08, 1, 0.00527191, -3.85342e-10, 0.0129299)
shape = SubResource("BoxShape3D_rbi75")

[node name="SubViewport" type="SubViewport" parent="Book_inputViewports"]
disable_3d = true
transparent_bg = true
size = Vector2i(1000, 600)

[node name="Ui" parent="Book_inputViewports/SubViewport" instance=ExtResource("5_aq46x")]
visible = false
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="pages" parent="Book_inputViewports/SubViewport" instance=ExtResource("3_ybf1m")]

[connection signal="set_content" from="." to="." method="_on_set_content"]
[connection signal="show_content" from="." to="." method="_on_show_content"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
[connection signal="timeout" from="Init_timer" to="." method="_on_init_timer_timeout"]
[connection signal="mouse_entered" from="Book_inputViewports/Render/Area3D" to="Book_inputViewports/Input_behave" method="_on_area_3d_mouse_entered"]
[connection signal="mouse_exited" from="Book_inputViewports/Render/Area3D" to="Book_inputViewports/Input_behave" method="_on_area_3d_mouse_exited"]
