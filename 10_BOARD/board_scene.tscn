[gd_scene load_steps=105 format=3 uid="uid://dr73p5vs0sixe"]

[ext_resource type="Script" path="res://12_INVENTORY/Behaviour/legend.tres.gd" id="2_5gjrt"]
[ext_resource type="Shader" uid="uid://cw0x3o7tvvdcv" path="res://12_INVENTORY/Map/Map_board_sh.tres" id="3_vh83x"]
[ext_resource type="Shader" uid="uid://upo0fuo5sqgd" path="res://05_SHADER_TEST/Board/Board_sh.tres" id="3_x8kcj"]
[ext_resource type="Script" path="res://10_BOARD/Player_onMap.gd" id="3_xuqip"]
[ext_resource type="Script" path="res://10_BOARD/Take_Object.tres.gd" id="4_uxp87"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_sna37"]
parameter_name = "Dark_color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ayqg0"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_k7l2u"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_x5lih"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_h83oq"]
parameter_name = "light_color"
default_value = Color(0.401313, 0.399257, 0, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_fd8lw"]
default_input_values = [0, 0.0, 1, 0.2]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_mkeci"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_qrbwc"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mkac3"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rqu41"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_0kqya"]
default_input_values = [0, 0.0, 1, 0.125, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_m867u"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_hwstg"]
parameter_name = "Distance_power"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_dikl5"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_y3frn"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_m1c2g"]
constant = 1.156

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_y2bxe"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_8ru3c"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0wo4f"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_85fqd"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_2oio3"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3n6m5"]
input_name = "light"

[sub_resource type="VisualShader" id="VisualShader_5n751"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;


// Varyings
varying vec3 dark_color_var;

uniform vec4 Dark_color : source_color;
uniform float Distance_power = 0.25;
uniform vec4 light_color : source_color;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


	dark_color_var = vec3(0.0);
}

void light() {
// Input:18
	vec3 n_out18p0 = ALBEDO;


// FloatParameter:20
	float n_out20p0 = Distance_power;


// FloatConstant:3
	float n_out3p0 = 1.156000;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:6
	vec3 n_out6p0 = NORMAL;


// Input:9
	vec3 n_out9p0 = LIGHT;


// DotProduct:7
	float n_out7p0 = dot(n_out6p0, n_out9p0);


// Clamp:8
	float n_in8p1 = 0.00000;
	float n_in8p2 = 1.00000;
	float n_out8p0 = clamp(n_out7p0, n_in8p1, n_in8p2);


// Input:15
	float n_out15p0 = ATTENUATION;


// FloatOp:16
	float n_in16p1 = 1.00000;
	float n_out16p0 = n_out15p0 * n_in16p1;


// VectorOp:17
	vec3 n_out17p0 = vec3(n_out8p0) * vec3(n_out16p0);


// Step:5
	float n_out5p0 = step(n_out4p0, n_out17p0.x);


// Mix:19
	float n_in19p0 = 0.00000;
	float n_out19p0 = mix(n_in19p0, n_out20p0, n_out5p0);


// Mix:12
	vec3 n_in12p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out12p0 = mix(n_in12p0, n_out18p0, vec3(n_out19p0));


// ColorParameter:13
	vec4 n_out13p0 = light_color;


// Input:10
	float n_out10p0 = ATTENUATION;


// FloatOp:14
	float n_in14p1 = 0.20000;
	float n_out14p0 = n_out10p0 * n_in14p1;


// VectorOp:11
	vec2 n_out11p0 = vec2(n_out8p0) * vec2(n_out14p0);


// Step:21
	float n_out21p0 = step(n_out4p0, n_out11p0.x);


// Mix:22
	vec3 n_out22p0 = mix(n_out12p0, vec3(n_out13p0.xyz), vec3(n_out21p0));


// Output:0
	SPECULAR_LIGHT = n_out22p0;


}
"
varyings/dark_color_var = "1,4"
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_sna37")
nodes/fragment/2/position = Vector2(-20, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
nodes/light/0/position = Vector2(2440, 1640)
nodes/light/2/node = SubResource("VisualShaderNodeFloatConstant_m867u")
nodes/light/2/position = Vector2(-460, 2120)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_m1c2g")
nodes/light/3/position = Vector2(-460, 1980)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_y2bxe")
nodes/light/4/position = Vector2(-180, 1980)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/5/node = SubResource("VisualShaderNodeStep_8ru3c")
nodes/light/5/position = Vector2(720, 1500)
nodes/light/6/node = SubResource("VisualShaderNodeInput_0wo4f")
nodes/light/6/position = Vector2(-1160, 1320)
nodes/light/7/node = SubResource("VisualShaderNodeDotProduct_85fqd")
nodes/light/7/position = Vector2(-740, 1440)
nodes/light/8/node = SubResource("VisualShaderNodeClamp_2oio3")
nodes/light/8/position = Vector2(-540, 1320)
nodes/light/9/node = SubResource("VisualShaderNodeInput_3n6m5")
nodes/light/9/position = Vector2(-1160, 1620)
nodes/light/10/node = SubResource("VisualShaderNodeInput_ayqg0")
nodes/light/10/position = Vector2(-800, 1740)
nodes/light/11/node = SubResource("VisualShaderNodeVectorOp_k7l2u")
nodes/light/11/position = Vector2(-240, 1600)
nodes/light/12/node = SubResource("VisualShaderNodeMix_x5lih")
nodes/light/12/position = Vector2(1860, 1200)
nodes/light/13/node = SubResource("VisualShaderNodeColorParameter_h83oq")
nodes/light/13/position = Vector2(1560, 1580)
nodes/light/14/node = SubResource("VisualShaderNodeFloatOp_fd8lw")
nodes/light/14/position = Vector2(-420, 1720)
nodes/light/15/node = SubResource("VisualShaderNodeInput_mkeci")
nodes/light/15/position = Vector2(-300, 1420)
nodes/light/16/node = SubResource("VisualShaderNodeFloatOp_qrbwc")
nodes/light/16/position = Vector2(80, 1400)
nodes/light/17/node = SubResource("VisualShaderNodeVectorOp_mkac3")
nodes/light/17/position = Vector2(260, 1280)
nodes/light/18/node = SubResource("VisualShaderNodeInput_rqu41")
nodes/light/18/position = Vector2(1380, 940)
nodes/light/19/node = SubResource("VisualShaderNodeMix_0kqya")
nodes/light/19/position = Vector2(1560, 1360)
nodes/light/20/node = SubResource("VisualShaderNodeFloatParameter_hwstg")
nodes/light/20/position = Vector2(920, 1160)
nodes/light/21/node = SubResource("VisualShaderNodeStep_dikl5")
nodes/light/21/position = Vector2(720, 1700)
nodes/light/22/node = SubResource("VisualShaderNodeMix_y3frn")
nodes/light/22/position = Vector2(2160, 1660)
nodes/light/connections = PackedInt32Array(8, 0, 11, 0, 2, 0, 4, 1, 3, 0, 4, 0, 10, 0, 14, 0, 14, 0, 11, 1, 8, 0, 17, 0, 19, 0, 12, 2, 5, 0, 19, 2, 13, 0, 22, 1, 12, 0, 22, 0, 21, 0, 22, 2, 4, 0, 5, 0, 4, 0, 21, 0, 15, 0, 16, 0, 16, 0, 17, 1, 7, 0, 8, 0, 6, 0, 7, 0, 17, 0, 5, 1, 11, 0, 21, 1, 9, 0, 7, 1, 20, 0, 19, 1, 22, 0, 0, 1, 18, 0, 12, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e35y2"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_5n751")
shader_parameter/Dark_color = Color(0.909804, 0.858824, 0.729412, 1)
shader_parameter/Distance_power = 0.605
shader_parameter/light_color = Color(0.952941, 0.847059, 0.596078, 1)

[sub_resource type="BoxMesh" id="BoxMesh_xb1hd"]
material = SubResource("ShaderMaterial_e35y2")

[sub_resource type="BoxShape3D" id="BoxShape3D_p0a4y"]
size = Vector3(0.238522, 0.00703818, 0.281548)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_a7r33"]
parameter_name = "Dark_color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2i6an"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_orti7"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_oya68"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_fc8pg"]
parameter_name = "light_color"
default_value = Color(0.401313, 0.399257, 0, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_q5b67"]
default_input_values = [0, 0.0, 1, 0.2]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rsl7e"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_rlc65"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_gskvi"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_48q23"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_g0vwl"]
default_input_values = [0, 0.0, 1, 0.125, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_nhfoq"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_dqqwl"]
parameter_name = "Distance_power"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_14rhv"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_i3r0b"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_uav1y"]
constant = 1.156

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_04wn3"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_iyyhy"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_26cax"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_0wwl6"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_cxkfo"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pfaad"]
input_name = "light"

[sub_resource type="VisualShader" id="VisualShader_urwp6"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;


// Varyings
varying vec3 dark_color_var;

uniform vec4 Dark_color : source_color;
uniform float Distance_power = 0.25;
uniform vec4 light_color : source_color;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


	dark_color_var = vec3(0.0);
}

void light() {
// Input:18
	vec3 n_out18p0 = ALBEDO;


// FloatParameter:20
	float n_out20p0 = Distance_power;


// FloatConstant:3
	float n_out3p0 = 1.156000;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:6
	vec3 n_out6p0 = NORMAL;


// Input:9
	vec3 n_out9p0 = LIGHT;


// DotProduct:7
	float n_out7p0 = dot(n_out6p0, n_out9p0);


// Clamp:8
	float n_in8p1 = 0.00000;
	float n_in8p2 = 1.00000;
	float n_out8p0 = clamp(n_out7p0, n_in8p1, n_in8p2);


// Input:15
	float n_out15p0 = ATTENUATION;


// FloatOp:16
	float n_in16p1 = 1.00000;
	float n_out16p0 = n_out15p0 * n_in16p1;


// VectorOp:17
	vec3 n_out17p0 = vec3(n_out8p0) * vec3(n_out16p0);


// Step:5
	float n_out5p0 = step(n_out4p0, n_out17p0.x);


// Mix:19
	float n_in19p0 = 0.00000;
	float n_out19p0 = mix(n_in19p0, n_out20p0, n_out5p0);


// Mix:12
	vec3 n_in12p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out12p0 = mix(n_in12p0, n_out18p0, vec3(n_out19p0));


// ColorParameter:13
	vec4 n_out13p0 = light_color;


// Input:10
	float n_out10p0 = ATTENUATION;


// FloatOp:14
	float n_in14p1 = 0.20000;
	float n_out14p0 = n_out10p0 * n_in14p1;


// VectorOp:11
	vec2 n_out11p0 = vec2(n_out8p0) * vec2(n_out14p0);


// Step:21
	float n_out21p0 = step(n_out4p0, n_out11p0.x);


// Mix:22
	vec3 n_out22p0 = mix(n_out12p0, vec3(n_out13p0.xyz), vec3(n_out21p0));


// Output:0
	SPECULAR_LIGHT = n_out22p0;


}
"
varyings/dark_color_var = "1,4"
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_a7r33")
nodes/fragment/2/position = Vector2(-20, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
nodes/light/0/position = Vector2(2440, 1640)
nodes/light/2/node = SubResource("VisualShaderNodeFloatConstant_nhfoq")
nodes/light/2/position = Vector2(-460, 2120)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_uav1y")
nodes/light/3/position = Vector2(-460, 1980)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_04wn3")
nodes/light/4/position = Vector2(-180, 1980)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/5/node = SubResource("VisualShaderNodeStep_iyyhy")
nodes/light/5/position = Vector2(720, 1500)
nodes/light/6/node = SubResource("VisualShaderNodeInput_26cax")
nodes/light/6/position = Vector2(-1160, 1320)
nodes/light/7/node = SubResource("VisualShaderNodeDotProduct_0wwl6")
nodes/light/7/position = Vector2(-740, 1440)
nodes/light/8/node = SubResource("VisualShaderNodeClamp_cxkfo")
nodes/light/8/position = Vector2(-540, 1320)
nodes/light/9/node = SubResource("VisualShaderNodeInput_pfaad")
nodes/light/9/position = Vector2(-1160, 1620)
nodes/light/10/node = SubResource("VisualShaderNodeInput_2i6an")
nodes/light/10/position = Vector2(-800, 1740)
nodes/light/11/node = SubResource("VisualShaderNodeVectorOp_orti7")
nodes/light/11/position = Vector2(-240, 1600)
nodes/light/12/node = SubResource("VisualShaderNodeMix_oya68")
nodes/light/12/position = Vector2(1860, 1200)
nodes/light/13/node = SubResource("VisualShaderNodeColorParameter_fc8pg")
nodes/light/13/position = Vector2(1560, 1580)
nodes/light/14/node = SubResource("VisualShaderNodeFloatOp_q5b67")
nodes/light/14/position = Vector2(-420, 1720)
nodes/light/15/node = SubResource("VisualShaderNodeInput_rsl7e")
nodes/light/15/position = Vector2(-300, 1420)
nodes/light/16/node = SubResource("VisualShaderNodeFloatOp_rlc65")
nodes/light/16/position = Vector2(80, 1400)
nodes/light/17/node = SubResource("VisualShaderNodeVectorOp_gskvi")
nodes/light/17/position = Vector2(260, 1280)
nodes/light/18/node = SubResource("VisualShaderNodeInput_48q23")
nodes/light/18/position = Vector2(1380, 940)
nodes/light/19/node = SubResource("VisualShaderNodeMix_g0vwl")
nodes/light/19/position = Vector2(1560, 1360)
nodes/light/20/node = SubResource("VisualShaderNodeFloatParameter_dqqwl")
nodes/light/20/position = Vector2(920, 1160)
nodes/light/21/node = SubResource("VisualShaderNodeStep_14rhv")
nodes/light/21/position = Vector2(720, 1700)
nodes/light/22/node = SubResource("VisualShaderNodeMix_i3r0b")
nodes/light/22/position = Vector2(2160, 1660)
nodes/light/connections = PackedInt32Array(8, 0, 11, 0, 2, 0, 4, 1, 3, 0, 4, 0, 10, 0, 14, 0, 14, 0, 11, 1, 8, 0, 17, 0, 19, 0, 12, 2, 5, 0, 19, 2, 13, 0, 22, 1, 12, 0, 22, 0, 21, 0, 22, 2, 4, 0, 5, 0, 4, 0, 21, 0, 15, 0, 16, 0, 16, 0, 17, 1, 7, 0, 8, 0, 6, 0, 7, 0, 17, 0, 5, 1, 11, 0, 21, 1, 9, 0, 7, 1, 20, 0, 19, 1, 22, 0, 0, 1, 18, 0, 12, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t6f5r"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_urwp6")
shader_parameter/Dark_color = Color(0.227451, 0.192157, 0.101961, 1)
shader_parameter/Distance_power = 0.605
shader_parameter/light_color = Color(0.952941, 0.847059, 0.596078, 1)

[sub_resource type="BoxMesh" id="BoxMesh_thjsl"]
material = SubResource("ShaderMaterial_t6f5r")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_u8434"]
resource_local_to_scene = true
render_priority = 0
shader = ExtResource("3_x8kcj")
shader_parameter/Dark_color = Color(0.556863, 0.494118, 0.368627, 1)
shader_parameter/Distance_power = 0.39
shader_parameter/light_color = Color(0.54902, 0.454902, 0.235294, 1)

[sub_resource type="PlaneMesh" id="PlaneMesh_n7wwh"]
material = SubResource("ShaderMaterial_u8434")

[sub_resource type="CylinderShape3D" id="CylinderShape3D_lfqmn"]
height = 0.535279

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2nllp"]
render_priority = 0
shader = ExtResource("3_x8kcj")
shader_parameter/Dark_color = Color(0.580392, 0.505882, 0.317647, 1)
shader_parameter/Distance_power = 1.11
shader_parameter/light_color = Color(0.580392, 0.505882, 0.317647, 1)

[sub_resource type="CylinderMesh" id="CylinderMesh_31pyx"]
material = SubResource("ShaderMaterial_2nllp")

[sub_resource type="CylinderShape3D" id="CylinderShape3D_id5xd"]
height = 0.465031

[sub_resource type="ShaderMaterial" id="ShaderMaterial_pyl61"]
render_priority = 0
shader = ExtResource("3_x8kcj")
shader_parameter/Dark_color = Color(0.423529, 0.380392, 0, 1)
shader_parameter/Distance_power = 0.25
shader_parameter/light_color = Color(0.541176, 0.490196, 0, 1)

[sub_resource type="BoxMesh" id="BoxMesh_8e2mh"]
material = SubResource("ShaderMaterial_pyl61")

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_2obop"]
points = PackedVector3Array(0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, -0.5, -0.5, -0.5, 0.5, -0.5, -0.5, -0.5, 0.5, -0.5, -0.5, -0.5)

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_w37s1"]
parameter_name = "Dark_color"
default_value_enabled = true
default_value = Color(0.00254248, 0.0226963, 0.0250911, 1)

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_l0ssp"]

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_727di"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0dm3p"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_fmdwa"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="Gradient" id="Gradient_q8ggf"]
offsets = PackedFloat32Array(0.504399, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_f8128"]
gradient = SubResource("Gradient_q8ggf")
fill_from = Vector2(0, 1)
fill_to = Vector2(0, 0)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_i12a4"]
texture = SubResource("GradientTexture2D_f8128")

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_d7svr"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hyot4"]
input_name = "light"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_34l00"]
constant = 0.4

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_gl6xx"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wdy1s"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_rstpv"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_ut4in"]
function = 31

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_3bf33"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_vw3sk"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_240ap"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_7nvnj"]
source = 5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_uui5p"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u4yab"]
parameter_name = "isSubscene_value"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_2siwi"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 1, 1)]
op_type = 3

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_j0p1o"]
parameter_name = "stayGlobal"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_rledc"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_svtbx"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_qu8av"]
texture = SubResource("CompressedTexture2D_svtbx")

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_yivbv"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_p2mnx"]
function = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_nyi6p"]
constant = 25.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pgy42"]
input_name = "view"

[sub_resource type="VisualShader" id="VisualShader_cem3e"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 Dark_color : source_color = vec4(0.002542, 0.022696, 0.025091, 1.000000);



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


}
"
flags/unshaded = true
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_w37s1")
nodes/fragment/2/position = Vector2(-340, 100)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
nodes/light/0/position = Vector2(2620, 1260)
nodes/light/2/node = SubResource("VisualShaderNodeFloatConstant_34l00")
nodes/light/2/position = Vector2(80, 2020)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_uui5p")
nodes/light/3/position = Vector2(80, 1880)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_yivbv")
nodes/light/4/position = Vector2(380, 2000)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/10/node = SubResource("VisualShaderNodeClamp_l0ssp")
nodes/light/10/position = Vector2(320, 960)
nodes/light/11/node = SubResource("VisualShaderNodeStep_727di")
nodes/light/11/position = Vector2(1260, 1340)
nodes/light/12/node = SubResource("VisualShaderNodeInput_0dm3p")
nodes/light/12/position = Vector2(-420, 1220)
nodes/light/13/node = SubResource("VisualShaderNodeDotProduct_fmdwa")
nodes/light/13/position = Vector2(0, 1340)
nodes/light/16/node = SubResource("VisualShaderNodeTexture_i12a4")
nodes/light/16/position = Vector2(-1300, 1100)
nodes/light/17/node = SubResource("VisualShaderNodeClamp_d7svr")
nodes/light/17/position = Vector2(200, 1220)
nodes/light/19/node = SubResource("VisualShaderNodeInput_hyot4")
nodes/light/19/position = Vector2(-420, 1520)
nodes/light/20/node = SubResource("VisualShaderNodeInput_gl6xx")
nodes/light/20/position = Vector2(100, 1500)
nodes/light/21/node = SubResource("VisualShaderNodeVectorOp_wdy1s")
nodes/light/21/position = Vector2(460, 1240)
nodes/light/22/node = SubResource("VisualShaderNodeMix_rstpv")
nodes/light/22/position = Vector2(860, 1220)
nodes/light/23/node = SubResource("VisualShaderNodeFloatFunc_ut4in")
nodes/light/23/position = Vector2(640, 1400)
nodes/light/25/node = SubResource("VisualShaderNodeMix_3bf33")
nodes/light/25/position = Vector2(2060, 1260)
nodes/light/26/node = SubResource("VisualShaderNodeColorParameter_vw3sk")
nodes/light/26/position = Vector2(1200, 1020)
nodes/light/27/node = SubResource("VisualShaderNodeTexture2DParameter_240ap")
nodes/light/27/position = Vector2(-540, 780)
nodes/light/28/node = SubResource("VisualShaderNodeTexture_7nvnj")
nodes/light/28/position = Vector2(-105.501, 1032.88)
nodes/light/32/node = SubResource("VisualShaderNodeFloatParameter_u4yab")
nodes/light/32/position = Vector2(1200, 820)
nodes/light/35/node = SubResource("VisualShaderNodeMix_2siwi")
nodes/light/35/position = Vector2(1600, 920)
nodes/light/37/node = SubResource("VisualShaderNodeBooleanParameter_j0p1o")
nodes/light/37/position = Vector2(1780, 800)
nodes/light/38/node = SubResource("VisualShaderNodeSwitch_rledc")
nodes/light/38/position = Vector2(2120, 960)
nodes/light/39/node = SubResource("VisualShaderNodeTexture_qu8av")
nodes/light/39/position = Vector2(640, 1620)
nodes/light/40/node = SubResource("VisualShaderNodeUVFunc_p2mnx")
nodes/light/40/position = Vector2(300, 1660)
nodes/light/41/node = SubResource("VisualShaderNodeFloatConstant_nyi6p")
nodes/light/41/position = Vector2(20, 1780)
nodes/light/42/node = SubResource("VisualShaderNodeInput_pgy42")
nodes/light/42/position = Vector2(0, 1640)
nodes/light/connections = PackedInt32Array(12, 0, 13, 0, 13, 0, 17, 0, 19, 0, 13, 1, 17, 0, 21, 0, 20, 0, 21, 1, 21, 0, 23, 0, 11, 0, 25, 2, 2, 0, 4, 1, 3, 0, 4, 0, 28, 0, 10, 0, 26, 0, 35, 1, 32, 0, 35, 2, 37, 0, 38, 0, 35, 0, 38, 1, 26, 0, 38, 2, 38, 0, 25, 1, 16, 0, 28, 0, 23, 0, 22, 2, 10, 0, 22, 0, 27, 0, 28, 2, 22, 0, 11, 1, 40, 0, 39, 0, 41, 0, 40, 1, 42, 0, 40, 0, 4, 0, 11, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_f04jl"]
render_priority = 0
shader = SubResource("VisualShader_cem3e")
shader_parameter/Dark_color = Color(0.0117647, 0.0901961, 0.0980392, 1)

[sub_resource type="BoxMesh" id="BoxMesh_dyvqk"]
material = SubResource("ShaderMaterial_f04jl")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_y3oha"]
render_priority = 0
shader = ExtResource("3_x8kcj")
shader_parameter/Dark_color = Color(0.054902, 0.219608, 0.235294, 1)
shader_parameter/Distance_power = 0.52
shader_parameter/light_color = Color(0.560784, 0.521569, 0.388235, 1)

[sub_resource type="BoxMesh" id="BoxMesh_1smid"]
material = SubResource("ShaderMaterial_y3oha")

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_uho0q"]
data = PackedVector3Array(-0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, -0.5, -0.5, 0.5, -0.5, -0.5, -0.5, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, -0.5, 0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, -0.5, -0.5, -0.5, -0.5, 0.5, 0.5, -0.5, -0.5, 0.5, -0.5, -0.5, -0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, -0.5, 0.5, 0.5, -0.5, -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, -0.5, 0.5, -0.5, 0.5, 0.5, -0.5, -0.5, -0.5, -0.5, -0.5)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ok24o"]
resource_local_to_scene = true
render_priority = 0
shader = ExtResource("3_vh83x")
shader_parameter/Dark_color = Color(0.0901961, 0.313726, 0.329412, 1)
shader_parameter/Color = Color(0.027451, 0.14902, 0.156863, 1)
shader_parameter/Color2 = Color(0.560784, 0.521569, 0.388235, 1)
shader_parameter/Grid_color = Color(0.560784, 0.521569, 0.388235, 1)
shader_parameter/Offset = Vector2(0, 0)
shader_parameter/Size = Vector2(1000, 1000)
shader_parameter/Ligne_widht = 0.025

[sub_resource type="PlaneMesh" id="PlaneMesh_x8wfj"]
material = SubResource("ShaderMaterial_ok24o")

[sub_resource type="BoxMesh" id="BoxMesh_vyyxx"]

[node name="Board_scene" type="Node3D"]

[node name="RigidBody3D2" type="RigidBody3D" parent="."]
transform = Transform3D(0.988113, 0, 0.153727, 0, 1, 0, -0.153727, 0, 0.988113, -0.38735, 0.0146963, -0.029226)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
gravity_scale = 0.5
freeze = true
script = ExtResource("4_uxp87")
close_to_eyes_value = 0.8

[node name="Legend" type="Node" parent="RigidBody3D2"]
script = ExtResource("2_5gjrt")
_legend = "I'm a book"

[node name="MeshInstance3D3" type="MeshInstance3D" parent="RigidBody3D2"]
transform = Transform3D(0.232056, 0, 3.72529e-09, 0, 0.0149305, 0, 0, 0, 0.270978, 0, 0, 0)
layers = 2
mesh = SubResource("BoxMesh_xb1hd")
skeleton = NodePath("../../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D2"]
transform = Transform3D(1, 0, 2.98023e-08, 0, 2.19258, 0, -2.98023e-08, 0, 1, -0.00217411, -0.000463009, -0.00331342)
shape = SubResource("BoxShape3D_p0a4y")

[node name="MeshInstance3D4" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0486714, 0, 0.474196, 0, 0.00627754, 0, -0.309219, 0, 0.0746389, 0.414458, 0.00372964, 0.321975)
layers = 2
mesh = SubResource("BoxMesh_thjsl")
skeleton = NodePath("../..")

[node name="MeshInstance3D5" type="MeshInstance3D" parent="MeshInstance3D4"]
transform = Transform3D(0.000622794, 0, -0.520449, 0, 69.5124, 0, 0.516882, 0, 0.000266694, -0.00123036, 0.193843, -0.00623751)
layers = 2
mesh = SubResource("PlaneMesh_n7wwh")
skeleton = NodePath("../../..")

[node name="RigidBody3D" type="RigidBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.54463, -0.00125363, -0.260685)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D"]
transform = Transform3D(0.0920533, 0, 0, 0, 0.0920533, 0, 0, 0, 0.0920533, 0, 0.0242389, 0)
shape = SubResource("CylinderShape3D_lfqmn")

[node name="MeshInstance3D8" type="MeshInstance3D" parent="RigidBody3D"]
transform = Transform3D(0.091233, 0, 0.0122607, 0, 0.0212568, 0, -0.0122607, 0, 0.091233, 0, 0.0242101, 0)
layers = 2
mesh = SubResource("CylinderMesh_31pyx")
skeleton = NodePath("../..")

[node name="OmniLight3D2" type="OmniLight3D" parent="RigidBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0470352, 0)
visible = false
layers = 2
omni_range = 0.27479
omni_attenuation = 0.307786

[node name="RigidBody3D3" type="RigidBody3D" parent="."]
transform = Transform3D(0.99109, 0, 0.133191, 0, 1, 0, -0.133191, 0, 0.99109, 0.284265, -0.000221903, -0.0474926)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="RigidBody3D3"]
transform = Transform3D(0.0920532, 0, 5.58794e-09, 0, 0.0212568, 0, -5.58794e-09, 0, 0.0920532, -0.000256777, 0.02379, -0.0007523)
layers = 2
mesh = SubResource("CylinderMesh_31pyx")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D3"]
transform = Transform3D(0.0920533, 0, 2.79397e-09, 0, 0.0920533, 0, -2.79397e-09, 0, 0.0920533, 0, 0.0226479, 0)
shape = SubResource("CylinderShape3D_id5xd")

[node name="RigidBody3D6" type="RigidBody3D" parent="."]
transform = Transform3D(0.99109, 0, 0.133191, 0, 1, 0, -0.133191, 0, 0.99109, 0.59807, -0.00125363, -0.133511)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="RigidBody3D6"]
transform = Transform3D(0.0920532, 0, 2.79397e-09, 0, 0.0212568, 0, -2.79397e-09, 0, 0.0920532, 0, 0.0227801, 0)
layers = 2
mesh = SubResource("CylinderMesh_31pyx")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D6"]
transform = Transform3D(0.0920533, 0, 2.79397e-09, 0, 0.0920533, 0, -2.79397e-09, 0, 0.0920533, 0, 0.0226479, 0)
shape = SubResource("CylinderShape3D_id5xd")

[node name="RigidBody3D7" type="RigidBody3D" parent="."]
transform = Transform3D(0.99109, 0, 0.133191, 0, 1, 0, -0.133191, 0, 0.99109, 0.679831, -0.00125363, 0.0227384)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="RigidBody3D7"]
transform = Transform3D(0.0920532, 0, 2.79397e-09, 0, 0.0212568, 0, -2.79397e-09, 0, 0.0920532, 0, 0.0227801, 0)
layers = 2
mesh = SubResource("CylinderMesh_31pyx")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D7"]
transform = Transform3D(0.0920533, 0, 2.79397e-09, 0, 0.0920533, 0, -2.79397e-09, 0, 0.0920533, 0, 0.0226479, 0)
shape = SubResource("CylinderShape3D_id5xd")

[node name="RigidBody3D8" type="RigidBody3D" parent="."]
transform = Transform3D(0.99109, 0, 0.133191, 0, 1, 0, -0.133191, 0, 0.99109, 0.70158, -0.00125363, 0.135368)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="RigidBody3D8"]
transform = Transform3D(0.0920532, 0, 2.79397e-09, 0, 0.0212568, 0, -2.79397e-09, 0, 0.0920532, 0, 0.0227801, 0)
layers = 2
mesh = SubResource("CylinderMesh_31pyx")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D8"]
transform = Transform3D(0.0920533, 0, 2.79397e-09, 0, 0.0920533, 0, -2.79397e-09, 0, 0.0920533, 0, 0.0226479, 0)
shape = SubResource("CylinderShape3D_id5xd")

[node name="RigidBody3D9" type="RigidBody3D" parent="."]
transform = Transform3D(0.99109, 0, 0.133191, 0, 1, 0, -0.133191, 0, 0.99109, -0.0102261, -0.00125363, -0.188645)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="RigidBody3D9"]
transform = Transform3D(0.0920532, 0, 2.79397e-09, 0, 0.0212568, 0, -2.79397e-09, 0, 0.0920532, 0, 0.0227801, 0)
layers = 2
mesh = SubResource("CylinderMesh_31pyx")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D9"]
transform = Transform3D(0.0920533, 0, 2.79397e-09, 0, 0.0920533, 0, -2.79397e-09, 0, 0.0920533, 0, 0.0226479, 0)
shape = SubResource("CylinderShape3D_id5xd")

[node name="RigidBody3D4" type="RigidBody3D" parent="."]
transform = Transform3D(0.99109, 0, 0.133191, 0, 1, 0, -0.133191, 0, 0.99109, 0.44248, -0.00125363, -0.176062)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="RigidBody3D4"]
transform = Transform3D(0.0920533, 0, 0, 0, 0.0920533, 0, 0, 0, 0.0920533, 0, 0.045312, 0)
layers = 2
mesh = SubResource("BoxMesh_8e2mh")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D4"]
transform = Transform3D(0.0920533, 0, 0, 0, 0.0920533, 0, 0, 0, 0.0920533, 0, 0.045312, 0)
shape = SubResource("ConvexPolygonShape3D_2obop")

[node name="RigidBody3D5" type="RigidBody3D" parent="."]
transform = Transform3D(0.99109, 0, 0.133191, 0, 1, 0, -0.133191, 0, 0.99109, 0.300755, -0.00125363, -0.294011)
collision_layer = 256
collision_mask = 256
axis_lock_angular_x = true
axis_lock_angular_y = true
axis_lock_angular_z = true
mass = 0.5
freeze = true
script = ExtResource("4_uxp87")

[node name="MeshInstance3D7" type="MeshInstance3D" parent="RigidBody3D5"]
transform = Transform3D(0.0920533, 0, 3.72529e-09, 0, 0.0920533, 0, -3.72529e-09, 0, 0.0920533, 0, 0.045312, 0)
layers = 2
mesh = SubResource("BoxMesh_8e2mh")
skeleton = NodePath("../..")

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D5"]
transform = Transform3D(0.0920533, 0, 0, 0, 0.0920533, 0, 0, 0, 0.0920533, 0, 0.045312, 0)
shape = SubResource("ConvexPolygonShape3D_2obop")

[node name="MeshInstance3D6" type="MeshInstance3D" parent="."]
transform = Transform3D(4.88264, 0, 0, 0, 0.066768, 0, 0, 0, 3.93706, 0, -0.511143, 0)
layers = 2
mesh = SubResource("BoxMesh_dyvqk")
skeleton = NodePath("../..")

[node name="Table" type="MeshInstance3D" parent="."]
transform = Transform3D(1.79114, 0, 0, 0, 0.066768, 0, 0, 0, 1, 0, -0.0336317, 0)
layers = 2
mesh = SubResource("BoxMesh_1smid")
skeleton = NodePath("../..")

[node name="StaticBody3D" type="StaticBody3D" parent="Table"]
collision_layer = 256
collision_mask = 0

[node name="CollisionShape3D" type="CollisionShape3D" parent="Table/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_uho0q")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(0.389267, 0, -5.87777e-08, 0, 0.532513, 0, 5.87777e-08, 0, 0.389267, 0, 0.00272149, 0)
layers = 2
mesh = SubResource("PlaneMesh_x8wfj")
skeleton = NodePath("../..")

[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
transform = Transform3D(0.40054, 0, -6.14387e-08, 0, 0.532513, 0, 6.04798e-08, 0, 0.40689, 0, 0.000335435, 0)
layers = 2
mesh = SubResource("PlaneMesh_n7wwh")
skeleton = NodePath("../..")

[node name="Player_on_map" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.00769755, 0)
script = ExtResource("3_xuqip")
offset = Vector3(-0.382, 0.048, 0.378)
division_scale = 32.5

[node name="MeshInstance3D" type="MeshInstance3D" parent="Player_on_map"]
transform = Transform3D(0.0156921, 0, 0, 0, 0.0156921, 0, 0, 0, 0.0156921, 0, 0, 0)
layers = 2
mesh = SubResource("BoxMesh_vyyxx")

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.054342, 0.867136, -0.05743)
layers = 2
shadow_enabled = true
shadow_bias = 0.025
shadow_opacity = 0.6
omni_range = 5.8664
omni_attenuation = 1.14868

[connection signal="input_event" from="RigidBody3D2" to="RigidBody3D2" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D" to="RigidBody3D" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D3" to="RigidBody3D3" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D6" to="RigidBody3D6" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D7" to="RigidBody3D7" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D8" to="RigidBody3D8" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D9" to="RigidBody3D9" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D4" to="RigidBody3D4" method="_on_input_event"]
[connection signal="input_event" from="RigidBody3D5" to="RigidBody3D5" method="_on_input_event"]
