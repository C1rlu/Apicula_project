[gd_resource type="VisualShader" load_steps=3 format=3 uid="uid://ceec4w3amlx7t"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pqrsr"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_a2ixj"]
parameter_name = "Texture2DParameter"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform sampler2D Texture2DParameter;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, UV);
	float n_out3p4 = n_out3p0.a;


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out3p4;


}
"
graph_offset = Vector2(-629.661, -261.471)
flags/unshaded = true
flags/shadows_disabled = true
flags/ambient_light_disabled = true
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_pqrsr")
nodes/fragment/3/position = Vector2(-640, -160)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture2DParameter_a2ixj")
nodes/fragment/4/position = Vector2(-1060, -360)
nodes/fragment/connections = PackedInt32Array(4, 0, 3, 2, 3, 0, 0, 0, 3, 4, 0, 1)
