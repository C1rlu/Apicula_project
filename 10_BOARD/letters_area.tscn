[gd_scene load_steps=23 format=3 uid="uid://qgyjfq88teq8"]

[ext_resource type="Shader" uid="uid://upo0fuo5sqgd" path="res://05_SHADER_TEST/Board/Board_sh.tres" id="3_ydeap"]

[sub_resource type="GDScript" id="GDScript_ypp87"]
script/source = "extends Area3D

@export var Note_data : Note_Data

@onready var collision_shape_3d = $CollisionShape3D
@onready var photo = $photo
@onready var note_text = $Render_text
@onready var note = $Note

@onready var render_responce = $Render_responce

signal responce_link(text : String)

func _ready():
	note._set_note(Note_data.note_text,Note_data.from)
	Note_data.scene_node_3d = self
func _active():
	collision_shape_3d.disabled = false	

	photo.visible = true
	note_text.visible = true

func _disable():
	
	collision_shape_3d.disabled = true

	photo.visible = false
	note_text.visible = false
	render_responce.visible = false
	
"

[sub_resource type="GDScript" id="GDScript_4uwx0"]
script/source = "extends Node

@onready var note = $\"../Text_render/text\"
@onready var from = $\"../Text_render/text/from\"

func _set_note(_text : String, _from: String):
	note.text = _text
	from.text = _from
"

[sub_resource type="QuadMesh" id="QuadMesh_2j3jf"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_qw2qb"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_bquyj"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_h8sli"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_2ulhe"]
default_input_values = [0, 0.83, 1, 0.0]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_kj1yp"]
constant = Color(0.73, 0.47377, 0.1606, 1)

[sub_resource type="VisualShader" id="VisualShader_or8y4"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

global uniform float Dither_size;



void fragment() {
// ColorConstant:7
	vec4 n_out7p0 = vec4(0.730000, 0.473770, 0.160600, 1.000000);


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatParameter:5
	float n_out5p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_in6p0 = 0.83000;
	float n_out6p0 = step(n_in6p0, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out7p0.xyz);
	ALPHA = n_out6p0;


}
"
graph_offset = Vector2(-573.321, -129.617)
flags/unshaded = true
nodes/fragment/0/position = Vector2(580, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_qw2qb")
nodes/fragment/3/position = Vector2(-1180, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_bquyj")
nodes/fragment/4/position = Vector2(-900, 460)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_h8sli")
nodes/fragment/5/position = Vector2(-1540, 620)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_2ulhe")
nodes/fragment/6/position = Vector2(130.23, 516.22)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_kj1yp")
nodes/fragment/7/position = Vector2(226.136, 51.1274)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 4, 0, 6, 1, 6, 0, 0, 1, 7, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0o376"]
render_priority = 0
shader = SubResource("VisualShader_or8y4")

[sub_resource type="BoxShape3D" id="BoxShape3D_bangl"]
size = Vector3(0.704834, 0.0866016, 0.462646)

[sub_resource type="QuadMesh" id="QuadMesh_4umhe"]
resource_local_to_scene = true

[sub_resource type="ShaderMaterial" id="ShaderMaterial_e1a31"]
resource_local_to_scene = true
render_priority = 0
shader = ExtResource("3_ydeap")
shader_parameter/Dark_color = Color(0.0196078, 0.121569, 0.129412, 1)
shader_parameter/ColorParameter = Color(0.627451, 0.603922, 0.552941, 1)
shader_parameter/light_color = Color(0.670588, 0.654902, 0.607843, 1)

[sub_resource type="ViewportTexture" id="ViewportTexture_lq3n1"]
viewport_path = NodePath("Text_render")

[sub_resource type="ViewportTexture" id="ViewportTexture_trjqt"]
viewport_path = NodePath("Text_responce")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_o4cud"]
parameter_name = "link_opacity"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_4dsm5"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_y3xem"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_rax8w"]
input_name = "color"

[sub_resource type="VisualShader" id="VisualShader_sxcgk"]
code = "shader_type canvas_item;
render_mode blend_mix;

global uniform float link_opacity;



void fragment() {
// Input:5
	vec4 n_out5p0 = COLOR;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		float luminance = 0.299 * vec3(n_out5p0.xyz).x + 0.587 * vec3(n_out5p0.xyz).y + 0.114 * vec3(n_out5p0.xyz).z;
		n_out3p0 = luminance;
	}


// FloatParameter:2
	float n_out2p0 = link_opacity;


// Mix:4
	vec3 n_out4p0 = mix(vec3(n_out5p0.xyz), vec3(n_out3p0), vec3(n_out2p0));


// Output:0
	COLOR.rgb = n_out4p0;


}
"
graph_offset = Vector2(-372.561, -228.95)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(720, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatParameter_o4cud")
nodes/fragment/2/position = Vector2(-80, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_4dsm5")
nodes/fragment/3/position = Vector2(-220, -260)
nodes/fragment/3/size = Vector2(620, 200)
nodes/fragment/3/input_ports = "0,4,color;"
nodes/fragment/3/output_ports = "0,0,grey_value;"
nodes/fragment/3/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_y3xem")
nodes/fragment/4/position = Vector2(560, -60)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_rax8w")
nodes/fragment/5/position = Vector2(-580, -20)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 2, 3, 0, 4, 1, 5, 0, 3, 0, 5, 0, 4, 0, 4, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_iy2kr"]
shader = SubResource("VisualShader_sxcgk")

[node name="Letter_area" type="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.00272226, 0)
script = SubResource("GDScript_ypp87")

[node name="Note" type="Node" parent="."]
script = SubResource("GDScript_4uwx0")

[node name="IS_SELECT" type="MeshInstance3D" parent="."]
transform = Transform3D(0.1107, 0, 0, 0, -3.07261e-09, 0.0535114, 0, -0.0702929, -2.33906e-09, 0, 0.000994979, 0)
visible = false
layers = 2
mesh = SubResource("QuadMesh_2j3jf")
surface_material_override/0 = SubResource("ShaderMaterial_0o376")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(0.131916, 0, 0, 0, 0.131916, 0, 0, 0, 0.131916, -0.000177134, 0.00536683, 0.000563608)
shape = SubResource("BoxShape3D_bangl")

[node name="photo" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0928963, 0, 0, 0, -2.61143e-09, 0.0418911, 0, -0.0597425, -1.83112e-09, 0.000475392, 0.00130028, 0)
layers = 2
mesh = SubResource("QuadMesh_4umhe")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_e1a31")

[node name="Render_text" type="Sprite3D" parent="."]
transform = Transform3D(0.0136498, 0, 0, 0, -5.96652e-10, 0.0136498, 0, -0.0136498, -5.96652e-10, 0.000475392, 0.0021256, 0)
layers = 2
modulate = Color(0.333333, 0.321569, 0.286275, 1)
texture = SubResource("ViewportTexture_lq3n1")

[node name="Render_responce" type="Sprite3D" parent="."]
transform = Transform3D(0.0136338, -0.000659889, -2.88447e-11, -2.93582e-18, -5.96652e-10, 0.0136498, -0.000659889, -0.0136338, -5.95954e-10, 0.00944054, 0.0021256, 0.0300797)
visible = false
layers = 2
modulate = Color(0.929412, 0.92549, 0.909804, 1)
texture = SubResource("ViewportTexture_trjqt")

[node name="Text_render" type="SubViewport" parent="."]
transparent_bg = true
size = Vector2i(600, 400)

[node name="text" type="Label" parent="Text_render"]
custom_minimum_size = Vector2(600, 400)
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_font_sizes/font_size = 60
text = "NOTE"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 2

[node name="from" type="Label" parent="Text_render/text"]
layout_mode = 1
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -144.0
offset_top = -86.0
offset_bottom = 1.0
grow_horizontal = 0
grow_vertical = 0
theme_override_font_sizes/font_size = 50
text = "FROM"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Text_responce" type="SubViewport" parent="."]
transparent_bg = true
size = Vector2i(600, 150)

[node name="ColorRect" type="ColorRect" parent="Text_responce"]
material = SubResource("ShaderMaterial_iy2kr")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.968627, 0.933333, 0.760784, 1)

[node name="responce" type="Label" parent="Text_responce/ColorRect"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_colors/font_color = Color(0.419608, 0.368627, 0.12549, 1)
theme_override_font_sizes/font_size = 50
text = "..."
horizontal_alignment = 1
vertical_alignment = 1
