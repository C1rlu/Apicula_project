[gd_scene load_steps=20 format=3 uid="uid://2m8sg808ma6w"]

[ext_resource type="Script" path="res://10_BOARD/Responce_on_board/responce_prefab_00.gd" id="1_dn3ks"]
[ext_resource type="Script" path="res://10_BOARD/Responce_on_board/On_click.gd" id="2_86ev1"]

[sub_resource type="ViewportTexture" id="ViewportTexture_771yn"]
viewport_path = NodePath("Text_responce_v")

[sub_resource type="PlaneMesh" id="PlaneMesh_flcm5"]
resource_local_to_scene = true
size = Vector2(1.8, 1.8)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_shisn"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_y3hi8"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_fdada"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_qmaqj"]
default_input_values = [0, 0.83, 1, 0.0]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_w2suj"]
constant = Color(0.73, 0.47377, 0.1606, 1)

[sub_resource type="VisualShader" id="VisualShader_tl2py"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

global uniform float Dither_size;



void fragment() {
// ColorConstant:7
	vec4 n_out7p0 = vec4(0.730000, 0.473770, 0.160600, 1.000000);


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatParameter:5
	float n_out5p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_in6p0 = 0.83000;
	float n_out6p0 = step(n_in6p0, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out7p0.xyz);
	ALPHA = n_out6p0;


}
"
graph_offset = Vector2(-573.321, -129.617)
flags/unshaded = true
nodes/fragment/0/position = Vector2(580, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_shisn")
nodes/fragment/3/position = Vector2(-1180, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_y3hi8")
nodes/fragment/4/position = Vector2(-900, 460)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_fdada")
nodes/fragment/5/position = Vector2(-1540, 620)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_qmaqj")
nodes/fragment/6/position = Vector2(130.23, 516.22)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_w2suj")
nodes/fragment/7/position = Vector2(226.136, 51.1274)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 4, 0, 6, 1, 6, 0, 0, 1, 7, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rvgoy"]
render_priority = 0
shader = SubResource("VisualShader_tl2py")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_hkhmm"]
parameter_name = "link_opacity"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_rpj2l"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_3vfis"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hrh7j"]
input_name = "color"

[sub_resource type="VisualShader" id="VisualShader_cqamg"]
code = "shader_type canvas_item;
render_mode blend_mix;



"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(720, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatParameter_hkhmm")
nodes/fragment/2/position = Vector2(-80, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_rpj2l")
nodes/fragment/3/position = Vector2(-220, -260)
nodes/fragment/3/size = Vector2(620, 200)
nodes/fragment/3/input_ports = "0,4,color;"
nodes/fragment/3/output_ports = "0,0,grey_value;"
nodes/fragment/3/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_3vfis")
nodes/fragment/4/position = Vector2(540, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_hrh7j")
nodes/fragment/5/position = Vector2(-580, -20)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 2, 3, 0, 4, 1, 5, 0, 3, 0, 5, 0, 4, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_teiuu"]
shader = SubResource("VisualShader_cqamg")

[sub_resource type="GDScript" id="GDScript_imole"]
script/source = "extends Node

@export var _on_over : Node3D
@export var _on_over_second: Node3D
@export var icon_type : icon_class.icon_list


func on_over(condition):
	
	
	if _on_over:
		_on_over.visible = condition	
	if _on_over_second:
		_on_over_second.visible = condition
		
	_global_datas.switch_icon_cursor.emit(icon_type)
"

[sub_resource type="BoxShape3D" id="BoxShape3D_a6nyk"]
size = Vector3(0.0935242, 0.0153992, 0.0307983)

[node name="Responce_prefab_00" type="Node3D"]
script = ExtResource("1_dn3ks")

[node name="Render_responce" type="Sprite3D" parent="."]
transform = Transform3D(0.0136338, -0.000659889, -2.88447e-11, -2.93582e-18, -5.96652e-10, 0.0136498, -0.000659889, -0.0136338, -5.95954e-10, 0, 0, 0)
layers = 2
modulate = Color(0.929412, 0.92549, 0.909804, 1)
texture = SubResource("ViewportTexture_771yn")

[node name="On_Over" type="MeshInstance3D" parent="."]
transform = Transform3D(0.0572401, 0, 0.000796528, 0, 0.0357813, 0, -0.00274944, 0, 0.0165828, 0, -1.41226e-05, 0)
visible = false
layers = 2
mesh = SubResource("PlaneMesh_flcm5")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("ShaderMaterial_rvgoy")

[node name="Text_responce_v" type="SubViewport" parent="."]
transparent_bg = true
size = Vector2i(600, 150)

[node name="ColorRect" type="ColorRect" parent="Text_responce_v"]
material = SubResource("ShaderMaterial_teiuu")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.968627, 0.933333, 0.760784, 1)

[node name="responce" type="Label" parent="Text_responce_v/ColorRect"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_colors/font_color = Color(0.419608, 0.368627, 0.12549, 1)
theme_override_font_sizes/font_size = 50
text = "Choose this responce"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Area3D" type="Area3D" parent="."]

[node name="On_Over" type="Node" parent="Area3D" node_paths=PackedStringArray("_on_over")]
script = SubResource("GDScript_imole")
_on_over = NodePath("../../On_Over")

[node name="On_click" type="Node" parent="Area3D"]
script = ExtResource("2_86ev1")

[node name="col" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.000442501, 0.00754089, 0.000347897)
shape = SubResource("BoxShape3D_a6nyk")

[connection signal="active" from="." to="." method="_on_active"]
[connection signal="On_click" from="Area3D/On_click" to="Area3D/On_click" method="_on_on_click"]
