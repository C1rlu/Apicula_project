[gd_scene load_steps=21 format=3 uid="uid://cgb01ku2od671"]

[ext_resource type="Script" path="res://10_BOARD/00_BOOK/Button_data/info_label_link.gd" id="1_j3y7g"]
[ext_resource type="Texture2D" uid="uid://dff72hp5k3p01" path="res://10_BOARD/00_BOOK/01_UI/cursor_plume.png" id="3_81ncy"]
[ext_resource type="Texture2D" uid="uid://ga5yb54aj2kv" path="res://10_BOARD/00_BOOK/00_img/question_back_alpha.png" id="3_ggker"]
[ext_resource type="Script" path="res://10_BOARD/00_BOOK/Button_data/Typing_text_responce.gd" id="3_hi37a"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_p1n21"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ao61e"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_28yjm"]
source = 5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_jqhsp"]
constant = 0.948

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_24gr3"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pvx17"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_pm01b"]
default_input_values = [0, -0.32, 1, 1.49]

[sub_resource type="VisualShader" id="VisualShader_nv26p"]
code = "shader_type canvas_item;
render_mode blend_mix;

global uniform float Dither_size;
uniform sampler2D Texture2DParameter;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// FloatConstant:2
	float n_out2p0 = 0.948000;


// FloatParameter:4
	float n_out4p0 = Dither_size;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out3p0 = n_out2p0 - DITHER_THRESHOLDS[index];
	}


	vec4 n_out12p0;
// Texture2D:12
	n_out12p0 = texture(Texture2DParameter, UV);


// Step:5
	float n_out5p0 = step(n_out3p0, n_out12p0.x);


// Output:0
	COLOR.rgb = vec3(n_out10p0.xyz);
	COLOR.a = n_out5p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_jqhsp")
nodes/fragment/2/position = Vector2(-1320, 360)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_24gr3")
nodes/fragment/3/position = Vector2(-1000, 700)
nodes/fragment/3/size = Vector2(724.789, 654.559)
nodes/fragment/3/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/3/output_ports = "0,0,Dither_Node;"
nodes/fragment/3/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_pvx17")
nodes/fragment/4/position = Vector2(-1680, 520)
nodes/fragment/5/node = SubResource("VisualShaderNodeStep_pm01b")
nodes/fragment/5/position = Vector2(-80, 460)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_p1n21")
nodes/fragment/10/position = Vector2(-320, 100)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture2DParameter_ao61e")
nodes/fragment/11/position = Vector2(-880, 20)
nodes/fragment/12/node = SubResource("VisualShaderNodeTexture_28yjm")
nodes/fragment/12/position = Vector2(-380, 420)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 5, 0, 5, 0, 0, 1, 10, 0, 0, 0, 11, 0, 12, 2, 12, 0, 5, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4d7dv"]
shader = SubResource("VisualShader_nv26p")
shader_parameter/Texture2DParameter = ExtResource("3_ggker")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fm3a6"]
input_name = "color"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8bg2o"]
constant = 1.326

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_pisur"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pn064"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_nwec7"]
default_input_values = [0, -0.32, 1, 0.505]

[sub_resource type="VisualShader" id="VisualShader_vq7ry"]
code = "shader_type canvas_item;
render_mode blend_mix;

global uniform float Dither_size;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// FloatConstant:2
	float n_out2p0 = 1.326000;


// FloatParameter:4
	float n_out4p0 = Dither_size;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out3p0 = n_out2p0 - DITHER_THRESHOLDS[index];
	}


// Step:5
	float n_in5p1 = 0.50500;
	float n_out5p0 = step(n_out3p0, n_in5p1);


// Output:0
	COLOR.rgb = vec3(n_out10p0.xyz);
	COLOR.a = n_out5p0;


}
"
graph_offset = Vector2(-357.447, -56.3725)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_8bg2o")
nodes/fragment/2/position = Vector2(-1320, 360)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_pisur")
nodes/fragment/3/position = Vector2(-1040, 360)
nodes/fragment/3/size = Vector2(724.789, 654.559)
nodes/fragment/3/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/3/output_ports = "0,0,Dither_Node;"
nodes/fragment/3/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_pn064")
nodes/fragment/4/position = Vector2(-1680, 520)
nodes/fragment/5/node = SubResource("VisualShaderNodeStep_nwec7")
nodes/fragment/5/position = Vector2(-80, 460)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_fm3a6")
nodes/fragment/10/position = Vector2(-320, 100)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 3, 1, 3, 0, 5, 0, 5, 0, 0, 1, 10, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nwgyx"]
shader = SubResource("VisualShader_vq7ry")

[node name="Responce_area" type="Control" node_paths=PackedStringArray("on_over", "on_over_seconde")]
layout_mode = 3
anchors_preset = 0
offset_right = 414.0
offset_bottom = 100.0
script = ExtResource("1_j3y7g")
on_over = NodePath("On_Over")
on_over_seconde = NodePath("On_Over2")

[node name="Typing_text" type="Node" parent="."]
script = ExtResource("3_hi37a")

[node name="back" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_4d7dv")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
color = Color(0.811765, 0.745098, 0.67451, 1)

[node name="On_Over2" type="Sprite2D" parent="."]
visible = false
modulate = Color(0.768627, 0.729412, 0.611765, 1)
position = Vector2(373, 8)
scale = Vector2(0.476107, 0.476107)
texture = ExtResource("3_81ncy")

[node name="On_Over" type="ColorRect" parent="."]
visible = false
material = SubResource("ShaderMaterial_nwgyx")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -7.0
offset_top = -7.0
offset_right = -13.0
offset_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(1.0469, 1.0469)
mouse_filter = 2
color = Color(0.905882, 0.85098, 0.752941, 1)

[node name="Text" type="Label" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_colors/font_color = Color(0.25098, 0.211765, 0.117647, 1)
theme_override_font_sizes/font_size = 21
text = "..."
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 2

[connection signal="tree_exited" from="." to="." method="_on_tree_exited"]
[connection signal="type_text" from="." to="Typing_text" method="_on_responce_area_type_text"]
