[gd_scene load_steps=95 format=3 uid="uid://bh5a7fhvftxmm"]

[ext_resource type="Script" path="res://10_BOARD/00_BOOK/Book_symbols/Book_page_behaviour.gd" id="1_oj3kp"]
[ext_resource type="Resource" uid="uid://bnr5ucr2s173m" path="res://10_BOARD/00_BOOK/Book_symbols/Main_Book.tres" id="2_skv6l"]
[ext_resource type="Script" path="res://10_BOARD/00_BOOK/Book_symbols/Idle_position.gd" id="3_1o6ej"]
[ext_resource type="Script" path="res://10_BOARD/00_BOOK/Book_symbols/Open_Choice.gd" id="3_whbe4"]
[ext_resource type="Script" path="res://10_BOARD/On_over_node.tres.gd" id="4_kuj33"]
[ext_resource type="PackedScene" uid="uid://db6k1p6qd826g" path="res://10_BOARD/00_BOOK/Book_symbols/Page/Book_page.tscn" id="5_0380u"]
[ext_resource type="Script" path="res://10_BOARD/00_BOOK/Button_data/Button_area_set.gd" id="5_njsas"]
[ext_resource type="PackedScene" uid="uid://bs32groi0tedy" path="res://10_BOARD/00_BOOK/Choice_panel/Choice_Panel_root.tscn" id="5_ryh6q"]
[ext_resource type="PackedScene" uid="uid://cgb4c1n0bj2at" path="res://12_INVENTORY/Book/Page_flip/page_flip_right.tscn" id="6_ignqh"]
[ext_resource type="Resource" uid="uid://ccap5kr10wdkg" path="res://10_BOARD/00_BOOK/Button_data/Responce_data/Maurice_question_button_01.tres" id="7_4yc58"]
[ext_resource type="Resource" uid="uid://bc0al5v16mi2c" path="res://10_BOARD/00_BOOK/Button_data/Responce_data/Maurice_question_button_02.tres" id="8_kfnot"]
[ext_resource type="PackedScene" uid="uid://cgc02cx2l0ndw" path="res://10_BOARD/00_BOOK/Legend/Book_page_signets.tscn" id="8_n2vim"]
[ext_resource type="Resource" uid="uid://bdydt2ko8pr0t" path="res://10_BOARD/00_BOOK/Button_data/Responce_data/Maurice_question_button_03.tres" id="9_4r2du"]
[ext_resource type="Resource" uid="uid://ckwue46oguqkj" path="res://10_BOARD/00_BOOK/Button_data/Responce_data/ScannerOddities_question_button_01.tres" id="10_5l1m7"]
[ext_resource type="Texture2D" uid="uid://bm6lex6ah3vx" path="res://10_BOARD/00_BOOK/00_img/Cross.png" id="16_3gnwj"]

[sub_resource type="PlaneMesh" id="PlaneMesh_vkvy6"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ul1nu"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_3ewes"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ccwpb"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_pr2lv"]
default_input_values = [0, 0.79, 1, 0.0]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_qjd8d"]
constant = Color(0.73, 0.47377, 0.1606, 1)

[sub_resource type="VisualShader" id="VisualShader_pduv4"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

global uniform float Dither_size;



void fragment() {
// ColorConstant:7
	vec4 n_out7p0 = vec4(0.730000, 0.473770, 0.160600, 1.000000);


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatParameter:5
	float n_out5p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_in6p0 = 0.79000;
	float n_out6p0 = step(n_in6p0, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out7p0.xyz);
	ALPHA = n_out6p0;


}
"
graph_offset = Vector2(-632.453, 286.075)
flags/unshaded = true
nodes/fragment/0/position = Vector2(580, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_ul1nu")
nodes/fragment/3/position = Vector2(-1180, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_3ewes")
nodes/fragment/4/position = Vector2(-900, 460)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_ccwpb")
nodes/fragment/5/position = Vector2(-1540, 620)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_pr2lv")
nodes/fragment/6/position = Vector2(130.23, 516.22)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_qjd8d")
nodes/fragment/7/position = Vector2(226.136, 51.1274)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 4, 0, 6, 1, 6, 0, 0, 1, 7, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ko5cd"]
render_priority = 0
shader = SubResource("VisualShader_pduv4")

[sub_resource type="GDScript" id="GDScript_4sg0y"]
script/source = "extends Node

signal  _turn_page

"

[sub_resource type="BoxShape3D" id="BoxShape3D_224re"]
size = Vector3(2.69202, 0.224381, 2.26825)

[sub_resource type="GDScript" id="GDScript_dsb8m"]
script/source = "extends CollisionShape3D


@onready var col = $\".\"

func _ready():
	
	_global_datas.photo_fade_out.connect(active)	
	_global_datas.photo_fade_in.connect(disable)	
	
	
func active():
	col.disabled = true
	
func disable():
	col.disabled = false
"

[sub_resource type="GDScript" id="GDScript_66qc2"]
script/source = "extends Node

signal	_turn_page
"

[sub_resource type="BoxShape3D" id="BoxShape3D_aaupl"]
size = Vector3(2.69202, 0.259675, 2.27158)

[sub_resource type="GDScript" id="GDScript_q6dru"]
script/source = "extends CollisionShape3D


@onready var col = $\".\"

func _ready():
	
	_global_datas.photo_fade_out.connect(active)	
	_global_datas.photo_fade_in.connect(disable)	
	
	
func active():
	col.disabled = true
	
func disable():
	col.disabled = false
"

[sub_resource type="BoxShape3D" id="BoxShape3D_nfqob"]
size = Vector3(0.493483, 0.329155, 1.85864)

[sub_resource type="BoxShape3D" id="BoxShape3D_khjkf"]
size = Vector3(0.436943, 0.312309, 1.8291)

[sub_resource type="BoxShape3D" id="BoxShape3D_smuay"]
size = Vector3(0.436943, 0.312309, 1.8291)

[sub_resource type="QuadMesh" id="QuadMesh_l8pd8"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_gar6r"]
parameter_name = "Gradient"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_65fpl"]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_weeqf"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_b6xhj"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_uj4bl"]
constant = 0.389

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_tanwi"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_ofuf3"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_hnmu3"]
parameter_name = "Darker"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_0vocs"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_japam"]
source = 5

[sub_resource type="VisualShader" id="VisualShader_03hmo"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform vec4 ColorParameter : source_color;
uniform vec4 Darker : source_color;
uniform sampler2D Gradient;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// ColorParameter:7
	vec4 n_out7p0 = Darker;


// Input:11
	vec2 n_out11p0 = UV;


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(Gradient, n_out11p0);


// FloatConstant:4
	float n_out4p0 = 0.389000;


// FloatConstant:3
	float n_out3p0 = 0.400000;


	float n_out5p0;
// Expression:5
	n_out5p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out3p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out5p0 = n_out4p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_out6p0 = step(n_out9p0.x, n_out5p0);


// Mix:8
	vec3 n_out8p0 = mix(vec3(n_out2p0.xyz), vec3(n_out7p0.xyz), vec3(n_out6p0));


// Output:0
	ALBEDO = n_out8p0;


}
"
graph_offset = Vector2(-1035.9, 85.2084)
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(380, 240)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_weeqf")
nodes/fragment/2/position = Vector2(-460, -20)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_b6xhj")
nodes/fragment/3/position = Vector2(-1600, 600)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_uj4bl")
nodes/fragment/4/position = Vector2(-1600, 420)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_tanwi")
nodes/fragment/5/position = Vector2(-1200, 600)
nodes/fragment/5/size = Vector2(724.789, 654.559)
nodes/fragment/5/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/5/output_ports = "0,0,Dither_Node;"
nodes/fragment/5/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_ofuf3")
nodes/fragment/6/position = Vector2(-120, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_hnmu3")
nodes/fragment/7/position = Vector2(-840, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_0vocs")
nodes/fragment/8/position = Vector2(-14.5749, 83.0822)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_japam")
nodes/fragment/9/position = Vector2(-1060, 300)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture2DParameter_gar6r")
nodes/fragment/10/position = Vector2(-1660, 80)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_65fpl")
nodes/fragment/11/position = Vector2(-1300, 120)
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 1, 4, 0, 5, 0, 5, 0, 6, 1, 2, 0, 8, 0, 7, 0, 8, 1, 10, 0, 9, 2, 9, 0, 6, 0, 6, 0, 8, 2, 8, 0, 0, 0, 11, 0, 9, 0)

[sub_resource type="Gradient" id="Gradient_1y543"]
offsets = PackedFloat32Array(0, 0.56917, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_xxg5j"]
gradient = SubResource("Gradient_1y543")
fill_from = Vector2(0.5, 0.705)
fill_to = Vector2(0.5, 0.3)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ytwgf"]
render_priority = 0
shader = SubResource("VisualShader_03hmo")
shader_parameter/ColorParameter = Color(0.541176, 0.501961, 0.427451, 1)
shader_parameter/Darker = Color(0.364706, 0.337255, 0.286275, 1)
shader_parameter/Gradient = SubResource("GradientTexture2D_xxg5j")

[sub_resource type="BoxMesh" id="BoxMesh_1p7be"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_axuf0"]
shading_mode = 0
albedo_color = Color(0.541176, 0.501961, 0.427451, 1)

[sub_resource type="BoxMesh" id="BoxMesh_0xre3"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_8msb4"]
parameter_name = "Dark_color"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_wikq1"]
constant = 0.8

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_c2472"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ju72v"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6cvwb"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_4ipjb"]
parameter_name = "Gradient"
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_essdf"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_56ne6"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lao4q"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_c7npq"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ciivx"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_1i3cm"]
parameter_name = "light_color"
default_value = Color(0.401313, 0.399257, 0, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_a2l6c"]
default_input_values = [0, 0.0, 1, 0.2]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0chdb"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_w42v1"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4wahl"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tfxxw"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_liko7"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.125, 0.125, 0.125), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_mf3a0"]
parameter_name = "Distance_power"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_4x4us"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_o2fey"]
parameter_name = "ColorParameter"
qualifier = 2
default_value_enabled = true
default_value = Color(0.027451, 0.14902, 0.156863, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_o1mif"]
constant = 1.156

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_5yo62"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_vmjrs"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_600y8"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_hetvo"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_k3mua"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_212h6"]
input_name = "light"

[sub_resource type="VisualShader" id="VisualShader_ndmq4"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;


// Varyings
varying vec3 dark_color_var;

uniform vec4 Dark_color : source_color;
uniform sampler2D Gradient : filter_nearest, repeat_enable;
global uniform float Dither_size;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(Gradient, UV);


// FloatConstant:3
	float n_out3p0 = 0.800000;


// FloatParameter:5
	float n_out5p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:8
	float n_out8p0 = step(n_out6p0.x, n_out4p0);


// Mix:9
	vec3 n_out9p0 = mix(vec3(n_out2p0.xyz), vec3(n_out8p0), vec3(n_out2p0.xyz));


// Output:0
	ALBEDO = n_out9p0;


	dark_color_var = vec3(0.0);
}
"
flags/unshaded = true
varyings/dark_color_var = "1,4"
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_8msb4")
nodes/fragment/2/position = Vector2(-740, -140)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_wikq1")
nodes/fragment/3/position = Vector2(-1020, 620)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_c2472")
nodes/fragment/4/position = Vector2(-740, 620)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_ju72v")
nodes/fragment/5/position = Vector2(-1200, 780)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_6cvwb")
nodes/fragment/6/position = Vector2(-460, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture2DParameter_4ipjb")
nodes/fragment/7/position = Vector2(-1320, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_essdf")
nodes/fragment/8/position = Vector2(-100, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeMix_56ne6")
nodes/fragment/9/position = Vector2(99.9524, 52.3079)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 7, 0, 6, 2, 6, 0, 8, 0, 4, 0, 8, 1, 9, 0, 0, 0, 2, 0, 9, 0, 8, 0, 9, 1, 2, 0, 9, 2)
nodes/light/0/position = Vector2(2440, 1640)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_o1mif")
nodes/light/3/position = Vector2(-460, 1980)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_5yo62")
nodes/light/4/position = Vector2(-180, 1980)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/5/node = SubResource("VisualShaderNodeStep_vmjrs")
nodes/light/5/position = Vector2(720, 1500)
nodes/light/6/node = SubResource("VisualShaderNodeInput_600y8")
nodes/light/6/position = Vector2(-1160, 1320)
nodes/light/7/node = SubResource("VisualShaderNodeDotProduct_hetvo")
nodes/light/7/position = Vector2(-740, 1440)
nodes/light/8/node = SubResource("VisualShaderNodeClamp_k3mua")
nodes/light/8/position = Vector2(-540, 1320)
nodes/light/9/node = SubResource("VisualShaderNodeInput_212h6")
nodes/light/9/position = Vector2(-1160, 1620)
nodes/light/10/node = SubResource("VisualShaderNodeInput_lao4q")
nodes/light/10/position = Vector2(-800, 1740)
nodes/light/11/node = SubResource("VisualShaderNodeVectorOp_c7npq")
nodes/light/11/position = Vector2(-240, 1600)
nodes/light/12/node = SubResource("VisualShaderNodeMix_ciivx")
nodes/light/12/position = Vector2(1860, 1200)
nodes/light/13/node = SubResource("VisualShaderNodeColorParameter_1i3cm")
nodes/light/13/position = Vector2(1120, 1620)
nodes/light/14/node = SubResource("VisualShaderNodeFloatOp_a2l6c")
nodes/light/14/position = Vector2(-420, 1720)
nodes/light/15/node = SubResource("VisualShaderNodeInput_0chdb")
nodes/light/15/position = Vector2(-300, 1420)
nodes/light/16/node = SubResource("VisualShaderNodeFloatOp_w42v1")
nodes/light/16/position = Vector2(80, 1400)
nodes/light/17/node = SubResource("VisualShaderNodeVectorOp_4wahl")
nodes/light/17/position = Vector2(260, 1280)
nodes/light/18/node = SubResource("VisualShaderNodeInput_tfxxw")
nodes/light/18/position = Vector2(1240, 1100)
nodes/light/19/node = SubResource("VisualShaderNodeMix_liko7")
nodes/light/19/position = Vector2(1560, 1360)
nodes/light/20/node = SubResource("VisualShaderNodeFloatParameter_mf3a0")
nodes/light/20/position = Vector2(100, 1520)
nodes/light/21/node = SubResource("VisualShaderNodeStep_4x4us")
nodes/light/21/position = Vector2(720, 1700)
nodes/light/23/node = SubResource("VisualShaderNodeColorParameter_o2fey")
nodes/light/23/position = Vector2(1140, 1180)
nodes/light/connections = PackedInt32Array(8, 0, 11, 0, 3, 0, 4, 0, 10, 0, 14, 0, 14, 0, 11, 1, 8, 0, 17, 0, 5, 0, 19, 2, 4, 0, 5, 0, 15, 0, 16, 0, 16, 0, 17, 1, 7, 0, 8, 0, 6, 0, 7, 0, 17, 0, 5, 1, 9, 0, 7, 1, 19, 0, 12, 2, 18, 0, 12, 1, 23, 0, 19, 0, 13, 0, 19, 1, 4, 0, 21, 0, 11, 0, 21, 1, 20, 0, 16, 1)

[sub_resource type="Gradient" id="Gradient_c773w"]
colors = PackedColorArray(0.219501, 0.219501, 0.219501, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_m77sg"]
gradient = SubResource("Gradient_c773w")
fill = 1
fill_from = Vector2(0.525641, 0.470085)
fill_to = Vector2(1, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t44i5"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_ndmq4")
shader_parameter/Dark_color = Color(0.286275, 0.258824, 0.184314, 1)
shader_parameter/Gradient = SubResource("GradientTexture2D_m77sg")

[sub_resource type="GDScript" id="GDScript_cxgqg"]
script/source = "extends Node

@onready var col = $\"../col\"
@onready var on_over_ = $\"../On_Over_\"
@onready var render = $\"../render\"

func _ready():
	_global_datas.book_back_idle_position.connect(active_back_idle_book)


func _book_exit():
	
	_global_datas.book_back_idle_position.emit(false)
	#if !_global_datas.book_idle_pos:
		#_global_datas.book_back_idle_position.emit(true)
		#_global_datas.book_fade_in.emit()
		#_global_datas.book_idle_pos = true


func active_back_idle_book(condition):
	
	col.disabled = !condition
	on_over_.visible = false
	render.visible = condition	
		
	
"

[sub_resource type="BoxShape3D" id="BoxShape3D_5t87k"]
size = Vector3(1.0807, 0.152875, 0.426018)

[sub_resource type="PlaneMesh" id="PlaneMesh_3mud5"]
size = Vector2(0.57, 1.26)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ucx3w"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_o283a"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_trkt7"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_bv03p"]
default_input_values = [0, 0.83, 1, 0.0]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_4oa3g"]
constant = Color(0.73, 0.47377, 0.1606, 1)

[sub_resource type="VisualShader" id="VisualShader_mof41"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

global uniform float Dither_size;



void fragment() {
// ColorConstant:7
	vec4 n_out7p0 = vec4(0.730000, 0.473770, 0.160600, 1.000000);


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatParameter:5
	float n_out5p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_in6p0 = 0.83000;
	float n_out6p0 = step(n_in6p0, n_out4p0);


// Output:0
	ALBEDO = vec3(n_out7p0.xyz);
	ALPHA = n_out6p0;


}
"
graph_offset = Vector2(-324.067, -87.7248)
flags/unshaded = true
nodes/fragment/0/position = Vector2(580, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_ucx3w")
nodes/fragment/3/position = Vector2(-1180, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_o283a")
nodes/fragment/4/position = Vector2(-900, 460)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_trkt7")
nodes/fragment/5/position = Vector2(-1540, 620)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_bv03p")
nodes/fragment/6/position = Vector2(130.23, 516.22)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_4oa3g")
nodes/fragment/7/position = Vector2(226.136, 51.1274)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 4, 0, 6, 1, 6, 0, 0, 1, 7, 0, 0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1ailg"]
render_priority = 0
shader = SubResource("VisualShader_mof41")

[sub_resource type="QuadMesh" id="QuadMesh_22o7c"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_qcmbn"]
shading_mode = 0
albedo_color = Color(0.768627, 0.721569, 0.658824, 1)

[node name="Book" type="Node3D"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 0)
script = ExtResource("1_oj3kp")
_book_data = ExtResource("2_skv6l")

[node name="Open_Choice" type="Node" parent="."]
script = ExtResource("3_whbe4")
right_position = Vector3(0.2, 0.4, -0.9)
right_rotation = Vector3(0, -6, 0)
left_position = Vector3(0.2, 0.4, 1)
left_rotation = Vector3(0, 3, 0)

[node name="Idle_position" type="Node" parent="."]
script = ExtResource("3_1o6ej")

[node name="Timer" type="Timer" parent="."]
wait_time = 0.25
one_shot = true

[node name="Multiple_page_transition_right" type="Timer" parent="."]
wait_time = 0.15

[node name="Multiple_page_transition_left" type="Timer" parent="."]
wait_time = 0.15

[node name="On_Over" type="MeshInstance3D" parent="."]
transform = Transform3D(1.32499, 5.0307e-17, 0.00345762, 3.98986e-17, 0.588891, 1.39591e-18, -0.0143616, 4.4245e-17, 0.319001, -0.114884, 0.0900068, -2.09456)
visible = false
layers = 512
mesh = SubResource("PlaneMesh_vkvy6")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("ShaderMaterial_ko5cd")

[node name="On_Over2" type="MeshInstance3D" parent="."]
transform = Transform3D(1.32499, 1.7139e-11, 0.00345762, 1.87718e-11, 0.588891, 1.13654e-11, -0.0143616, 2.19594e-11, 0.319001, -0.115, 0.09, 2.002)
visible = false
layers = 512
mesh = SubResource("PlaneMesh_vkvy6")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("ShaderMaterial_ko5cd")

[node name="Turn_Right" type="Area3D" parent="."]
transform = Transform3D(1, 2.91038e-11, -7.45058e-09, 1.45519e-11, 1, 3.54703e-11, -7.45058e-09, 3.72893e-11, 1, 0, 0, 0)

[node name="Turn_page" type="Node" parent="Turn_Right"]
script = SubResource("GDScript_4sg0y")

[node name="On_Over" type="Node" parent="Turn_Right" node_paths=PackedStringArray("_on_over")]
script = ExtResource("4_kuj33")
_on_over = NodePath("../../On_Over")
icon_type = 3

[node name="CollisionShape3D" type="CollisionShape3D" parent="Turn_Right"]
transform = Transform3D(1, 0, 0, 0, 1, -5.27664e-19, 0, 1.48901e-18, 1, -0.0249052, 0.090931, -1.16268)
shape = SubResource("BoxShape3D_224re")
disabled = true
script = SubResource("GDScript_dsb8m")

[node name="Turn_Left" type="Area3D" parent="."]

[node name="Turn_page" type="Node" parent="Turn_Left"]
script = SubResource("GDScript_66qc2")

[node name="On_Over" type="Node" parent="Turn_Left" node_paths=PackedStringArray("_on_over")]
script = ExtResource("4_kuj33")
_on_over = NodePath("../../On_Over2")
icon_type = 4

[node name="CollisionShape3D" type="CollisionShape3D" parent="Turn_Left"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.113466, 0.0935526, 1.1877)
shape = SubResource("BoxShape3D_aaupl")
disabled = true
script = SubResource("GDScript_q6dru")

[node name="Button_list" type="Node3D" parent="."]

[node name="Maurice_page" type="Node3D" parent="Button_list"]
visible = false

[node name="01" type="Area3D" parent="Button_list/Maurice_page"]

[node name="push_button" type="Node" parent="Button_list/Maurice_page/01"]
script = ExtResource("5_njsas")
button_data = ExtResource("7_4yc58")

[node name="col" type="CollisionShape3D" parent="Button_list/Maurice_page/01"]
transform = Transform3D(0.996858, 0, 0.0792072, 0, 1, 0, -0.0792072, 0, 0.996858, -0.540611, 0.26485, 1.09752)
shape = SubResource("BoxShape3D_nfqob")
disabled = true

[node name="02" type="Area3D" parent="Button_list/Maurice_page"]

[node name="push_button" type="Node" parent="Button_list/Maurice_page/02"]
script = ExtResource("5_njsas")
button_data = ExtResource("8_kfnot")

[node name="col" type="CollisionShape3D" parent="Button_list/Maurice_page/02"]
transform = Transform3D(0.999813, 0, -0.0193196, 0, 1, 0, 0.0193196, 0, 0.999813, 0.711901, 0.222531, 1.11569)
shape = SubResource("BoxShape3D_khjkf")
disabled = true

[node name="03" type="Area3D" parent="Button_list/Maurice_page"]

[node name="push_button" type="Node" parent="Button_list/Maurice_page/03"]
script = ExtResource("5_njsas")
button_data = ExtResource("9_4r2du")

[node name="col" type="CollisionShape3D" parent="Button_list/Maurice_page/03"]
transform = Transform3D(0.998155, 0, 0.0607175, 0, 1, 0, -0.0607175, 0, 0.998155, 0.711901, 0.222531, -1.1617)
shape = SubResource("BoxShape3D_smuay")
disabled = true

[node name="Scanner_page" type="Node3D" parent="Button_list"]

[node name="01" type="Area3D" parent="Button_list/Scanner_page"]

[node name="push_button" type="Node" parent="Button_list/Scanner_page/01"]
script = ExtResource("5_njsas")
button_data = ExtResource("10_5l1m7")

[node name="col" type="CollisionShape3D" parent="Button_list/Scanner_page/01"]
transform = Transform3D(0.999257, 0, 0.0385448, 0, 1, 0, -0.0385448, 0, 0.999257, 0.801162, 0.26485, 1.09734)
shape = SubResource("BoxShape3D_nfqob")
disabled = true

[node name="Book_page" parent="." instance=ExtResource("5_0380u")]
transform = Transform3D(-1.93005e-08, 0, 0.441544, 0, 0.441544, 0, -0.441544, 0, -1.93005e-08, -0.116, -0.061, 0)

[node name="Page_flip_right_ROOT" type="Node3D" parent="."]
transform = Transform3D(0.975, 0, 0, 0, 1, 0, 0, 0, 0.922, -0.048, 0.089, 0)

[node name="Page_flip_right" parent="Page_flip_right_ROOT" instance=ExtResource("6_ignqh")]

[node name="Page_flip_left_ROOT" type="Node3D" parent="."]
transform = Transform3D(0.974894, 8.74227e-08, 0, -8.52279e-08, 0.999999, 0, 0, 0, -0.949854, -0.048, 0.089, 0)

[node name="Page_flip_left" parent="Page_flip_left_ROOT" instance=ExtResource("6_ignqh")]

[node name="page" type="MeshInstance3D" parent="."]
transform = Transform3D(2.65385, 1.96518e-07, 2.20912e-07, -1.16003e-07, -1.96518e-07, 5.05387, 1.16003e-07, -4.49581, -2.20912e-07, -0.103871, 0.0909873, -0.0437125)
layers = 512
cast_shadow = 0
mesh = SubResource("QuadMesh_l8pd8")
skeleton = NodePath("")
surface_material_override/0 = SubResource("ShaderMaterial_ytwgf")

[node name="book_page" type="MeshInstance3D" parent="."]
transform = Transform3D(2.67039, 0, 1.84741e-13, 0, 0.078953, 0, 0, 0, 4.63623, -0.104716, 0.0503313, -0.0783752)
layers = 512
mesh = SubResource("BoxMesh_1p7be")
surface_material_override/0 = SubResource("StandardMaterial3D_axuf0")

[node name="book_base" type="MeshInstance3D" parent="."]
transform = Transform3D(0.00116803, 0, -2.80743, 0, 0.0406598, 0, 4.79073, 0, 0.000685451, -0.106676, 0.00743847, -0.0563836)
layers = 512
mesh = SubResource("BoxMesh_0xre3")
skeleton = NodePath("../../..")
surface_material_override/0 = SubResource("ShaderMaterial_t44i5")

[node name="signet_shortcut" parent="." instance=ExtResource("8_n2vim")]
transform = Transform3D(15.3259, 1.84774e-06, -4.76837e-07, -1.19209e-07, 15.3258, -5.51343e-07, 1.19209e-06, 1.63913e-07, 15.3259, -1.56141, 0.0536942, 1.83738)

[node name="Anwser_panel_choice_root" parent="." instance=ExtResource("5_ryh6q")]
transform = Transform3D(0.978133, 0, 0.20798, 0, 1, 0, -0.20798, 0, 0.978133, -0.162, 0.4, 0.789)
visible = false

[node name="Area3D" type="Area3D" parent="."]
transform = Transform3D(-0.768857, 0.000348793, 0.639421, 0.000437544, 1, -1.93689e-05, -0.639421, 0.000264883, -0.768857, -1.01959, 0.00855701, -2.12741)

[node name="Book_exit" type="Node" parent="Area3D"]
script = SubResource("GDScript_cxgqg")

[node name="On_Over" type="Node" parent="Area3D" node_paths=PackedStringArray("_on_over")]
script = ExtResource("4_kuj33")
_on_over = NodePath("../On_Over_")

[node name="col" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(0.271244, -0.00103544, -0.962512, 0.00288097, 1, -0.000263933, 0.962516, -0.00270135, 0.271238, 0.145912, 0.172357, -0.0930764)
shape = SubResource("BoxShape3D_5t87k")
disabled = true

[node name="On_Over_" type="MeshInstance3D" parent="Area3D"]
transform = Transform3D(0.966053, 1.61471e-05, 0.258348, 1.00341e-05, 0.875001, -0.000108952, -0.258347, 9.43656e-05, 0.966053, 0.128937, 0.0956356, -0.0974309)
visible = false
layers = 512
mesh = SubResource("PlaneMesh_3mud5")
skeleton = NodePath("../../..")
surface_material_override/0 = SubResource("ShaderMaterial_1ailg")

[node name="render" type="MeshInstance3D" parent="Area3D"]
transform = Transform3D(0.272286, 0.389058, 1.42682e-08, 5.82077e-11, -1.75933e-08, 0.337622, 1.01618, -0.104248, -3.77622e-09, 0.133937, 0.102308, -0.0890034)
visible = false
layers = 512
mesh = SubResource("QuadMesh_22o7c")
surface_material_override/0 = SubResource("StandardMaterial3D_qcmbn")

[node name="Sprite3D" type="Sprite3D" parent="Area3D/render"]
transform = Transform3D(0.145499, 0, 8.91305e-11, -1.04308e-07, -0.281675, 2.46218e-08, 1.45519e-11, -2.92639e-08, -0.336631, -0.020321, 0.0127583, 0.0642729)
layers = 512
modulate = Color(0.396078, 0.290196, 0.168627, 1)
texture = ExtResource("16_3gnwj")

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
[connection signal="timeout" from="Multiple_page_transition_right" to="." method="_on_multiple_page_transition_timeout"]
[connection signal="timeout" from="Multiple_page_transition_left" to="." method="_on_multiple_page_transition_left_timeout"]
[connection signal="_turn_page" from="Turn_Right/Turn_page" to="." method="_turn_page_right"]
[connection signal="_turn_page" from="Turn_Left/Turn_page" to="." method="turn_page_left"]
