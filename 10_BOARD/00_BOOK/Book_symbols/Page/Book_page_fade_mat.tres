[gd_resource type="ShaderMaterial" load_steps=11 format=3 uid="uid://cn8wm6x7r83gp"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_78swy"]
parameter_name = "dd"

[sub_resource type="CurveXYZTexture" id="CurveXYZTexture_x737k"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_2ryfo"]
expanded_output_ports = [0]
source = 5
texture = SubResource("CurveXYZTexture_x737k")

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_mw56u"]
parameter_name = "MainColor"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_3u80x"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_wpkvd"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_sd50h"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_840og"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_gipwy"]

[sub_resource type="VisualShader" id="VisualShader_jcrh1"]
code = "shader_type canvas_item;
render_mode blend_mix, unshaded;

uniform sampler2D dd;
uniform float Opacity : hint_range(0, 1) = 1;
global uniform float Dither_size;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(dd, UV);
	float n_out3p4 = n_out3p0.a;


// FloatParameter:6
	float n_out6p0 = Opacity;


// FloatParameter:7
	float n_out7p0 = Dither_size;


	float n_out5p0;
// Expression:5
	n_out5p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out7p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out5p0 = n_out6p0 - DITHER_THRESHOLDS[index];
	}


// Step:8
	float n_in8p0 = 0.00000;
	float n_out8p0 = step(n_in8p0, n_out5p0);


// Mix:9
	float n_in9p0 = 0.00000;
	float n_out9p0 = mix(n_in9p0, n_out3p4, n_out8p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = n_out9p0;


}
"
graph_offset = Vector2(-139.809, -27.7083)
mode = 1
flags/unshaded = true
flags/light_only = false
nodes/fragment/0/position = Vector2(1160, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_2ryfo")
nodes/fragment/3/position = Vector2(240, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_mw56u")
nodes/fragment/4/position = Vector2(260, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_3u80x")
nodes/fragment/5/position = Vector2(-240, 480)
nodes/fragment/5/size = Vector2(724.789, 654.559)
nodes/fragment/5/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/5/output_ports = "0,0,Dither_Node;"
nodes/fragment/5/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_wpkvd")
nodes/fragment/6/position = Vector2(-620, 160)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_sd50h")
nodes/fragment/7/position = Vector2(-780, 620)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_840og")
nodes/fragment/8/position = Vector2(540, 540)
nodes/fragment/9/node = SubResource("VisualShaderNodeMix_gipwy")
nodes/fragment/9/position = Vector2(880.28, 424.978)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture2DParameter_78swy")
nodes/fragment/10/position = Vector2(-220, 120)
nodes/fragment/connections = PackedInt32Array(7, 0, 5, 1, 6, 0, 5, 0, 5, 0, 8, 1, 8, 0, 9, 2, 10, 0, 3, 2, 3, 4, 9, 1, 3, 0, 0, 0, 9, 0, 0, 1)

[resource]
resource_local_to_scene = true
shader = SubResource("VisualShader_jcrh1")
shader_parameter/Opacity = 1.0
