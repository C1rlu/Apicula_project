[gd_scene load_steps=62 format=3 uid="uid://bh5a7fhvftxmm"]

[ext_resource type="Script" path="res://10_BOARD/00_BOOK/02_Book_information/Book_page_behaviour.gd" id="1_ggf51"]
[ext_resource type="Resource" uid="uid://bnr5ucr2s173m" path="res://10_BOARD/00_BOOK/02_Book_information/Main_Book.tres" id="2_0b3of"]
[ext_resource type="Script" path="res://10_BOARD/00_BOOK/02_Book_information/Idle_position.gd" id="3_oknup"]
[ext_resource type="PackedScene" uid="uid://db6k1p6qd826g" path="res://10_BOARD/00_BOOK/02_Book_information/Page/Book_page.tscn" id="13_sxhhj"]
[ext_resource type="PackedScene" uid="uid://cgb4c1n0bj2at" path="res://12_INVENTORY/Book/Page_flip/page_flip_right.tscn" id="14_25ro7"]

[sub_resource type="BoxMesh" id="BoxMesh_1p7be"]
size = Vector3(1, 1, 0.963)

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_rt3or"]
parameter_name = "Gradient"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_d0cah"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_qy77p"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ea31r"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_8aevr"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_hvmpm"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_nxgyf"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_7mbin"]
constant = 0.389

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_psdk0"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_587ra"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_1raoo"]
parameter_name = "Darker"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_i8uwd"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0lmpe"]
source = 5

[sub_resource type="VisualShader" id="VisualShader_wnmu0"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform vec4 ColorParameter : source_color;
uniform vec4 Darker : source_color;
uniform sampler2D Gradient;
global uniform bool isGray;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// ColorParameter:7
	vec4 n_out7p0 = Darker;


// Input:11
	vec2 n_out11p0 = UV;


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(Gradient, n_out11p0);


// FloatConstant:4
	float n_out4p0 = 0.389000;


// FloatConstant:3
	float n_out3p0 = 0.400000;


	float n_out5p0;
// Expression:5
	n_out5p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out3p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out5p0 = n_out4p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_out6p0 = step(n_out9p0.x, n_out5p0);


// Mix:8
	vec3 n_out8p0 = mix(vec3(n_out2p0.xyz), vec3(n_out7p0.xyz), vec3(n_out6p0));


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		float luminance = 0.299 * n_out8p0.x + 0.587 * n_out8p0.y + 0.114 * n_out8p0.z;
		n_out14p0 = luminance;
	}


// BooleanParameter:15
	bool n_out15p0 = isGray;


// Mix:13
	vec3 n_out13p0 = mix(n_out8p0, vec3(n_out14p0), vec3(n_out15p0 ? 1.0 : 0.0));


// Output:0
	ALBEDO = n_out13p0;


}
"
graph_offset = Vector2(-389.354, -189.108)
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(380, 240)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_hvmpm")
nodes/fragment/2/position = Vector2(-460, -20)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_nxgyf")
nodes/fragment/3/position = Vector2(-1600, 600)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_7mbin")
nodes/fragment/4/position = Vector2(-1600, 420)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_psdk0")
nodes/fragment/5/position = Vector2(-1200, 600)
nodes/fragment/5/size = Vector2(724.789, 654.559)
nodes/fragment/5/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/5/output_ports = "0,0,Dither_Node;"
nodes/fragment/5/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_587ra")
nodes/fragment/6/position = Vector2(-120, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_1raoo")
nodes/fragment/7/position = Vector2(-840, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_i8uwd")
nodes/fragment/8/position = Vector2(-14.5749, 83.0822)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_0lmpe")
nodes/fragment/9/position = Vector2(-1060, 300)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture2DParameter_rt3or")
nodes/fragment/10/position = Vector2(-1660, 80)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_d0cah")
nodes/fragment/11/position = Vector2(-1300, 120)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_qy77p")
nodes/fragment/13/position = Vector2(763.308, -228.721)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_ea31r")
nodes/fragment/14/position = Vector2(-20, -560)
nodes/fragment/14/size = Vector2(620, 200)
nodes/fragment/14/input_ports = "0,4,color;"
nodes/fragment/14/output_ports = "0,0,grey_value;"
nodes/fragment/14/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/15/node = SubResource("VisualShaderNodeBooleanParameter_8aevr")
nodes/fragment/15/position = Vector2(260, -200)
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 1, 4, 0, 5, 0, 5, 0, 6, 1, 2, 0, 8, 0, 7, 0, 8, 1, 10, 0, 9, 2, 9, 0, 6, 0, 6, 0, 8, 2, 11, 0, 9, 0, 14, 0, 13, 1, 8, 0, 14, 0, 8, 0, 13, 0, 13, 0, 0, 0, 15, 0, 13, 2)

[sub_resource type="Gradient" id="Gradient_4wv6t"]

[sub_resource type="GradientTexture2D" id="GradientTexture2D_msn34"]
gradient = SubResource("Gradient_4wv6t")
fill_from = Vector2(0.803419, 0.376068)
fill_to = Vector2(0.854701, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jjln6"]
render_priority = 0
shader = SubResource("VisualShader_wnmu0")
shader_parameter/ColorParameter = Color(0.364706, 0.333333, 0.27451, 1)
shader_parameter/Darker = Color(0.301961, 0.278431, 0.231373, 1)
shader_parameter/Gradient = SubResource("GradientTexture2D_msn34")

[sub_resource type="BoxMesh" id="BoxMesh_0xre3"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_72f3r"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_j07uk"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_dira1"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_bnhtg"]
parameter_name = "Dark_color"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_w8atx"]
constant = 0.8

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_epi2o"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_302ko"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1ovup"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_t04xb"]
parameter_name = "Gradient"
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_8l1yp"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_yjyfh"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_gqawn"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_nixxq"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_u0ojy"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_sljor"]
parameter_name = "light_color"
default_value = Color(0.401313, 0.399257, 0, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nj8uq"]
default_input_values = [0, 0.0, 1, 0.2]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_l21sp"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ex6ov"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_5t3a8"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ibb6m"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_dxepy"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.125, 0.125, 0.125), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_it0xi"]
parameter_name = "Distance_power"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_71pn3"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5ivbd"]
parameter_name = "ColorParameter"
qualifier = 2
default_value_enabled = true
default_value = Color(0.027451, 0.14902, 0.156863, 1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_x22hr"]
constant = 1.156

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_w6jn5"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_wamsk"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1s13h"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_bw5gy"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_vudig"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_o046m"]
input_name = "light"

[sub_resource type="VisualShader" id="VisualShader_ir0xt"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;


// Varyings
varying vec3 dark_color_var;

uniform vec4 Dark_color : source_color;
uniform sampler2D Gradient : filter_nearest, repeat_enable;
global uniform float Dither_size;
global uniform bool isGray;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(Gradient, UV);


// FloatConstant:3
	float n_out3p0 = 0.800000;


// FloatParameter:5
	float n_out5p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:8
	float n_out8p0 = step(n_out6p0.x, n_out4p0);


// Mix:9
	vec3 n_out9p0 = mix(vec3(n_out2p0.xyz), vec3(n_out8p0), vec3(n_out2p0.xyz));


	float n_out12p0;
// Expression:12
	n_out12p0 = 0.0;
	{
		float luminance = 0.299 * n_out9p0.x + 0.587 * n_out9p0.y + 0.114 * n_out9p0.z;
		n_out12p0 = luminance;
	}


// BooleanParameter:13
	bool n_out13p0 = isGray;


// Mix:11
	vec3 n_out11p0 = mix(n_out9p0, vec3(n_out12p0), vec3(n_out13p0 ? 1.0 : 0.0));


// Output:0
	ALBEDO = n_out11p0;


	dark_color_var = vec3(0.0);
}
"
graph_offset = Vector2(-147.526, -238.232)
flags/unshaded = true
varyings/dark_color_var = "1,4"
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_bnhtg")
nodes/fragment/2/position = Vector2(-740, -140)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_w8atx")
nodes/fragment/3/position = Vector2(-1020, 620)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_epi2o")
nodes/fragment/4/position = Vector2(-740, 620)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_302ko")
nodes/fragment/5/position = Vector2(-1200, 780)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_1ovup")
nodes/fragment/6/position = Vector2(-460, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture2DParameter_t04xb")
nodes/fragment/7/position = Vector2(-1320, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_8l1yp")
nodes/fragment/8/position = Vector2(-100, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeMix_yjyfh")
nodes/fragment/9/position = Vector2(99.9524, 52.3079)
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_72f3r")
nodes/fragment/11/position = Vector2(560, -260)
nodes/fragment/12/node = SubResource("VisualShaderNodeExpression_j07uk")
nodes/fragment/12/position = Vector2(-280, -540)
nodes/fragment/12/size = Vector2(620, 200)
nodes/fragment/12/input_ports = "0,4,color;"
nodes/fragment/12/output_ports = "0,0,grey_value;"
nodes/fragment/12/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/13/node = SubResource("VisualShaderNodeBooleanParameter_dira1")
nodes/fragment/13/position = Vector2(140, -220)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 7, 0, 6, 2, 6, 0, 8, 0, 4, 0, 8, 1, 2, 0, 9, 0, 8, 0, 9, 1, 2, 0, 9, 2, 12, 0, 11, 1, 9, 0, 12, 0, 9, 0, 11, 0, 11, 0, 0, 0, 13, 0, 11, 2)
nodes/light/0/position = Vector2(2440, 1640)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_x22hr")
nodes/light/3/position = Vector2(-460, 1980)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_w6jn5")
nodes/light/4/position = Vector2(-180, 1980)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/5/node = SubResource("VisualShaderNodeStep_wamsk")
nodes/light/5/position = Vector2(720, 1500)
nodes/light/6/node = SubResource("VisualShaderNodeInput_1s13h")
nodes/light/6/position = Vector2(-1160, 1320)
nodes/light/7/node = SubResource("VisualShaderNodeDotProduct_bw5gy")
nodes/light/7/position = Vector2(-740, 1440)
nodes/light/8/node = SubResource("VisualShaderNodeClamp_vudig")
nodes/light/8/position = Vector2(-540, 1320)
nodes/light/9/node = SubResource("VisualShaderNodeInput_o046m")
nodes/light/9/position = Vector2(-1160, 1620)
nodes/light/10/node = SubResource("VisualShaderNodeInput_gqawn")
nodes/light/10/position = Vector2(-800, 1740)
nodes/light/11/node = SubResource("VisualShaderNodeVectorOp_nixxq")
nodes/light/11/position = Vector2(-240, 1600)
nodes/light/12/node = SubResource("VisualShaderNodeMix_u0ojy")
nodes/light/12/position = Vector2(1860, 1200)
nodes/light/13/node = SubResource("VisualShaderNodeColorParameter_sljor")
nodes/light/13/position = Vector2(1120, 1620)
nodes/light/14/node = SubResource("VisualShaderNodeFloatOp_nj8uq")
nodes/light/14/position = Vector2(-420, 1720)
nodes/light/15/node = SubResource("VisualShaderNodeInput_l21sp")
nodes/light/15/position = Vector2(-300, 1420)
nodes/light/16/node = SubResource("VisualShaderNodeFloatOp_ex6ov")
nodes/light/16/position = Vector2(80, 1400)
nodes/light/17/node = SubResource("VisualShaderNodeVectorOp_5t3a8")
nodes/light/17/position = Vector2(260, 1280)
nodes/light/18/node = SubResource("VisualShaderNodeInput_ibb6m")
nodes/light/18/position = Vector2(1240, 1100)
nodes/light/19/node = SubResource("VisualShaderNodeMix_dxepy")
nodes/light/19/position = Vector2(1560, 1360)
nodes/light/20/node = SubResource("VisualShaderNodeFloatParameter_it0xi")
nodes/light/20/position = Vector2(100, 1520)
nodes/light/21/node = SubResource("VisualShaderNodeStep_71pn3")
nodes/light/21/position = Vector2(720, 1700)
nodes/light/23/node = SubResource("VisualShaderNodeColorParameter_5ivbd")
nodes/light/23/position = Vector2(1140, 1180)
nodes/light/connections = PackedInt32Array(8, 0, 11, 0, 3, 0, 4, 0, 10, 0, 14, 0, 14, 0, 11, 1, 8, 0, 17, 0, 5, 0, 19, 2, 4, 0, 5, 0, 15, 0, 16, 0, 16, 0, 17, 1, 7, 0, 8, 0, 6, 0, 7, 0, 17, 0, 5, 1, 9, 0, 7, 1, 19, 0, 12, 2, 18, 0, 12, 1, 23, 0, 19, 0, 13, 0, 19, 1, 4, 0, 21, 0, 11, 0, 21, 1, 20, 0, 16, 1)

[sub_resource type="Gradient" id="Gradient_i2rg2"]
colors = PackedColorArray(0.219501, 0.219501, 0.219501, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_m77sg"]
gradient = SubResource("Gradient_i2rg2")
fill = 1
fill_from = Vector2(0.525641, 0.470085)
fill_to = Vector2(1, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t44i5"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_ir0xt")
shader_parameter/Dark_color = Color(0.286275, 0.258824, 0.184314, 1)
shader_parameter/Gradient = SubResource("GradientTexture2D_m77sg")

[sub_resource type="GDScript" id="GDScript_wed3l"]
script/source = "extends Node

signal On_View

"

[sub_resource type="BoxShape3D" id="BoxShape3D_e1byd"]
size = Vector3(2.91418, 0.314575, 4.89087)

[node name="Book" type="Node3D"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 0)
script = ExtResource("1_ggf51")
_book_data = ExtResource("2_0b3of")

[node name="Idle_position" type="Node" parent="." node_paths=PackedStringArray("On_View")]
script = ExtResource("3_oknup")
On_View = NodePath("../Area3D/On_View")

[node name="Multiple_page_transition_right" type="Timer" parent="."]
wait_time = 0.15

[node name="Multiple_page_transition_left" type="Timer" parent="."]
wait_time = 0.15

[node name="Book_page" parent="." instance=ExtResource("13_sxhhj")]
transform = Transform3D(-9.73829e-09, 0, 0.222786, 0, 0.222786, 0, -0.222786, 0, -9.73829e-09, -0.116, 0.0158086, 0)

[node name="Page_flip_right_ROOT" type="Node3D" parent="."]
transform = Transform3D(0.975, 0, 0, 0, 1, 0, 0, 0, 0.922, -0.048, 0.089, 0)

[node name="Page_flip_right" parent="Page_flip_right_ROOT" instance=ExtResource("14_25ro7")]
transform = Transform3D(1, 0, -3.55271e-15, 0, 1, 0, 0, 0, 1.063, 0, 0, 0)

[node name="Page_flip_left_ROOT" type="Node3D" parent="."]
transform = Transform3D(0.974894, 8.74227e-08, 0, -8.52279e-08, 0.999999, 0, 0, 0, -0.949854, -0.048, 0.089, 0)

[node name="Page_flip_left" parent="Page_flip_left_ROOT" instance=ExtResource("14_25ro7")]
transform = Transform3D(1, 1.42109e-14, 0, -1.42109e-14, 1, 0, 0, 0, 1.031, 0, 0, 0)

[node name="book_page" type="MeshInstance3D" parent="."]
transform = Transform3D(2.67039, 0, 1.84741e-13, 0, 0.078953, 0, 0, 0, 4.63623, -0.105, 0.05, 0)
layers = 2
mesh = SubResource("BoxMesh_1p7be")
surface_material_override/0 = SubResource("ShaderMaterial_jjln6")

[node name="book_base" type="MeshInstance3D" parent="."]
transform = Transform3D(0.00116803, 0, -2.80743, 0, 0.0406598, 0, 4.79073, 0, 0.000685451, -0.107, 0.007, 0)
layers = 2
mesh = SubResource("BoxMesh_0xre3")
skeleton = NodePath("../../..")
surface_material_override/0 = SubResource("ShaderMaterial_t44i5")

[node name="Area3D" type="Area3D" parent="."]

[node name="On_View" type="Node" parent="Area3D"]
script = SubResource("GDScript_wed3l")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.115173, 0.135315, -0.00720215)
shape = SubResource("BoxShape3D_e1byd")
disabled = true

[connection signal="timeout" from="Multiple_page_transition_right" to="." method="_on_multiple_page_transition_timeout"]
[connection signal="timeout" from="Multiple_page_transition_left" to="." method="_on_multiple_page_transition_left_timeout"]
