[gd_scene load_steps=87 format=3 uid="uid://bbp1ccoa6te1g"]

[ext_resource type="Script" path="res://11_SPEAKER/Open_Dialogue.gd" id="1_6gph5"]
[ext_resource type="Script" path="res://09_NPC/NPC_DIVE_SELECTOR/Npc_loader.gd" id="2_gecf5"]
[ext_resource type="Script" path="res://addons/ez_dialogue/ez_dialogue_node.gd" id="2_iqwu8"]
[ext_resource type="Script" path="res://11_SPEAKER/Dialogue/Dialogue_asset/Ini_dialogue.gd" id="2_pxao7"]
[ext_resource type="Script" path="res://09_NPC/Npc_Init.gd" id="3_u2fyv"]
[ext_resource type="Resource" uid="uid://l3coaeai3lx6" path="res://09_NPC/Npc_data/Baltazar_data.tres" id="4_y4ud3"]
[ext_resource type="Resource" uid="uid://b5kt2xn16lfgt" path="res://09_NPC/Npc_data/Otis_data.tres" id="5_wppld"]
[ext_resource type="Resource" uid="uid://xuxu60afj84h" path="res://09_NPC/Npc_data/Guy_02_data.tres" id="6_6xaf4"]
[ext_resource type="Material" uid="uid://dxkegh8ms5y46" path="res://06_UI/Panel_ui_disolved_mat.tres" id="7_mabi4"]
[ext_resource type="PackedScene" uid="uid://ccq1654e6goa5" path="res://09_NPC/Model/hand_basic.tscn" id="8_rq6rq"]
[ext_resource type="Script" path="res://11_SPEAKER/Dialogue/Dialogue_asset/Dialogue_box.gd" id="9_n4i7c"]
[ext_resource type="PackedScene" uid="uid://kfeia6x8pslm" path="res://09_NPC/guy_02_prefab.tscn" id="11_60j22"]

[sub_resource type="GDScript" id="GDScript_d4nqo"]
script/source = "extends Node

@onready var hand_basic = $\"../00_NPC_CREATOR/Models/hand_basic\"
@onready var Npc = $\"../00_NPC_CREATOR/Models/Loader\"

func _ready():
	_global_datas._show_hand.connect(_show_hand)
	_global_datas._hide_hand.connect(_hide_hand)
	
func _show_hand():
	hand_basic.visible = true
	Npc.visible = false
func _hide_hand():
	hand_basic.visible = false
	Npc.visible = true

"

[sub_resource type="GDScript" id="GDScript_ktgfg"]
script/source = "extends Node


func _ready():
	_global_datas._open_dialogue.connect(_start_update)
	_global_datas._close_dialogue.connect(_stop_update)


func _start_update():
	$Timer.start()
	
func _stop_update():
	$Timer.stop()
	
		
func _updateFace():
	var rng = RandomNumberGenerator.new()
	var number = rng.randf_range(0.0, 1.0)
	RenderingServer.global_shader_parameter_set(\"random_faceAmount\",number)
	
	var z = rng.randf_range(-1, 1)
	var x = rng.randf_range(-1,1)
	var y = rng.randf_range(-1, 1)

	$\"../00_NPC_CREATOR/Models/Loader\".rotation_degrees.x = y
	$\"../00_NPC_CREATOR/Models/Loader\".rotation_degrees.y = x
	$\"../00_NPC_CREATOR/Models/Loader\".rotation_degrees.z = z
	
	
	
func _on_timer_timeout():
	_updateFace()
	$Timer.start()
	
"

[sub_resource type="GDScript" id="GDScript_8v74d"]
script/source = "extends Node
var _process_timer = false

@onready var timer = $Timer
@onready var photo_circle = $\"../Photo_circle\"
@onready var circle_material : Material = photo_circle.get_material()


signal take_picture


func _input(event: InputEvent):
	
	if timer.is_stopped():
		return
	
	if event.is_action_released(\"Click\"):
		timer.stop()
		_process_timer = false
		photo_circle.visible = false
		
func _process(_delta):
		
	if !timer.is_stopped():
		
		var lerp_time = lerp(0.0,0.4, timer.time_left / timer.wait_time)	
		circle_material.set_shader_parameter(\"Circle\",lerp_time)		

func _on_timer_timeout():
	print(\"TAKE PHOTO\")
	take_picture.emit()
	timer.stop()
	#_global_datas.Npc_Dialogue.photo_done = true
	photo_circle.visible = false
	_global_datas.Player_lock_click = false
	
func _on_area_2d_input_event(viewport, event, shape_idx):
	
	
	
	
	if !_global_datas.Player_InDialogue:
		return
		
	#if _global_datas.Npc_Dialogue.photo_done:
		#return
		
	
	
	if event.is_action_released(\"Photo\"):
		timer.stop()

		_global_datas.Player_lock_click = false
		photo_circle.visible = false
		
	if _global_datas.Player_lock_click == true:
		return
			
	if event.is_action_pressed(\"Photo\"):
	
		photo_circle.visible = true
		timer.start()
		_global_datas.Player_lock_click = true	


"

[sub_resource type="GDScript" id="GDScript_86ewk"]
script/source = "extends Node

@onready var photo_effect : ColorRect = $\"../../Photo_effect\" 

@onready var material : Material = photo_effect.get_material()

@onready var timer = $Timer

func _flash():
	timer.start()
	_global_datas._take_photo.emit()
	material.set_shader_parameter(\"flash_opacity\",1.0)
	photo_effect.visible = true
	
func _on_photo_behaviour_take_picture():
	_flash()

func _on_timer_timeout():
	timer.stop()
	photo_effect.visible = false

func _process(delta):
	
	if timer.is_stopped():
		return	
		
	var lerp_time = lerpf(0.0,0.5, timer.time_left / timer.wait_time)	
	material.set_shader_parameter(\"flash_opacity\",lerp_time)
	
"

[sub_resource type="GDScript" id="GDScript_wf71c"]
script/source = "extends Node

@onready var dialogue_text = $\"../00_NPC_CREATOR/Npc_convas/Dialogue_box/Dialogue_text\"

func _on_leave_button_text_pressed():
	var words: String = dialogue_text.get_text()
	_global_datas.instance_word_text._intance_words_note(words)	

	

"

[sub_resource type="VisualShader" id="VisualShader_6uu1l"]
code = "shader_type canvas_item;
render_mode blend_mix;



"
graph_offset = Vector2(-291, 7)
mode = 1
flags/light_only = false

[sub_resource type="ShaderMaterial" id="ShaderMaterial_6s3bf"]
shader = SubResource("VisualShader_6uu1l")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_qj4hd"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_qo38y"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_yjlwt"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_nld75"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_j1cwg"]
constant = 0.3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_nmddu"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_m8bbt"]
constant = 0.228

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_opc4p"]
input_name = "uv"

[sub_resource type="VisualShader" id="VisualShader_u51sj"]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


// FloatConstant:16
	float n_out16p0 = 0.300000;


// FloatConstant:3
	float n_out3p0 = 0.228000;


	vec4 n_out2p0;
// Expression:2
	n_out2p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out4p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out16p0,n_out16p0 + n_out3p0,d);
		n_out2p0 = vec4(vec3(c),1.0);
	}


// FloatConstant:13
	float n_out13p0 = 1.000000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out2p0.x, n_out14p0);


// Output:0
	COLOR.a = n_out15p0;


}
"
graph_offset = Vector2(-725.797, -34.2469)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1240, 520)
nodes/fragment/2/node = SubResource("VisualShaderNodeExpression_nmddu")
nodes/fragment/2/position = Vector2(-880, 140)
nodes/fragment/2/size = Vector2(513.781, 284.487)
nodes/fragment/2/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/2/output_ports = "0,5,color;"
nodes/fragment/2/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_m8bbt")
nodes/fragment/3/position = Vector2(-1100, 440)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_opc4p")
nodes/fragment/4/position = Vector2(-1480, 140)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_qj4hd")
nodes/fragment/12/position = Vector2(-260, 1180)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_qo38y")
nodes/fragment/13/position = Vector2(-260, 1040)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_yjlwt")
nodes/fragment/14/position = Vector2(40, 1160)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_nld75")
nodes/fragment/15/position = Vector2(880, 780)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatConstant_j1cwg")
nodes/fragment/16/position = Vector2(-1480, 420)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 2, 12, 0, 14, 1, 13, 0, 14, 0, 15, 0, 0, 1, 16, 0, 2, 1, 4, 0, 2, 0, 14, 0, 15, 1, 2, 0, 15, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_v4jjy"]
shader = SubResource("VisualShader_u51sj")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_pykt4"]
size = Vector2(1916, 1076)

[sub_resource type="Theme" id="Theme_g7433"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_08hgk"]
bg_color = Color(0.235294, 0.286275, 0.25098, 0)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_h0dus"]
bg_color = Color(0.458824, 0.443137, 0.301961, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cvj4c"]
input_name = "texture"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_14cg5"]
constant = Color(0.244572, 0.493703, 0.423517, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_kymmc"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_gt787"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_hqeo0"]

[sub_resource type="Gradient" id="Gradient_pqd7u"]
colors = PackedColorArray(0, 0, 0, 1, 0.796243, 0.796243, 0.796243, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_khnsx"]
gradient = SubResource("Gradient_pqd7u")
fill_from = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_7imnm"]
texture = SubResource("GradientTexture2D_khnsx")

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_v3h8k"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_kpt7u"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_dyn8m"]
function = 31

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_n4qvm"]
constant = 0.47

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ha1yb"]
constant = 0.034

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_4pxt3"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_8v6s5"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_fg2tq"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_rooc8"]
function = 31

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_u84nn"]
constant = 0.3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_umnvf"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_hcn2v"]
size = Vector2(634.014, 470.339)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_qnelr"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.525, 0.525, 0.525), 2, 1.0]
op_type = 4

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_a6ror"]

[sub_resource type="VisualShader" id="VisualShader_6tujj"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_38;



void fragment() {
// ColorConstant:29
	vec4 n_out29p0 = vec4(0.244572, 0.493703, 0.423517, 1.000000);


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(TEXTURE, UV);
	float n_out3p4 = n_out3p0.a;


// Mix:31
	vec3 n_out31p0 = mix(vec3(n_out29p0.xyz), vec3(n_out3p0.xyz), vec3(n_out3p4));


// FloatConstant:55
	float n_out55p0 = 1.000000;


// FloatConstant:54
	float n_out54p0 = 0.300000;


	float n_out56p0;
// Expression:56
	n_out56p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out54p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out56p0 = n_out55p0 - DITHER_THRESHOLDS[index];
	}


// Input:49
	vec2 n_out49p0 = UV;


// UVFunc:51
	vec2 n_in51p1 = vec2(1.00000, 1.00000);
	vec2 n_in51p2 = vec2(0.00000, 0.00000);
	vec2 n_out51p0 = n_in51p2 * n_in51p1 + n_out49p0;


// FloatConstant:47
	float n_out47p0 = 0.470000;


// FloatConstant:48
	float n_out48p0 = 0.034000;


	vec4 n_out52p0;
// Expression:52
	n_out52p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out51p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out47p0,n_out47p0 + n_out48p0,d);
		n_out52p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:53
	float n_out53p0 = 1.0 - n_out52p0.x;


// Texture2D:38
	vec4 n_out38p0 = texture(tex_frg_38, UV);


// FloatFunc:42
	float n_out42p0 = 1.0 - n_out38p0.x;


// Mix:39
	vec3 n_in39p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out39p0 = mix(n_in39p0, vec3(n_out53p0), vec3(n_out42p0));


// Step:40
	float n_out40p0 = step(n_out56p0, n_out39p0.x);


// Mix:57
	float n_in57p2 = 1.00000;
	vec3 n_out57p0 = mix(vec3(n_out40p0), vec3(n_out3p4), n_in57p2);


// VectorOp:33
	vec3 n_out33p0 = n_out57p0 + vec3(n_out40p0);


// Output:0
	COLOR.rgb = n_out31p0;
	COLOR.a = n_out33p0.x;


}
"
graph_offset = Vector2(-440.155, -23.3751)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(2020, 260)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_cvj4c")
nodes/fragment/2/position = Vector2(-660, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_kymmc")
nodes/fragment/3/position = Vector2(-200, 60)
nodes/fragment/29/node = SubResource("VisualShaderNodeColorConstant_14cg5")
nodes/fragment/29/position = Vector2(860, 100)
nodes/fragment/31/node = SubResource("VisualShaderNodeMix_gt787")
nodes/fragment/31/position = Vector2(1180, 180)
nodes/fragment/33/node = SubResource("VisualShaderNodeVectorOp_hqeo0")
nodes/fragment/33/position = Vector2(820, 460)
nodes/fragment/38/node = SubResource("VisualShaderNodeTexture_7imnm")
nodes/fragment/38/position = Vector2(-520, 1020)
nodes/fragment/39/node = SubResource("VisualShaderNodeMix_v3h8k")
nodes/fragment/39/position = Vector2(220, 680)
nodes/fragment/40/node = SubResource("VisualShaderNodeStep_kpt7u")
nodes/fragment/40/position = Vector2(460, 820)
nodes/fragment/42/node = SubResource("VisualShaderNodeFloatFunc_dyn8m")
nodes/fragment/42/position = Vector2(-240, 1100)
nodes/fragment/47/node = SubResource("VisualShaderNodeFloatConstant_n4qvm")
nodes/fragment/47/position = Vector2(-1774.07, 1285.1)
nodes/fragment/48/node = SubResource("VisualShaderNodeFloatConstant_ha1yb")
nodes/fragment/48/position = Vector2(-1694.07, 1425.1)
nodes/fragment/49/node = SubResource("VisualShaderNodeInput_4pxt3")
nodes/fragment/49/position = Vector2(-2040, 940)
nodes/fragment/51/node = SubResource("VisualShaderNodeUVFunc_8v6s5")
nodes/fragment/51/position = Vector2(-1660, 840)
nodes/fragment/52/node = SubResource("VisualShaderNodeExpression_fg2tq")
nodes/fragment/52/position = Vector2(-1180, 860)
nodes/fragment/52/size = Vector2(513.781, 284.487)
nodes/fragment/52/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/52/output_ports = "0,5,color;"
nodes/fragment/52/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/53/node = SubResource("VisualShaderNodeFloatFunc_rooc8")
nodes/fragment/53/position = Vector2(-463.763, 766.692)
nodes/fragment/54/node = SubResource("VisualShaderNodeFloatConstant_u84nn")
nodes/fragment/54/position = Vector2(-440, 1780)
nodes/fragment/55/node = SubResource("VisualShaderNodeFloatConstant_umnvf")
nodes/fragment/55/position = Vector2(-440, 1680)
nodes/fragment/56/node = SubResource("VisualShaderNodeExpression_hcn2v")
nodes/fragment/56/position = Vector2(-160, 1660)
nodes/fragment/56/size = Vector2(634.014, 470.339)
nodes/fragment/56/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/56/output_ports = "0,0,Dither_Node;"
nodes/fragment/56/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/57/node = SubResource("VisualShaderNodeMix_qnelr")
nodes/fragment/57/position = Vector2(340, 400)
nodes/fragment/58/node = SubResource("VisualShaderNodeStep_a6ror")
nodes/fragment/58/position = Vector2(-54.1843, 604.979)
nodes/fragment/connections = PackedInt32Array(39, 0, 40, 1, 47, 0, 52, 1, 48, 0, 52, 2, 51, 0, 52, 0, 49, 0, 51, 0, 52, 0, 53, 0, 54, 0, 56, 1, 55, 0, 56, 0, 56, 0, 40, 0, 2, 0, 3, 2, 53, 0, 39, 1, 40, 0, 33, 1, 29, 0, 31, 0, 38, 0, 42, 0, 42, 0, 39, 2, 31, 0, 0, 0, 3, 4, 31, 2, 3, 0, 31, 1, 57, 0, 33, 0, 53, 0, 58, 1, 56, 0, 58, 0, 33, 0, 0, 1, 3, 4, 57, 1, 40, 0, 57, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_uo04r"]
shader = SubResource("VisualShader_6tujj")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_t1wnh"]
default_input_values = [0, 0.0, 1, 0.89]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_wea74"]
default_input_values = [0, 0.0, 1, 1.96, 2, 0.775]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_oov18"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_t70sg"]
constant = 1.858

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_mlids"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_w1if8"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_gwqr5"]
constant = 0.3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_fipwi"]
parameter_name = "Circle"
default_value_enabled = true
default_value = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_5ywv0"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_aajdc"]
constant = 0.001

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cdrum"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_anrrl"]
function = 31

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_usvts"]
default_input_values = [1, Vector2(1.8, 1), 2, Vector2(0.5, 0)]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_hws01"]
default_input_values = [1, Vector2(0, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_d3gtm"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShader" id="VisualShader_hyb1k"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Circle = 0.40000000596046;



void fragment() {
// FloatConstant:13
	float n_out13p0 = 1.858000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Input:4
	vec2 n_out4p0 = UV;


// UVFunc:6
	vec2 n_in6p1 = vec2(1.80000, 1.00000);
	vec2 n_in6p2 = vec2(0.50000, 0.00000);
	vec2 n_out6p0 = (n_out4p0 - n_in6p2) * n_in6p1 + n_in6p2;


// UVFunc:7
	vec2 n_in7p1 = vec2(0.00000, 1.00000);
	vec2 n_in7p2 = vec2(0.00000, 0.00000);
	vec2 n_out7p0 = n_in7p2 * n_in7p1 + n_out6p0;


// FloatParameter:17
	float n_out17p0 = Circle;


// FloatConstant:3
	float n_out3p0 = 0.001000;


	vec4 n_out2p0;
// Expression:2
	n_out2p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out7p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out17p0,n_out17p0 + n_out3p0,d);
		n_out2p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:5
	float n_out5p0 = 1.0 - n_out2p0.x;


// FloatOp:10
	float n_in10p1 = 0.89000;
	float n_out10p0 = n_out17p0 * n_in10p1;


	vec4 n_out9p0;
// Expression:9
	n_out9p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out7p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out10p0,n_out10p0 + n_out3p0,d);
		n_out9p0 = vec4(vec3(c),1.0);
	}


// Mix:11
	float n_in11p0 = 0.00000;
	float n_out11p0 = mix(n_in11p0, n_out5p0, n_out9p0.x);


// Step:15
	float n_out15p0 = step(n_out14p0, n_out11p0);


// Output:0
	COLOR.a = n_out15p0;


}
"
graph_offset = Vector2(-541.09, -39.0843)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1240, 520)
nodes/fragment/2/node = SubResource("VisualShaderNodeExpression_5ywv0")
nodes/fragment/2/position = Vector2(-540, 20)
nodes/fragment/2/size = Vector2(513.781, 284.487)
nodes/fragment/2/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/2/output_ports = "0,5,color;"
nodes/fragment/2/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_aajdc")
nodes/fragment/3/position = Vector2(-820, 380)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_cdrum")
nodes/fragment/4/position = Vector2(-2300, -60)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_anrrl")
nodes/fragment/5/position = Vector2(60, 40)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVFunc_usvts")
nodes/fragment/6/position = Vector2(-1960, -120)
nodes/fragment/7/node = SubResource("VisualShaderNodeUVFunc_hws01")
nodes/fragment/7/position = Vector2(-1720, -120)
nodes/fragment/9/node = SubResource("VisualShaderNodeExpression_d3gtm")
nodes/fragment/9/position = Vector2(-655.858, 530.852)
nodes/fragment/9/size = Vector2(513.781, 284.487)
nodes/fragment/9/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/9/output_ports = "0,5,color;"
nodes/fragment/9/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_t1wnh")
nodes/fragment/10/position = Vector2(-1160, 640)
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_wea74")
nodes/fragment/11/position = Vector2(460, 580)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_oov18")
nodes/fragment/12/position = Vector2(-260, 1180)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_t70sg")
nodes/fragment/13/position = Vector2(-260, 1040)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_mlids")
nodes/fragment/14/position = Vector2(40, 1160)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_w1if8")
nodes/fragment/15/position = Vector2(880, 780)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatConstant_gwqr5")
nodes/fragment/16/position = Vector2(-1660, 280)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatParameter_fipwi")
nodes/fragment/17/position = Vector2(-1809.95, 419.028)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 2, 2, 0, 5, 0, 4, 0, 6, 0, 6, 0, 7, 0, 7, 0, 2, 0, 7, 0, 9, 0, 3, 0, 9, 2, 10, 0, 9, 1, 9, 0, 11, 2, 5, 0, 11, 1, 12, 0, 14, 1, 13, 0, 14, 0, 11, 0, 15, 1, 14, 0, 15, 0, 15, 0, 0, 1, 17, 0, 2, 1, 17, 0, 10, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_68wal"]
shader = SubResource("VisualShader_hyb1k")
shader_parameter/Circle = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_l6s44"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ihrmg"]
constant = 0.608

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_08tgl"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_suokg"]
constant = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_x10ei"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_hqhh4"]
constant = 0.01

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_nixh4"]
parameter_name = "flash_opacity"
hint = 1
max = 0.5
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3kxch"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ag11v"]
default_input_values = [1, Vector2(1.8, 1), 2, Vector2(0.5, 0)]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_oq4ai"]
default_input_values = [1, Vector2(0, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShader" id="VisualShader_2tdle"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float flash_opacity : hint_range(0, 0.5) = 0.5;



void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


// UVFunc:6
	vec2 n_in6p1 = vec2(1.80000, 1.00000);
	vec2 n_in6p2 = vec2(0.50000, 0.00000);
	vec2 n_out6p0 = (n_out4p0 - n_in6p2) * n_in6p1 + n_in6p2;


// UVFunc:7
	vec2 n_in7p1 = vec2(0.00000, 1.00000);
	vec2 n_in7p2 = vec2(0.00000, 0.00000);
	vec2 n_out7p0 = n_in7p2 * n_in7p1 + n_out6p0;


// FloatConstant:26
	float n_out26p0 = 0.010000;


// FloatConstant:17
	float n_out17p0 = 0.608000;


	vec4 n_out16p0;
// Expression:16
	n_out16p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out7p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out26p0,n_out26p0 + n_out17p0,d);
		n_out16p0 = vec4(vec3(c),1.0);
	}


// FloatParameter:27
	float n_out27p0 = flash_opacity;


// FloatConstant:23
	float n_out23p0 = 0.400000;


	float n_out25p0;
// Expression:25
	n_out25p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out23p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out25p0 = n_out27p0 - DITHER_THRESHOLDS[index];
	}


// Step:22
	float n_out22p0 = step(n_out16p0.x, n_out25p0);


// Output:0
	COLOR.a = n_out22p0;


}
"
graph_offset = Vector2(-993.984, 440.413)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1320, 520)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_3kxch")
nodes/fragment/4/position = Vector2(-2380, 860)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVFunc_ag11v")
nodes/fragment/6/position = Vector2(-2040, 800)
nodes/fragment/7/node = SubResource("VisualShaderNodeUVFunc_oq4ai")
nodes/fragment/7/position = Vector2(-1800, 800)
nodes/fragment/16/node = SubResource("VisualShaderNodeExpression_l6s44")
nodes/fragment/16/position = Vector2(-1540, 1020)
nodes/fragment/16/size = Vector2(513.781, 284.487)
nodes/fragment/16/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/16/output_ports = "0,5,color;"
nodes/fragment/16/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatConstant_ihrmg")
nodes/fragment/17/position = Vector2(-2080, 1260)
nodes/fragment/22/node = SubResource("VisualShaderNodeStep_08tgl")
nodes/fragment/22/position = Vector2(700, 500)
nodes/fragment/23/node = SubResource("VisualShaderNodeFloatConstant_suokg")
nodes/fragment/23/position = Vector2(20, 1180)
nodes/fragment/25/node = SubResource("VisualShaderNodeExpression_x10ei")
nodes/fragment/25/position = Vector2(320, 1160)
nodes/fragment/25/size = Vector2(724.789, 654.559)
nodes/fragment/25/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/25/output_ports = "0,0,Dither_Node;"
nodes/fragment/25/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatConstant_hqhh4")
nodes/fragment/26/position = Vector2(-2021.14, 1036.45)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatParameter_nixh4")
nodes/fragment/27/position = Vector2(-40, 880)
nodes/fragment/connections = PackedInt32Array(4, 0, 6, 0, 6, 0, 7, 0, 17, 0, 16, 2, 23, 0, 25, 1, 25, 0, 22, 1, 7, 0, 16, 0, 22, 0, 0, 1, 16, 0, 22, 0, 26, 0, 16, 1, 27, 0, 25, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1qvcb"]
shader = SubResource("VisualShader_2tdle")
shader_parameter/flash_opacity = 0.5

[node name="05_SPEAKER" type="Node"]
script = ExtResource("1_6gph5")

[node name="Dialogue" type="Node" parent="."]
script = ExtResource("2_pxao7")

[node name="EzDialogue" type="Node" parent="Dialogue"]
script = ExtResource("2_iqwu8")

[node name="Npc_loader" type="Node" parent="."]
script = ExtResource("2_gecf5")

[node name="Next_dialogue" type="Node" parent="."]

[node name="Show_Hand" type="Node" parent="."]
script = SubResource("GDScript_d4nqo")

[node name="Random_FaceChanger" type="Node" parent="."]
script = SubResource("GDScript_ktgfg")

[node name="Timer" type="Timer" parent="Random_FaceChanger"]

[node name="PHOTO_BEHAVIOUR" type="Node" parent="."]
script = SubResource("GDScript_8v74d")

[node name="Flash" type="Node" parent="PHOTO_BEHAVIOUR"]
script = SubResource("GDScript_86ewk")

[node name="Timer" type="Timer" parent="PHOTO_BEHAVIOUR/Flash"]
wait_time = 0.4

[node name="Timer" type="Timer" parent="PHOTO_BEHAVIOUR"]
wait_time = 0.5

[node name="Instance_words" type="Node" parent="."]
script = SubResource("GDScript_wf71c")

[node name="00_NPC_CREATOR" type="Node" parent="."]
script = ExtResource("3_u2fyv")
Npc_all = Array[Resource("res://09_NPC/Npc_data.gd")]([ExtResource("4_y4ud3"), ExtResource("5_wppld"), ExtResource("6_6xaf4")])

[node name="Npc_convas" type="Control" parent="00_NPC_CREATOR"]
visible = false
texture_filter = 1
texture_repeat = 2
material = SubResource("ShaderMaterial_6s3bf")
use_parent_material = true
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[node name="Circle2" type="ColorRect" parent="00_NPC_CREATOR/Npc_convas"]
visible = false
material = SubResource("ShaderMaterial_v4jjy")
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -259.0
offset_top = -239.0
offset_right = 297.0
offset_bottom = 317.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(1.82232, 1.82232)
pivot_offset = Vector2(300, 300)
mouse_filter = 2
color = Color(0.0625, 0.140625, 0.140625, 1)

[node name="Tools" type="Control" parent="00_NPC_CREATOR/Npc_convas"]
layout_mode = 3
anchors_preset = 0
offset_left = 960.0
offset_top = 540.0
offset_right = 960.0
offset_bottom = 540.0
mouse_filter = 2

[node name="Area2D" type="Area2D" parent="00_NPC_CREATOR/Npc_convas/Tools"]
collision_layer = 2
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="00_NPC_CREATOR/Npc_convas/Tools/Area2D"]
visible = false
shape = SubResource("RectangleShape2D_pykt4")

[node name="Dialogue_box" type="Node2D" parent="00_NPC_CREATOR/Npc_convas"]
script = ExtResource("9_n4i7c")

[node name="Name_text" type="Label" parent="00_NPC_CREATOR/Npc_convas/Dialogue_box"]
offset_left = 724.0
offset_top = 789.0
offset_right = 1244.0
offset_bottom = 865.0
theme_override_colors/font_color = Color(0.796875, 0.695313, 0.492188, 1)
theme_override_font_sizes/font_size = 25
text = "Marc"
autowrap_mode = 3

[node name="Dialogue_text" type="Label" parent="00_NPC_CREATOR/Npc_convas/Dialogue_box"]
offset_left = 723.0
offset_top = 828.0
offset_right = 1243.0
offset_bottom = 904.0
theme_override_colors/font_color = Color(0.662745, 0.835294, 0.784314, 1)
theme_override_font_sizes/font_size = 25
text = "-Lorem ipsum dolor sit ame consectetur adipiscing elit, sed do eiusmod tempor ?"
autowrap_mode = 3

[node name="Leave_button" type="Button" parent="00_NPC_CREATOR/Npc_convas/Dialogue_box"]
offset_left = 1072.0
offset_top = 1029.0
offset_right = 1251.0
offset_bottom = 1060.0
mouse_default_cursor_shape = 2
theme = SubResource("Theme_g7433")
theme_override_colors/font_color = Color(0.8, 0.698039, 0.494118, 1)
theme_override_font_sizes/font_size = 22
theme_override_styles/normal = SubResource("StyleBoxFlat_08hgk")
theme_override_styles/hover = SubResource("StyleBoxFlat_h0dus")
text = "Leave"

[node name="Leave_button_text" type="Button" parent="00_NPC_CREATOR/Npc_convas/Dialogue_box"]
offset_left = 720.0
offset_top = 1029.0
offset_right = 899.0
offset_bottom = 1060.0
mouse_default_cursor_shape = 2
theme = SubResource("Theme_g7433")
theme_override_colors/font_color = Color(0.8, 0.698039, 0.494118, 1)
theme_override_font_sizes/font_size = 22
theme_override_styles/normal = SubResource("StyleBoxFlat_08hgk")
theme_override_styles/hover = SubResource("StyleBoxFlat_h0dus")
text = "Take text"

[node name="VBoxContainer" type="VBoxContainer" parent="00_NPC_CREATOR/Npc_convas/Dialogue_box"]
material = ExtResource("7_mabi4")
offset_left = 723.0
offset_top = 919.0
offset_right = 1243.0
offset_bottom = 1019.0
mouse_filter = 2
theme_override_constants/separation = 25

[node name="CAM_NPCS" type="SubViewportContainer" parent="00_NPC_CREATOR/Npc_convas"]
material = SubResource("ShaderMaterial_uo04r")
layout_mode = 2
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -246.0
offset_top = -250.0
offset_right = 254.0
offset_bottom = 250.0
grow_horizontal = 2
grow_vertical = 2
pivot_offset = Vector2(350, 350)
mouse_filter = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="00_NPC_CREATOR/Npc_convas/CAM_NPCS"]
transparent_bg = true
handle_input_locally = false
size = Vector2i(500, 500)
render_target_update_mode = 0

[node name="Camera3D" type="Camera3D" parent="00_NPC_CREATOR/Npc_convas/CAM_NPCS/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 10.12, 5.735)
cull_mask = 32
fov = 55.0

[node name="NPC_light" type="OmniLight3D" parent="00_NPC_CREATOR"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 18.002, 3.57)
layers = 32
shadow_bias = 0.0
shadow_normal_bias = 0.0
shadow_transmittance_bias = 0.21
shadow_blur = 6.76
omni_range = 16.972
omni_attenuation = 0.0915056

[node name="Models" type="Node" parent="00_NPC_CREATOR"]

[node name="hand_basic" parent="00_NPC_CREATOR/Models" instance=ExtResource("8_rq6rq")]
transform = Transform3D(-0.836274, 0.104468, -0.600797, 0.469035, -0.541469, -0.747022, -0.389713, -0.875855, 0.390162, 1.205, 11.253, 0)
visible = false

[node name="Loader" type="Node3D" parent="00_NPC_CREATOR/Models"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.26, 0)

[node name="Guy_02" parent="00_NPC_CREATOR/Models/Loader" instance=ExtResource("11_60j22")]

[node name="Photo_circle" type="ColorRect" parent="."]
visible = false
material = SubResource("ShaderMaterial_68wal")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
color = Color(0.988235, 0.901961, 0.694118, 1)

[node name="Photo_effect" type="ColorRect" parent="."]
visible = false
material = SubResource("ShaderMaterial_1qvcb")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
color = Color(0.784314, 0.709804, 0.513726, 1)

[connection signal="custom_signal_received" from="Dialogue/EzDialogue" to="Dialogue" method="_on_ez_dialogue_custom_signal_received"]
[connection signal="dialogue_generated" from="Dialogue/EzDialogue" to="Dialogue" method="_on_ez_dialogue_dialogue_generated"]
[connection signal="end_of_dialogue_reached" from="Dialogue/EzDialogue" to="Dialogue" method="_on_ez_dialogue_end_of_dialogue_reached"]
[connection signal="timeout" from="Random_FaceChanger/Timer" to="Random_FaceChanger" method="_on_timer_timeout"]
[connection signal="take_picture" from="PHOTO_BEHAVIOUR" to="PHOTO_BEHAVIOUR/Flash" method="_on_photo_behaviour_take_picture"]
[connection signal="timeout" from="PHOTO_BEHAVIOUR/Flash/Timer" to="PHOTO_BEHAVIOUR/Flash" method="_on_timer_timeout"]
[connection signal="timeout" from="PHOTO_BEHAVIOUR/Timer" to="PHOTO_BEHAVIOUR" method="_on_timer_timeout"]
[connection signal="input_event" from="00_NPC_CREATOR/Npc_convas/Tools/Area2D" to="PHOTO_BEHAVIOUR" method="_on_area_2d_input_event"]
[connection signal="pressed" from="00_NPC_CREATOR/Npc_convas/Dialogue_box/Leave_button" to="." method="_on_leave_button_pressed"]
[connection signal="pressed" from="00_NPC_CREATOR/Npc_convas/Dialogue_box/Leave_button_text" to="Instance_words" method="_on_leave_button_text_pressed"]
