[gd_resource type="VisualShader" load_steps=31 format=3 uid="uid://7nanp4dqf4uc"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_q2vc7"]
constant = Color(0.0670319, 0.15833, 0.158327, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_8kkx7"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_usv33"]
parameter_name = "Albedo_viewport"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ngfce"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.145]

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_p0x2j"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_00eti"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_f3t0f"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_nnmhj"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_82vmf"]
constant = 1.0

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_72rbn"]
source = 5

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_vvegw"]
function = 31

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ygjhg"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_v5dbr"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_fqrtl"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_emkml"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_pi27m"]
constant = 1.0

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_nhl6p"]
default_input_values = [0, 0.0, 1, -0.03]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_acq56"]
function = 31

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_j5mve"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.9]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3a7l7"]
source = 5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_2ldln"]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_nnent"]
default_input_values = [1, Vector2(1, 0.5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xufhi"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_hor14"]
default_input_values = [0, 0.0, 1, 0.001]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_vrojr"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 2

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_5kbge"]
parameter_name = "BlueNoise"
qualifier = 1
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_gbetg"]
parameter_name = "Dither_blue_noise_size"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_i01fu"]
constant = 1.5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_upeu7"]
parameter_name = "Albedo_light"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5h3u3"]
source = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Albedo_viewport;
uniform sampler2D Albedo_light;
uniform float Opacity : hint_range(0, 1) = 0.5;
global uniform float Dither_size;



void fragment() {
// ColorConstant:18
	vec4 n_out18p0 = vec4(0.067032, 0.158330, 0.158327, 1.000000);


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Albedo_viewport, UV);


	vec4 n_out7p0;
// Texture2D:7
	n_out7p0 = texture(Albedo_light, UV);


// Mix:24
	float n_in24p1 = 1.00000;
	float n_in24p2 = 0.14500;
	float n_out24p0 = mix(n_out7p0.x, n_in24p1, n_in24p2);


// Mix:19
	vec3 n_out19p0 = mix(vec3(n_out18p0.xyz), vec3(n_out3p0.xyz), vec3(n_out24p0));


// FloatParameter:27
	float n_out27p0 = Opacity;


// FloatConstant:29
	float n_out29p0 = 1.000000;


// FloatParameter:28
	float n_out28p0 = Dither_size;


	float n_out26p0;
// Expression:26
	n_out26p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out28p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out26p0 = n_out29p0 - DITHER_THRESHOLDS[index];
	}


// Step:25
	float n_out25p0 = step(n_out27p0, n_out26p0);


// FloatFunc:30
	float n_out30p0 = 1.0 - n_out25p0;


// Output:0
	COLOR.rgb = n_out19p0;
	COLOR.a = n_out30p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(2380, 80)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_usv33")
nodes/fragment/2/position = Vector2(-300, -560)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_72rbn")
nodes/fragment/3/position = Vector2(160, -500)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture2DParameter_upeu7")
nodes/fragment/6/position = Vector2(-1600, 380)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture_5h3u3")
nodes/fragment/7/position = Vector2(-1220, 420)
nodes/fragment/18/node = SubResource("VisualShaderNodeColorConstant_q2vc7")
nodes/fragment/18/position = Vector2(600, -300)
nodes/fragment/19/node = SubResource("VisualShaderNodeMix_8kkx7")
nodes/fragment/19/position = Vector2(800, 0)
nodes/fragment/24/node = SubResource("VisualShaderNodeMix_ngfce")
nodes/fragment/24/position = Vector2(340, 60)
nodes/fragment/25/node = SubResource("VisualShaderNodeStep_p0x2j")
nodes/fragment/25/position = Vector2(1620, 1280)
nodes/fragment/26/node = SubResource("VisualShaderNodeExpression_00eti")
nodes/fragment/26/position = Vector2(-160, 1680)
nodes/fragment/26/size = Vector2(724.789, 654.559)
nodes/fragment/26/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/26/output_ports = "0,0,Dither_Node;"
nodes/fragment/26/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatParameter_f3t0f")
nodes/fragment/27/position = Vector2(1080, 1180)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatParameter_nnmhj")
nodes/fragment/28/position = Vector2(-660, 1820)
nodes/fragment/29/node = SubResource("VisualShaderNodeFloatConstant_82vmf")
nodes/fragment/29/position = Vector2(-540, 1660)
nodes/fragment/30/node = SubResource("VisualShaderNodeFloatFunc_vvegw")
nodes/fragment/30/position = Vector2(2020, 1140)
nodes/fragment/31/node = SubResource("VisualShaderNodeExpression_ygjhg")
nodes/fragment/31/position = Vector2(1420, -840)
nodes/fragment/31/size = Vector2(620, 200)
nodes/fragment/31/input_ports = "0,4,color;"
nodes/fragment/31/output_ports = "0,0,grey_value;"
nodes/fragment/31/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/32/node = SubResource("VisualShaderNodeBooleanParameter_v5dbr")
nodes/fragment/32/position = Vector2(1380, -580)
nodes/fragment/33/node = SubResource("VisualShaderNodeSwitch_fqrtl")
nodes/fragment/33/position = Vector2(1760, -480)
nodes/fragment/34/node = SubResource("VisualShaderNodeExpression_emkml")
nodes/fragment/34/position = Vector2(-80, 960)
nodes/fragment/34/size = Vector2(724.789, 654.559)
nodes/fragment/34/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/34/output_ports = "0,0,Dither_Node;"
nodes/fragment/34/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/35/node = SubResource("VisualShaderNodeFloatConstant_pi27m")
nodes/fragment/35/position = Vector2(-400, 1120)
nodes/fragment/36/node = SubResource("VisualShaderNodeStep_nhl6p")
nodes/fragment/36/position = Vector2(500, 420)
nodes/fragment/37/node = SubResource("VisualShaderNodeFloatFunc_acq56")
nodes/fragment/37/position = Vector2(920, 600)
nodes/fragment/38/node = SubResource("VisualShaderNodeMix_j5mve")
nodes/fragment/38/position = Vector2(1200, 640)
nodes/fragment/39/node = SubResource("VisualShaderNodeTexture_3a7l7")
nodes/fragment/39/position = Vector2(-1060, -340)
nodes/fragment/40/node = SubResource("VisualShaderNodeUVFunc_2ldln")
nodes/fragment/40/position = Vector2(-1660, -220)
nodes/fragment/41/node = SubResource("VisualShaderNodeUVFunc_nnent")
nodes/fragment/41/position = Vector2(-1980, -340)
nodes/fragment/42/node = SubResource("VisualShaderNodeInput_xufhi")
nodes/fragment/42/position = Vector2(-2260, 40)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatOp_hor14")
nodes/fragment/43/position = Vector2(-1940, 20)
nodes/fragment/44/node = SubResource("VisualShaderNodeFloatOp_vrojr")
nodes/fragment/44/position = Vector2(-1880, 220)
nodes/fragment/45/node = SubResource("VisualShaderNodeTexture2DParameter_5kbge")
nodes/fragment/45/position = Vector2(-1420, -60)
nodes/fragment/46/node = SubResource("VisualShaderNodeFloatParameter_gbetg")
nodes/fragment/46/position = Vector2(-2380, -200)
nodes/fragment/47/node = SubResource("VisualShaderNodeFloatConstant_i01fu")
nodes/fragment/47/position = Vector2(-1978.89, -78.9001)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 6, 0, 7, 2, 18, 0, 19, 0, 28, 0, 26, 1, 26, 0, 25, 1, 29, 0, 26, 0, 27, 0, 25, 0, 25, 0, 30, 0, 30, 0, 0, 1, 19, 0, 31, 0, 32, 0, 33, 0, 31, 0, 33, 1, 19, 0, 33, 2, 28, 0, 34, 1, 35, 0, 34, 0, 7, 0, 38, 1, 36, 0, 37, 0, 37, 0, 38, 0, 3, 0, 19, 1, 42, 0, 43, 0, 43, 0, 44, 0, 41, 0, 40, 0, 40, 0, 39, 0, 45, 0, 39, 2, 46, 0, 40, 1, 7, 0, 36, 0, 34, 0, 36, 1, 7, 0, 24, 0, 24, 0, 19, 2, 19, 0, 0, 0)
