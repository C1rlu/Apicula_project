[gd_resource type="VisualShader" load_steps=40 format=3 uid="uid://b8pie7pbqwtks"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_dltq7"]
parameter_name = "Main"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gx827"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_sy8vf"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_fk757"]
parameter_name = "Foam"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6arbr"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3skvv"]
constant = Color(0.258824, 0.517647, 0.447059, 1)

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_bvl1s"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_jfceh"]
parameter_name = "Sonar"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_rek5y"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_5xyb1"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_jagh6"]
constant = Color(0.667877, 0.529428, 0.363048, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_4twgq"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ed7a0"]
parameter_name = "Grid"
texture_filter = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_khf74"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_yrd1h"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_y5fc4"]
parameter_name = "Sky"
texture_filter = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_obj6x"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_eidok"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_basxs"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_tpwxd"]
parameter_name = "Grid_opacity"
hint = 1
max = 0.3
default_value_enabled = true
default_value = 0.3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_e7auf"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_kucqf"]
parameter_name = "Grid_Color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_t8w82"]
parameter_name = "Main_light"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_t7nk2"]
source = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_17orm"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_gqi21"]
constant = Color(0.0244784, 0.124583, 0.132063, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_lh7ax"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_b5mkh"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_st6ci"]
size = Vector2(120, 180)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_153s3"]
constant = 1.079

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_620r6"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_gfl36"]
function = 31

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_2cdtv"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_eo8rc"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="Gradient" id="Gradient_hd5vi"]
offsets = PackedFloat32Array(0.291411, 0.892638, 1)
colors = PackedColorArray(0.00777125, 0.0908595, 0.105685, 1, 0.247059, 0.768627, 0.85098, 1, 8.47101e-06, 0.880075, 0.754428, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_c7574"]
gradient = SubResource("Gradient_hd5vi")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_oocjf"]
texture = SubResource("GradientTexture1D_c7574")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2mokm"]
parameter_name = "Night"
hint = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jd15a"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Main : filter_nearest;
uniform sampler2D Foam : filter_nearest;
uniform sampler2D Sonar : filter_nearest;
uniform vec4 Grid_Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform sampler2D Grid : filter_nearest;
uniform float Grid_opacity : hint_range(0, 0.30000001192093) = 0.30000001192093;
global uniform float Dither_size;
uniform sampler2D Main_light : filter_nearest;
uniform sampler2D tex_frg_50;
uniform float Night : hint_range(0, 1) = 0;
uniform float Opacity : hint_range(0, 1) = 0.5;



void fragment() {
// ColorConstant:41
	vec4 n_out41p0 = vec4(0.024478, 0.124583, 0.132063, 1.000000);


	vec4 n_out14p0;
// Texture2D:14
	n_out14p0 = texture(Main, UV);


// ColorConstant:19
	vec4 n_out19p0 = vec4(0.258824, 0.517647, 0.447059, 1.000000);


	vec4 n_out17p0;
// Texture2D:17
	n_out17p0 = texture(Foam, UV);


// Mix:15
	vec3 n_out15p0 = mix(vec3(n_out14p0.xyz), vec3(n_out19p0.xyz), vec3(n_out17p0.xyz));


// ColorConstant:23
	vec4 n_out23p0 = vec4(0.667877, 0.529428, 0.363048, 1.000000);


	vec4 n_out21p0;
// Texture2D:21
	n_out21p0 = texture(Sonar, UV);


// Mix:22
	vec3 n_out22p0 = mix(n_out15p0, vec3(n_out23p0.xyz), vec3(n_out21p0.xyz));


// ColorParameter:36
	vec4 n_out36p0 = Grid_Color;


	vec4 n_out24p0;
// Texture2D:24
	n_out24p0 = texture(Grid, UV);


// FloatParameter:33
	float n_out33p0 = Grid_opacity;


// FloatParameter:4
	float n_out4p0 = Dither_size;


	float n_out32p0;
// Expression:32
	n_out32p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out32p0 = n_out33p0 - DITHER_THRESHOLDS[index];
	}


// Step:31
	float n_in31p0 = 0.00000;
	float n_out31p0 = step(n_in31p0, n_out32p0);


// Mix:35
	float n_in35p0 = 0.00000;
	float n_out35p0 = mix(n_in35p0, n_out24p0.x, n_out31p0);


// Mix:26
	vec3 n_out26p0 = mix(n_out22p0, vec3(n_out36p0.xyz), vec3(n_out35p0));


	vec4 n_out38p0;
// Texture2D:38
	n_out38p0 = texture(Main_light, UV);


// FloatFunc:47
	float n_out47p0 = 1.0 - n_out38p0.x;


// FloatConstant:45
	float n_out45p0 = 1.079000;


	float n_out44p0;
// Expression:44
	n_out44p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out44p0 = n_out45p0 - DITHER_THRESHOLDS[index];
	}


// Step:46
	float n_out46p0 = step(n_out47p0, n_out44p0);


// Mix:43
	float n_in43p2 = 0.50000;
	float n_out43p0 = mix(n_out46p0, n_out38p0.x, n_in43p2);


// Mix:42
	vec3 n_out42p0 = mix(vec3(n_out41p0.xyz), n_out26p0, vec3(n_out43p0));


	float n_out49p0;
// Expression:49
	n_out49p0 = 0.0;
	{
		float luminance = 0.299 * n_out42p0.x + 0.587 * n_out42p0.y + 0.114 * n_out42p0.z;
		n_out49p0 = luminance;
	}


// Texture2D:50
	vec4 n_out50p0 = texture(tex_frg_50, vec2(n_out49p0));


// FloatParameter:51
	float n_out51p0 = Night;


// Mix:48
	vec4 n_out48p0 = mix(vec4(n_out42p0, 0.0), n_out50p0, vec4(n_out51p0));


// FloatParameter:8
	float n_out8p0 = Opacity;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out3p0 = n_out8p0 - DITHER_THRESHOLDS[index];
	}


// Step:2
	float n_in2p0 = 0.00000;
	float n_out2p0 = step(n_in2p0, n_out3p0);


// Output:0
	COLOR.rgb = vec3(n_out48p0.xyz);
	COLOR.a = n_out2p0;


}
"
graph_offset = Vector2(-106.267, 152.689)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1380, 580)
nodes/fragment/2/node = SubResource("VisualShaderNodeStep_bvl1s")
nodes/fragment/2/position = Vector2(40, 1400)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_obj6x")
nodes/fragment/3/position = Vector2(-1220, 1740)
nodes/fragment/3/size = Vector2(724.789, 654.559)
nodes/fragment/3/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/3/output_ports = "0,0,Dither_Node;"
nodes/fragment/3/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_17orm")
nodes/fragment/4/position = Vector2(-3860, 2100)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_jd15a")
nodes/fragment/8/position = Vector2(-1600, 1420)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture2DParameter_dltq7")
nodes/fragment/13/position = Vector2(-2340, -1620)
nodes/fragment/14/node = SubResource("VisualShaderNodeTexture_gx827")
nodes/fragment/14/position = Vector2(-1800, -1420)
nodes/fragment/15/node = SubResource("VisualShaderNodeMix_sy8vf")
nodes/fragment/15/position = Vector2(-1120, -600)
nodes/fragment/16/node = SubResource("VisualShaderNodeTexture2DParameter_fk757")
nodes/fragment/16/position = Vector2(-2040, -740)
nodes/fragment/17/node = SubResource("VisualShaderNodeTexture_6arbr")
nodes/fragment/17/position = Vector2(-1520, -580)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorConstant_3skvv")
nodes/fragment/19/position = Vector2(-1240, -880)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_jfceh")
nodes/fragment/20/position = Vector2(-1980, -340)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture_rek5y")
nodes/fragment/21/position = Vector2(-1460, -180)
nodes/fragment/22/node = SubResource("VisualShaderNodeMix_5xyb1")
nodes/fragment/22/position = Vector2(-860, -260)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorConstant_jagh6")
nodes/fragment/23/position = Vector2(-1080, -240)
nodes/fragment/24/node = SubResource("VisualShaderNodeTexture_4twgq")
nodes/fragment/24/position = Vector2(-1780, 220)
nodes/fragment/25/node = SubResource("VisualShaderNodeTexture2DParameter_ed7a0")
nodes/fragment/25/position = Vector2(-2340, 60)
nodes/fragment/26/node = SubResource("VisualShaderNodeMix_khf74")
nodes/fragment/26/position = Vector2(-740, 220)
nodes/fragment/28/node = SubResource("VisualShaderNodeTexture_yrd1h")
nodes/fragment/28/position = Vector2(-2320, 2480)
nodes/fragment/29/node = SubResource("VisualShaderNodeTexture2DParameter_y5fc4")
nodes/fragment/29/position = Vector2(-2800, 2420)
nodes/fragment/31/node = SubResource("VisualShaderNodeStep_eidok")
nodes/fragment/31/position = Vector2(-1740, 460)
nodes/fragment/32/node = SubResource("VisualShaderNodeExpression_basxs")
nodes/fragment/32/position = Vector2(-3480, 1140)
nodes/fragment/32/size = Vector2(724.789, 654.559)
nodes/fragment/32/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/32/output_ports = "0,0,Dither_Node;"
nodes/fragment/32/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/33/node = SubResource("VisualShaderNodeFloatParameter_tpwxd")
nodes/fragment/33/position = Vector2(-3960, 1120)
nodes/fragment/35/node = SubResource("VisualShaderNodeMix_e7auf")
nodes/fragment/35/position = Vector2(-1200, 360)
nodes/fragment/36/node = SubResource("VisualShaderNodeColorParameter_kucqf")
nodes/fragment/36/position = Vector2(-1340, 40)
nodes/fragment/37/node = SubResource("VisualShaderNodeTexture2DParameter_t8w82")
nodes/fragment/37/position = Vector2(-1940, 860)
nodes/fragment/38/node = SubResource("VisualShaderNodeTexture_t7nk2")
nodes/fragment/38/position = Vector2(-1440, 840)
nodes/fragment/41/node = SubResource("VisualShaderNodeColorConstant_gqi21")
nodes/fragment/41/position = Vector2(-440, 360)
nodes/fragment/42/node = SubResource("VisualShaderNodeMix_lh7ax")
nodes/fragment/42/position = Vector2(-440, 540)
nodes/fragment/43/node = SubResource("VisualShaderNodeMix_b5mkh")
nodes/fragment/43/position = Vector2(-480, 880)
nodes/fragment/44/node = SubResource("VisualShaderNodeExpression_st6ci")
nodes/fragment/44/position = Vector2(-1600, 1220)
nodes/fragment/44/size = Vector2(120, 180)
nodes/fragment/44/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/44/output_ports = "0,0,Dither_Node;"
nodes/fragment/44/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/45/node = SubResource("VisualShaderNodeFloatConstant_153s3")
nodes/fragment/45/position = Vector2(-1880, 1200)
nodes/fragment/46/node = SubResource("VisualShaderNodeStep_620r6")
nodes/fragment/46/position = Vector2(-947.902, 1062.83)
nodes/fragment/47/node = SubResource("VisualShaderNodeFloatFunc_gfl36")
nodes/fragment/47/position = Vector2(-1300, 1080)
nodes/fragment/48/node = SubResource("VisualShaderNodeMix_2cdtv")
nodes/fragment/48/position = Vector2(500, 720)
nodes/fragment/49/node = SubResource("VisualShaderNodeExpression_eo8rc")
nodes/fragment/49/position = Vector2(-40, 240)
nodes/fragment/49/size = Vector2(620, 200)
nodes/fragment/49/input_ports = "0,4,color;"
nodes/fragment/49/output_ports = "0,0,grey_value;"
nodes/fragment/49/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/50/node = SubResource("VisualShaderNodeTexture_oocjf")
nodes/fragment/50/position = Vector2(840, 280)
nodes/fragment/51/node = SubResource("VisualShaderNodeFloatParameter_2mokm")
nodes/fragment/51/position = Vector2(40, 820)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 1, 4, 0, 3, 1, 8, 0, 3, 0, 2, 0, 0, 1, 13, 0, 14, 2, 16, 0, 17, 2, 17, 0, 15, 2, 19, 0, 15, 1, 20, 0, 21, 2, 21, 0, 22, 2, 23, 0, 22, 1, 25, 0, 24, 2, 29, 0, 28, 2, 4, 0, 32, 1, 33, 0, 32, 0, 31, 0, 35, 2, 24, 0, 35, 1, 32, 0, 31, 1, 37, 0, 38, 2, 36, 0, 26, 1, 15, 0, 22, 0, 35, 0, 26, 2, 22, 0, 26, 0, 14, 0, 15, 0, 41, 0, 42, 0, 26, 0, 42, 1, 4, 0, 44, 1, 45, 0, 44, 0, 47, 0, 46, 0, 44, 0, 46, 1, 38, 0, 47, 0, 46, 0, 43, 0, 43, 0, 42, 2, 38, 0, 43, 1, 49, 0, 50, 0, 42, 0, 49, 0, 50, 0, 48, 1, 42, 0, 48, 0, 51, 0, 48, 2, 48, 0, 0, 0)
