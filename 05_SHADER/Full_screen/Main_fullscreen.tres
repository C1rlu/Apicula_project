[gd_resource type="VisualShader" load_steps=31 format=3 uid="uid://b8pie7pbqwtks"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_j3djv"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_hiaqc"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_dltq7"]
parameter_name = "Main"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gx827"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_sy8vf"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_fk757"]
parameter_name = "Foam"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6arbr"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_3skvv"]
constant = Color(0.258824, 0.517647, 0.447059, 1)

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_bvl1s"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_jfceh"]
parameter_name = "Sonar"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_rek5y"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_5xyb1"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_jagh6"]
constant = Color(0.667877, 0.529428, 0.363048, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_4twgq"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ed7a0"]
parameter_name = "Grid"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_khf74"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_vnngf"]
constant = Color(0.667877, 0.529428, 0.363048, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_yrd1h"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_y5fc4"]
parameter_name = "Sky"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_obj6x"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_m15y4"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_eidok"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_basxs"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_tpwxd"]
parameter_name = "Grid_opacity"
hint = 1
max = 0.25
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_e7auf"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_17orm"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_peg5k"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ynw8p"]
constant = Color(0.99, 0.796455, 0.4851, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jd15a"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_gec3r"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Main;
uniform sampler2D Foam;
uniform sampler2D Sonar;
uniform sampler2D Grid;
uniform float Grid_opacity : hint_range(0, 0.25) = 0.25;
global uniform float Dither_size;
uniform sampler2D Sky;
global uniform bool isGray;
uniform float Opacity : hint_range(0, 1) = 0.5;



void fragment() {
	vec4 n_out14p0;
// Texture2D:14
	n_out14p0 = texture(Main, UV);


// ColorConstant:19
	vec4 n_out19p0 = vec4(0.258824, 0.517647, 0.447059, 1.000000);


	vec4 n_out17p0;
// Texture2D:17
	n_out17p0 = texture(Foam, UV);


// Mix:15
	vec3 n_out15p0 = mix(vec3(n_out14p0.xyz), vec3(n_out19p0.xyz), vec3(n_out17p0.xyz));


// ColorConstant:23
	vec4 n_out23p0 = vec4(0.667877, 0.529428, 0.363048, 1.000000);


	vec4 n_out21p0;
// Texture2D:21
	n_out21p0 = texture(Sonar, UV);


// Mix:22
	vec3 n_out22p0 = mix(n_out15p0, vec3(n_out23p0.xyz), vec3(n_out21p0.xyz));


// ColorConstant:27
	vec4 n_out27p0 = vec4(0.667877, 0.529428, 0.363048, 1.000000);


	vec4 n_out24p0;
// Texture2D:24
	n_out24p0 = texture(Grid, UV);


// FloatParameter:33
	float n_out33p0 = Grid_opacity;


// FloatParameter:4
	float n_out4p0 = Dither_size;


	float n_out32p0;
// Expression:32
	n_out32p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out32p0 = n_out33p0 - DITHER_THRESHOLDS[index];
	}


// Step:31
	float n_in31p0 = 0.00000;
	float n_out31p0 = step(n_in31p0, n_out32p0);


// Mix:35
	float n_in35p0 = 0.00000;
	float n_out35p0 = mix(n_in35p0, n_out24p0.x, n_out31p0);


// Mix:26
	vec3 n_out26p0 = mix(n_out22p0, vec3(n_out27p0.xyz), vec3(n_out35p0));


	vec4 n_out28p0;
// Texture2D:28
	n_out28p0 = texture(Sky, UV);


// Mix:30
	vec3 n_out30p0 = mix(n_out26p0, vec3(n_out28p0.xyz), vec3(n_out28p0.xyz));


// ColorConstant:7
	vec4 n_out7p0 = vec4(0.990000, 0.796455, 0.485100, 1.000000);


	float n_out9p0;
// Expression:9
	n_out9p0 = 0.0;
	{
		float luminance = 0.299 * n_out30p0.x + 0.587 * n_out30p0.y + 0.114 * n_out30p0.z;
		n_out9p0 = luminance;
	}


// Mix:5
	vec3 n_in5p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out5p0 = mix(n_in5p0, vec3(n_out7p0.xyz), vec3(n_out9p0));


// BooleanParameter:12
	bool n_out12p0 = isGray;


// Mix:11
	vec3 n_out11p0 = mix(n_out30p0, n_out5p0, vec3(n_out12p0 ? 1.0 : 0.0));


// FloatParameter:8
	float n_out8p0 = Opacity;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out3p0 = n_out8p0 - DITHER_THRESHOLDS[index];
	}


// Step:2
	float n_in2p0 = 0.00000;
	float n_out2p0 = step(n_in2p0, n_out3p0);


// Output:0
	COLOR.rgb = n_out11p0;
	COLOR.a = n_out2p0;


}
"
graph_offset = Vector2(-1100.45, 336.683)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(920, 600)
nodes/fragment/2/node = SubResource("VisualShaderNodeStep_bvl1s")
nodes/fragment/2/position = Vector2(40, 1400)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_obj6x")
nodes/fragment/3/position = Vector2(-1220, 1740)
nodes/fragment/3/size = Vector2(724.789, 654.559)
nodes/fragment/3/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/3/output_ports = "0,0,Dither_Node;"
nodes/fragment/3/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_17orm")
nodes/fragment/4/position = Vector2(-2180, 1940)
nodes/fragment/5/node = SubResource("VisualShaderNodeMix_peg5k")
nodes/fragment/5/position = Vector2(980, -1100)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_ynw8p")
nodes/fragment/7/position = Vector2(760, -1060)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_jd15a")
nodes/fragment/8/position = Vector2(-1600, 1420)
nodes/fragment/9/node = SubResource("VisualShaderNodeExpression_gec3r")
nodes/fragment/9/position = Vector2(-60, -840)
nodes/fragment/9/size = Vector2(620, 200)
nodes/fragment/9/input_ports = "0,4,color;"
nodes/fragment/9/output_ports = "0,0,grey_value;"
nodes/fragment/9/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_j3djv")
nodes/fragment/11/position = Vector2(600, -560)
nodes/fragment/12/node = SubResource("VisualShaderNodeBooleanParameter_hiaqc")
nodes/fragment/12/position = Vector2(-520, -620)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture2DParameter_dltq7")
nodes/fragment/13/position = Vector2(-1920, -1120)
nodes/fragment/14/node = SubResource("VisualShaderNodeTexture_gx827")
nodes/fragment/14/position = Vector2(-1380, -920)
nodes/fragment/15/node = SubResource("VisualShaderNodeMix_sy8vf")
nodes/fragment/15/position = Vector2(-1120, -600)
nodes/fragment/16/node = SubResource("VisualShaderNodeTexture2DParameter_fk757")
nodes/fragment/16/position = Vector2(-2040, -740)
nodes/fragment/17/node = SubResource("VisualShaderNodeTexture_6arbr")
nodes/fragment/17/position = Vector2(-1520, -580)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorConstant_3skvv")
nodes/fragment/19/position = Vector2(-1360, -680)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_jfceh")
nodes/fragment/20/position = Vector2(-1980, -340)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture_rek5y")
nodes/fragment/21/position = Vector2(-1460, -180)
nodes/fragment/22/node = SubResource("VisualShaderNodeMix_5xyb1")
nodes/fragment/22/position = Vector2(-860, -260)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorConstant_jagh6")
nodes/fragment/23/position = Vector2(-1080, -240)
nodes/fragment/24/node = SubResource("VisualShaderNodeTexture_4twgq")
nodes/fragment/24/position = Vector2(-1960, 220)
nodes/fragment/25/node = SubResource("VisualShaderNodeTexture2DParameter_ed7a0")
nodes/fragment/25/position = Vector2(-2340, 60)
nodes/fragment/26/node = SubResource("VisualShaderNodeMix_khf74")
nodes/fragment/26/position = Vector2(-660, 220)
nodes/fragment/27/node = SubResource("VisualShaderNodeColorConstant_vnngf")
nodes/fragment/27/position = Vector2(-1040, 40)
nodes/fragment/28/node = SubResource("VisualShaderNodeTexture_yrd1h")
nodes/fragment/28/position = Vector2(-1180, 800)
nodes/fragment/29/node = SubResource("VisualShaderNodeTexture2DParameter_y5fc4")
nodes/fragment/29/position = Vector2(-1700, 640)
nodes/fragment/30/node = SubResource("VisualShaderNodeMix_m15y4")
nodes/fragment/30/position = Vector2(-500, 760)
nodes/fragment/31/node = SubResource("VisualShaderNodeStep_eidok")
nodes/fragment/31/position = Vector2(-1480, 400)
nodes/fragment/32/node = SubResource("VisualShaderNodeExpression_basxs")
nodes/fragment/32/position = Vector2(-2700, 580)
nodes/fragment/32/size = Vector2(724.789, 654.559)
nodes/fragment/32/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/32/output_ports = "0,0,Dither_Node;"
nodes/fragment/32/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/33/node = SubResource("VisualShaderNodeFloatParameter_tpwxd")
nodes/fragment/33/position = Vector2(-3180, 560)
nodes/fragment/35/node = SubResource("VisualShaderNodeMix_e7auf")
nodes/fragment/35/position = Vector2(-1200, 360)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 1, 4, 0, 3, 1, 9, 0, 5, 2, 7, 0, 5, 1, 8, 0, 3, 0, 2, 0, 0, 1, 12, 0, 11, 2, 5, 0, 11, 1, 13, 0, 14, 2, 14, 0, 15, 0, 16, 0, 17, 2, 17, 0, 15, 2, 19, 0, 15, 1, 20, 0, 21, 2, 21, 0, 22, 2, 15, 0, 22, 0, 23, 0, 22, 1, 25, 0, 24, 2, 27, 0, 26, 1, 22, 0, 26, 0, 29, 0, 28, 2, 28, 0, 30, 2, 26, 0, 30, 0, 30, 0, 9, 0, 30, 0, 11, 0, 4, 0, 32, 1, 33, 0, 32, 0, 11, 0, 0, 0, 35, 0, 26, 2, 31, 0, 35, 2, 24, 0, 35, 1, 32, 0, 31, 1, 28, 0, 30, 1)
