[gd_resource type="ShaderMaterial" load_steps=52 format=3 uid="uid://bx8lxok1s6d6y"]

[ext_resource type="Shader" uid="uid://btl0hgwwfslhj" path="res://08_SUBSCENES/Elements/Magnetable_test/00_SHADER/Debris_scanner_sh.tres" id="1_4ekak"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0wseq"]
resource_local_to_scene = true
render_priority = 0
shader = ExtResource("1_4ekak")
shader_parameter/Color = Color(0.788235, 0.588235, 0.345098, 1)
shader_parameter/Opacity = 0.0

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_x8bbu"]
parameter_name = "Subscene_Darker_color"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_0uhq8"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_kl830"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_ye2pp"]
varying_name = "isgray"

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_lnu1w"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_tfol2"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cc7g5"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cpg3x"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_uhbrt"]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_hv1xr"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_rebia"]
parameter_name = "Subscene_light_color"
qualifier = 1
default_value = Color(0.401313, 0.399257, 0, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4l2lp"]
default_input_values = [0, 0.0, 1, 0.665]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h0g0c"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_o1lmq"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ofdyb"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_y6q50"]
constant = 1.156

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_05a0x"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_pxga4"]
default_input_values = [0, 0.0, 1, 0.125, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jc4v8"]
parameter_name = "Distance_power"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_n6ode"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_v0a08"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_mcb8u"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_7m1m8"]
parameter_name = "Distance_light"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_48two"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_addpa"]
parameter_name = "active_Dither"
qualifier = 1

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_dsg11"]

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_qqyr0"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_82c58"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_0pasc"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_2hv4q"]
varying_name = "isgray"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_kij10"]
constant = Color(0.124351, 0.210341, 0.230185, 1)

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_yec26"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hwj2m"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_6t8lb"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_sglaf"]
constant = 10.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_q8gnb"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wfg0f"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_qet0x"]
parameter_name = "mirror_wave_speed"
qualifier = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_iyuh2"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_kkt11"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3rg8c"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5k4a7"]
constant = 0.5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_f7dvl"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_fsio7"]
operator = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_75nlw"]
noise_type = 2
frequency = 0.3
fractal_weighted_strength = 1.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_xij0p"]
bump_strength = 27.2
noise = SubResource("FastNoiseLite_75nlw")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_8ln3i"]
texture = SubResource("NoiseTexture2D_xij0p")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_am3fg"]
default_input_values = [0, 0.0, 1, 0.075]
operator = 2

[sub_resource type="VisualShader" id="VisualShader_nk1g7"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, shadows_disabled, debug_shadow_splits;


// Varyings
varying float isgray;

global uniform float mirror_wave_speed;
uniform sampler2D tex_vtx_8;
global uniform vec4 Subscene_Darker_color : source_color;
global uniform bool isGray;
uniform float Distance_power = 0.25;
global uniform bool active_Dither;
global uniform float Dither_size;
global uniform vec4 Subscene_light_color : source_color;
uniform float Distance_light;



void vertex() {
// Input:4
	float n_out4p0 = TIME;


// FloatConstant:5
	float n_out5p0 = 0.500000;


// FloatParameter:14
	float n_out14p0 = mirror_wave_speed;


// FloatOp:13
	float n_out13p0 = n_out5p0 * n_out14p0;


// FloatOp:7
	float n_out7p0 = n_out4p0 * n_out13p0;


// UVFunc:6
	vec2 n_in6p1 = vec2(1.00000, 1.00000);
	vec2 n_out6p0 = vec2(n_out7p0) * n_in6p1 + UV;


// Texture2D:8
	vec4 n_out8p0 = texture(tex_vtx_8, n_out6p0);


// FloatConstant:11
	float n_out11p0 = 10.000000;


// FloatOp:12
	float n_out12p0 = n_out11p0 * n_out14p0;


// FloatOp:9
	float n_out9p0 = n_out8p0.x * n_out12p0;


// Input:2
	vec3 n_out2p0 = VERTEX;


// VectorOp:3
	vec3 n_out3p0 = vec3(n_out9p0) + n_out2p0;


// Output:0
	VERTEX = n_out3p0;


}

void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Subscene_Darker_color;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


// BooleanParameter:6
	bool n_out6p0 = isGray;


// VaryingSetter:5
	isgray = (n_out6p0 ? 1.0 : 0.0);


}

void light() {
// ColorConstant:51
	vec4 n_out51p0 = vec4(0.124351, 0.210341, 0.230185, 1.000000);


// Input:31
	vec3 n_out31p0 = ALBEDO;


// FloatParameter:33
	float n_out33p0 = Distance_power;


// BooleanParameter:45
	bool n_out45p0 = active_Dither;


// FloatConstant:3
	float n_out3p0 = 1.156000;


// FloatParameter:44
	float n_out44p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out44p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:7
	vec3 n_out7p0 = NORMAL;


// Input:11
	vec3 n_out11p0 = LIGHT;


// DotProduct:8
	float n_out8p0 = dot(n_out7p0, n_out11p0);


// Clamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out8p0, n_in10p1, n_in10p2);


// Input:27
	float n_out27p0 = ATTENUATION;


// FloatOp:28
	float n_in28p1 = 1.00000;
	float n_out28p0 = n_out27p0 * n_in28p1;


// VectorOp:29
	vec3 n_out29p0 = vec3(n_out10p0) * vec3(n_out28p0);


// Step:6
	float n_out6p0 = step(n_out4p0, n_out29p0.x);


	float n_out46p0;
// Switch:46
	n_out46p0 = mix(n_out29p0.x, n_out6p0, float(n_out45p0));


// Mix:32
	float n_in32p0 = 0.00000;
	float n_out32p0 = mix(n_in32p0, n_out33p0, n_out46p0);


// Mix:16
	vec3 n_in16p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out16p0 = mix(n_in16p0, n_out31p0, vec3(n_out32p0));


// ColorParameter:25
	vec4 n_out25p0 = Subscene_light_color;


// Input:12
	float n_out12p0 = ATTENUATION;


// FloatParameter:43
	float n_out43p0 = Distance_light;


// FloatOp:26
	float n_out26p0 = n_out12p0 * n_out43p0;


// VectorOp:13
	vec3 n_out13p0 = vec3(n_out10p0) * vec3(n_out26p0);


// Step:34
	float n_out34p0 = step(n_out4p0, n_out13p0.x);


	float n_out47p0;
// Switch:47
	n_out47p0 = mix(n_out13p0.x, n_out34p0, float(n_out45p0));


// Mix:37
	vec3 n_out37p0 = mix(n_out16p0, vec3(n_out25p0.xyz), vec3(n_out47p0));


// Output:0
	DIFFUSE_LIGHT = vec3(n_out51p0.xyz);
	SPECULAR_LIGHT = n_out37p0;


}
"
flags/shadows_disabled = true
flags/debug_shadow_splits = true
varyings/isgray = "1,0"
nodes/vertex/0/position = Vector2(480, 160)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_iyuh2")
nodes/vertex/2/position = Vector2(-220, 340)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_kkt11")
nodes/vertex/3/position = Vector2(60, 120)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_3rg8c")
nodes/vertex/4/position = Vector2(-1300, 140)
nodes/vertex/5/node = SubResource("VisualShaderNodeFloatConstant_5k4a7")
nodes/vertex/5/position = Vector2(-1340, 320)
nodes/vertex/6/node = SubResource("VisualShaderNodeUVFunc_f7dvl")
nodes/vertex/6/position = Vector2(-860, 280)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatOp_fsio7")
nodes/vertex/7/position = Vector2(-1060, 320)
nodes/vertex/8/node = SubResource("VisualShaderNodeTexture_8ln3i")
nodes/vertex/8/position = Vector2(-580, -40)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatOp_am3fg")
nodes/vertex/9/position = Vector2(-140, 20)
nodes/vertex/11/node = SubResource("VisualShaderNodeFloatConstant_sglaf")
nodes/vertex/11/position = Vector2(-380, 160)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatOp_q8gnb")
nodes/vertex/12/position = Vector2(-200, 200)
nodes/vertex/13/node = SubResource("VisualShaderNodeFloatOp_wfg0f")
nodes/vertex/13/position = Vector2(-1140, 500)
nodes/vertex/14/node = SubResource("VisualShaderNodeFloatParameter_qet0x")
nodes/vertex/14/position = Vector2(-1460, 780)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 1, 4, 0, 7, 0, 7, 0, 6, 2, 9, 0, 3, 0, 11, 0, 12, 0, 12, 0, 9, 1, 5, 0, 13, 0, 13, 0, 7, 1, 6, 0, 8, 0, 8, 0, 9, 0, 3, 0, 0, 0, 14, 0, 13, 1, 14, 0, 12, 1)
nodes/fragment/0/position = Vector2(900, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_x8bbu")
nodes/fragment/2/position = Vector2(-380, -100)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_0uhq8")
nodes/fragment/3/position = Vector2(-80, -560)
nodes/fragment/3/size = Vector2(620, 200)
nodes/fragment/3/input_ports = "0,4,color;"
nodes/fragment/3/output_ports = "0,0,grey_value;"
nodes/fragment/3/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_kl830")
nodes/fragment/4/position = Vector2(624.822, -192.758)
nodes/fragment/5/node = SubResource("VisualShaderNodeVaryingSetter_ye2pp")
nodes/fragment/5/position = Vector2(318.765, -35.8971)
nodes/fragment/6/node = SubResource("VisualShaderNodeBooleanParameter_lnu1w")
nodes/fragment/6/position = Vector2(-61.6879, -200.371)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 1, 6, 0, 4, 2, 6, 0, 5, 0, 2, 0, 3, 0, 2, 0, 4, 0, 2, 0, 0, 0)
nodes/light/0/position = Vector2(1240, 580)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_y6q50")
nodes/light/3/position = Vector2(-2160, 840)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_mcb8u")
nodes/light/4/position = Vector2(-1920, 800)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/6/node = SubResource("VisualShaderNodeStep_yec26")
nodes/light/6/position = Vector2(-1020, 320)
nodes/light/7/node = SubResource("VisualShaderNodeInput_hwj2m")
nodes/light/7/position = Vector2(-2900, 140)
nodes/light/8/node = SubResource("VisualShaderNodeDotProduct_6t8lb")
nodes/light/8/position = Vector2(-2480, 260)
nodes/light/10/node = SubResource("VisualShaderNodeClamp_tfol2")
nodes/light/10/position = Vector2(-2280, 140)
nodes/light/11/node = SubResource("VisualShaderNodeInput_cc7g5")
nodes/light/11/position = Vector2(-2900, 440)
nodes/light/12/node = SubResource("VisualShaderNodeInput_cpg3x")
nodes/light/12/position = Vector2(-2540, 560)
nodes/light/13/node = SubResource("VisualShaderNodeVectorOp_uhbrt")
nodes/light/13/position = Vector2(-1980, 420)
nodes/light/16/node = SubResource("VisualShaderNodeMix_hv1xr")
nodes/light/16/position = Vector2(-40, -20)
nodes/light/25/node = SubResource("VisualShaderNodeColorParameter_rebia")
nodes/light/25/position = Vector2(-160, 480)
nodes/light/26/node = SubResource("VisualShaderNodeFloatOp_4l2lp")
nodes/light/26/position = Vector2(-2160, 540)
nodes/light/27/node = SubResource("VisualShaderNodeInput_h0g0c")
nodes/light/27/position = Vector2(-2027.75, 245.994)
nodes/light/28/node = SubResource("VisualShaderNodeFloatOp_o1lmq")
nodes/light/28/position = Vector2(-1647.75, 225.994)
nodes/light/29/node = SubResource("VisualShaderNodeVectorOp_ofdyb")
nodes/light/29/position = Vector2(-1467.75, 105.994)
nodes/light/31/node = SubResource("VisualShaderNodeInput_05a0x")
nodes/light/31/position = Vector2(-460, -140)
nodes/light/32/node = SubResource("VisualShaderNodeMix_pxga4")
nodes/light/32/position = Vector2(-180, 180)
nodes/light/33/node = SubResource("VisualShaderNodeFloatParameter_jc4v8")
nodes/light/33/position = Vector2(-820, -20)
nodes/light/34/node = SubResource("VisualShaderNodeStep_n6ode")
nodes/light/34/position = Vector2(-960, 680)
nodes/light/37/node = SubResource("VisualShaderNodeMix_v0a08")
nodes/light/37/position = Vector2(640, 640)
nodes/light/43/node = SubResource("VisualShaderNodeFloatParameter_7m1m8")
nodes/light/43/position = Vector2(-2460, 660)
nodes/light/44/node = SubResource("VisualShaderNodeFloatParameter_48two")
nodes/light/44/position = Vector2(-2260, 960)
nodes/light/45/node = SubResource("VisualShaderNodeBooleanParameter_addpa")
nodes/light/45/position = Vector2(-1080, 1100)
nodes/light/46/node = SubResource("VisualShaderNodeSwitch_dsg11")
nodes/light/46/position = Vector2(-620, 440)
nodes/light/47/node = SubResource("VisualShaderNodeSwitch_qqyr0")
nodes/light/47/position = Vector2(-528.88, 880.925)
nodes/light/48/node = SubResource("VisualShaderNodeExpression_82c58")
nodes/light/48/position = Vector2(760, -220)
nodes/light/48/size = Vector2(620, 200)
nodes/light/48/input_ports = "0,4,color;"
nodes/light/48/output_ports = "0,0,grey_value;"
nodes/light/48/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/light/49/node = SubResource("VisualShaderNodeMix_0pasc")
nodes/light/49/position = Vector2(1060, 260)
nodes/light/50/node = SubResource("VisualShaderNodeVaryingGetter_2hv4q")
nodes/light/50/position = Vector2(460, 320)
nodes/light/51/node = SubResource("VisualShaderNodeColorConstant_kij10")
nodes/light/51/position = Vector2(980, 700)
nodes/light/connections = PackedInt32Array(10, 0, 13, 0, 3, 0, 4, 0, 12, 0, 26, 0, 26, 0, 13, 1, 10, 0, 29, 0, 32, 0, 16, 2, 33, 0, 32, 1, 25, 0, 37, 1, 27, 0, 28, 0, 28, 0, 29, 1, 8, 0, 10, 0, 7, 0, 8, 0, 29, 0, 6, 1, 13, 0, 34, 1, 11, 0, 8, 1, 43, 0, 26, 1, 44, 0, 4, 1, 4, 0, 6, 0, 4, 0, 34, 0, 45, 0, 46, 0, 6, 0, 46, 1, 46, 0, 32, 2, 29, 0, 46, 2, 34, 0, 47, 1, 13, 0, 47, 2, 45, 0, 47, 0, 47, 0, 37, 2, 48, 0, 49, 1, 16, 0, 48, 0, 50, 0, 49, 2, 16, 0, 49, 0, 37, 0, 0, 1, 16, 0, 37, 0, 31, 0, 16, 1, 51, 0, 0, 0)

[resource]
resource_local_to_scene = true
render_priority = 0
next_pass = SubResource("ShaderMaterial_0wseq")
shader = SubResource("VisualShader_nk1g7")
shader_parameter/Distance_power = 0.25
shader_parameter/Distance_light = 0.225
