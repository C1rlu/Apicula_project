[gd_resource type="ShaderMaterial" load_steps=27 format=3 uid="uid://c4fuaxiqyxou"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_dmesu"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_pux4m"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_vmarl"]
constant = 1.243

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_cc6o2"]
parameter_name = "ColorParameter2"
default_value_enabled = true
default_value = Color(0.027451, 0.14902, 0.156863, 1)

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_bnj8w"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_23jko"]
size = Vector2(634.014, 470.339)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ntxna"]
parameter_name = "Opacity"
hint = 1
step = 0.0
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_p0j5g"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_ejvvb"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_1lfus"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_k4pir"]
parameter_name = "ColorParameter3"
default_value_enabled = true
default_value = Color(0.027451, 0.14902, 0.156863, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2by48"]
parameter_name = "Speed"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_qgnlq"]
constant = 10.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_dosfa"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_gcg7d"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kb5dy"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xqybf"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_f4gm4"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_2x686"]
constant = 0.5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_cauql"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ygavj"]
operator = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_75nlw"]
noise_type = 2
frequency = 0.3
fractal_weighted_strength = 1.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_1d3jq"]
bump_strength = 27.2
noise = SubResource("FastNoiseLite_75nlw")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_rerd2"]
texture = SubResource("NoiseTexture2D_1d3jq")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ae2mf"]
default_input_values = [0, 0.0, 1, 0.075]
operator = 2

[sub_resource type="VisualShader" id="VisualShader_uagv5"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform float Speed : hint_range(0, 1) = 0.5;
uniform sampler2D tex_vtx_8;
uniform vec4 ColorParameter3 : source_color = vec4(0.027451, 0.149020, 0.156863, 1.000000);



void vertex() {
// Input:4
	float n_out4p0 = TIME;


// FloatConstant:5
	float n_out5p0 = 0.500000;


// FloatParameter:10
	float n_out10p0 = Speed;


// FloatOp:13
	float n_out13p0 = n_out5p0 * n_out10p0;


// FloatOp:7
	float n_out7p0 = n_out4p0 * n_out13p0;


// UVFunc:6
	vec2 n_in6p1 = vec2(1.00000, 1.00000);
	vec2 n_out6p0 = vec2(n_out7p0) * n_in6p1 + UV;


// Texture2D:8
	vec4 n_out8p0 = texture(tex_vtx_8, n_out6p0);


// FloatConstant:11
	float n_out11p0 = 10.000000;


// FloatOp:12
	float n_out12p0 = n_out11p0 * n_out10p0;


// FloatOp:9
	float n_out9p0 = n_out8p0.x * n_out12p0;


// Input:2
	vec3 n_out2p0 = VERTEX;


// VectorOp:3
	vec3 n_out3p0 = vec3(n_out9p0) + n_out2p0;


// Output:0
	VERTEX = n_out3p0;


}

void fragment() {
// ColorParameter:9
	vec4 n_out9p0 = ColorParameter3;


// Output:0
	ALBEDO = vec3(n_out9p0.xyz);


}
"
graph_offset = Vector2(-609.29, -58.9606)
nodes/vertex/0/position = Vector2(400, 160)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_kb5dy")
nodes/vertex/2/position = Vector2(-260, 600)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_xqybf")
nodes/vertex/3/position = Vector2(20, 180)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_f4gm4")
nodes/vertex/4/position = Vector2(-1340, 200)
nodes/vertex/5/node = SubResource("VisualShaderNodeFloatConstant_2x686")
nodes/vertex/5/position = Vector2(-1380, 380)
nodes/vertex/6/node = SubResource("VisualShaderNodeUVFunc_cauql")
nodes/vertex/6/position = Vector2(-900, 340)
nodes/vertex/7/node = SubResource("VisualShaderNodeFloatOp_ygavj")
nodes/vertex/7/position = Vector2(-1100, 380)
nodes/vertex/8/node = SubResource("VisualShaderNodeTexture_rerd2")
nodes/vertex/8/position = Vector2(-620, 20)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatOp_ae2mf")
nodes/vertex/9/position = Vector2(-180, 80)
nodes/vertex/10/node = SubResource("VisualShaderNodeFloatParameter_2by48")
nodes/vertex/10/position = Vector2(-1220, 860)
nodes/vertex/11/node = SubResource("VisualShaderNodeFloatConstant_qgnlq")
nodes/vertex/11/position = Vector2(-420, 220)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatOp_dosfa")
nodes/vertex/12/position = Vector2(-240, 260)
nodes/vertex/13/node = SubResource("VisualShaderNodeFloatOp_gcg7d")
nodes/vertex/13/position = Vector2(-1180, 560)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 1, 4, 0, 7, 0, 7, 0, 6, 2, 9, 0, 3, 0, 11, 0, 12, 0, 10, 0, 12, 1, 12, 0, 9, 1, 5, 0, 13, 0, 10, 0, 13, 1, 13, 0, 7, 1, 6, 0, 8, 0, 8, 0, 9, 0, 3, 0, 0, 0)
nodes/fragment/0/position = Vector2(760, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_cc6o2")
nodes/fragment/2/position = Vector2(-900, -340)
nodes/fragment/3/node = SubResource("VisualShaderNodeFresnel_bnj8w")
nodes/fragment/3/position = Vector2(-960, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_23jko")
nodes/fragment/4/position = Vector2(-1180, 600)
nodes/fragment/4/size = Vector2(634.014, 470.339)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_ntxna")
nodes/fragment/5/position = Vector2(-2000, 380)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_p0j5g")
nodes/fragment/6/position = Vector2(-2020, 740)
nodes/fragment/7/node = SubResource("VisualShaderNodeStep_ejvvb")
nodes/fragment/7/position = Vector2(-440, 440)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_1lfus")
nodes/fragment/8/position = Vector2(-140, -40)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorParameter_k4pir")
nodes/fragment/9/position = Vector2(-540, -420)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_dmesu")
nodes/fragment/10/position = Vector2(408.189, -117.368)
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_pux4m")
nodes/fragment/11/position = Vector2(20, 180)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_vmarl")
nodes/fragment/12/position = Vector2(413.029, 266.768)
nodes/fragment/connections = PackedInt32Array(5, 0, 4, 0, 6, 0, 4, 1, 7, 0, 8, 2, 9, 0, 8, 0, 2, 0, 8, 1, 9, 0, 11, 0, 2, 0, 11, 1, 3, 0, 11, 2, 11, 0, 10, 1, 8, 0, 10, 0, 12, 0, 10, 2, 9, 0, 0, 0, 4, 0, 7, 1, 3, 0, 7, 0)
nodes/light/0/position = Vector2(2700, 1620)

[resource]
render_priority = 0
shader = SubResource("VisualShader_uagv5")
shader_parameter/Speed = 0.0
shader_parameter/ColorParameter3 = Color(0.65098, 0.466667, 0.239216, 1)
