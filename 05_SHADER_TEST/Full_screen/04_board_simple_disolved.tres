[gd_resource type="ShaderMaterial" load_steps=15 format=3 uid="uid://5qv6cc3a63nt"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_glvbg"]
constant = 1.0

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_6qxg5"]
constant = Color(0.99, 0.796455, 0.4851, 1)

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_lh7ub"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_erp7h"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nbt7f"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_nyijd"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_afy76"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_p724u"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_lygsj"]
function = 31

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_lhyu5"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_pq3rc"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_bbdki"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_pmh5o"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShader" id="VisualShader_wl38o"]
code = "shader_type canvas_item;
render_mode blend_mix;

global uniform bool isGray;
uniform float Opacity : hint_range(0, 1) = 0.5;
global uniform float Dither_size;



void fragment() {
	vec4 n_out15p0;
// Texture2D:15
	n_out15p0 = texture(TEXTURE, UV);


// ColorConstant:11
	vec4 n_out11p0 = vec4(0.990000, 0.796455, 0.485100, 1.000000);


	float n_out12p0;
// Expression:12
	n_out12p0 = 0.0;
	{
		float luminance = 0.299 * vec3(n_out15p0.xyz).x + 0.587 * vec3(n_out15p0.xyz).y + 0.114 * vec3(n_out15p0.xyz).z;
		n_out12p0 = luminance;
	}


// Mix:13
	vec3 n_in13p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out13p0 = mix(n_in13p0, vec3(n_out11p0.xyz), vec3(n_out12p0));


// BooleanParameter:16
	bool n_out16p0 = isGray;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out15p0.xyz), n_out13p0, vec3(n_out16p0 ? 1.0 : 0.0));


// FloatParameter:5
	float n_out5p0 = Opacity;


// FloatConstant:10
	float n_out10p0 = 1.000000;


// FloatParameter:6
	float n_out6p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out6p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out10p0 - DITHER_THRESHOLDS[index];
	}


// Step:2
	float n_out2p0 = step(n_out5p0, n_out4p0);


// FloatFunc:18
	float n_out18p0 = 1.0 - n_out2p0;


// Output:0
	COLOR.rgb = n_out17p0;
	COLOR.a = n_out18p0;


}
"
graph_offset = Vector2(-454.449, -112.47)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1080, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeStep_lhyu5")
nodes/fragment/2/position = Vector2(-220, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_pq3rc")
nodes/fragment/4/position = Vector2(-920, 560)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_bbdki")
nodes/fragment/5/position = Vector2(-780, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_pmh5o")
nodes/fragment/6/position = Vector2(-1400, 660)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatConstant_glvbg")
nodes/fragment/10/position = Vector2(-1280, 500)
nodes/fragment/11/node = SubResource("VisualShaderNodeColorConstant_6qxg5")
nodes/fragment/11/position = Vector2(660, -940)
nodes/fragment/12/node = SubResource("VisualShaderNodeExpression_lh7ub")
nodes/fragment/12/position = Vector2(-100, -860)
nodes/fragment/12/size = Vector2(620, 200)
nodes/fragment/12/input_ports = "0,4,color;"
nodes/fragment/12/output_ports = "0,0,grey_value;"
nodes/fragment/12/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_erp7h")
nodes/fragment/13/position = Vector2(880, -980)
nodes/fragment/14/node = SubResource("VisualShaderNodeInput_nbt7f")
nodes/fragment/14/position = Vector2(-880, -1040)
nodes/fragment/15/node = SubResource("VisualShaderNodeTexture_nyijd")
nodes/fragment/15/position = Vector2(-500, -840)
nodes/fragment/16/node = SubResource("VisualShaderNodeBooleanParameter_afy76")
nodes/fragment/16/position = Vector2(-620, -500)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_p724u")
nodes/fragment/17/position = Vector2(-20, -540)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatFunc_lygsj")
nodes/fragment/18/position = Vector2(166.69, 55.5841)
nodes/fragment/connections = PackedInt32Array(6, 0, 4, 1, 4, 0, 2, 1, 10, 0, 4, 0, 5, 0, 2, 0, 15, 0, 12, 0, 12, 0, 13, 2, 11, 0, 13, 1, 14, 0, 15, 2, 16, 0, 17, 2, 15, 0, 17, 0, 13, 0, 17, 1, 17, 0, 0, 0, 2, 0, 18, 0, 18, 0, 0, 1)

[resource]
shader = SubResource("VisualShader_wl38o")
shader_parameter/Opacity = 1.0
