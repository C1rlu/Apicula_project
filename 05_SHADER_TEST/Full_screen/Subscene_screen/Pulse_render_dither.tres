[gd_resource type="ShaderMaterial" load_steps=20 format=3 uid="uid://cb62q1hmv35nl"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h3hwq"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_i13uk"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_xamrm"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gwmx4"]
source = 5

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_vwvr0"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_h3u5e"]
default_input_values = [0, 0.03, 1, -1.275, 2, 0.3]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_7q3hw"]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_pajw5"]
default_input_values = [1, Vector2(1, 0.5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2wp62"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_73r32"]
default_input_values = [0, 0.0, 1, 0.001]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_gky2y"]
default_input_values = [0, 0.0, 1, 0.05]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_irdl3"]
parameter_name = "Dither_blue_noise_size"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_5bxgj"]
parameter_name = "BlueNoise"
qualifier = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ebxat"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cek6r"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_l3w6o"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_3fjmn"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_pseea"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_i0itl"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 ColorParameter : source_color;
global uniform float Dither_blue_noise_size;
global uniform sampler2D BlueNoise : repeat_enable;
uniform float Opacity : hint_range(0, 1) = 0.5;



void fragment() {
// ColorParameter:69
	vec4 n_out69p0 = ColorParameter;


// UVFunc:57
	vec2 n_in57p1 = vec2(1.00000, 0.50000);
	vec2 n_in57p2 = vec2(0.00000, 0.00000);
	vec2 n_out57p0 = (UV - n_in57p2) * n_in57p1 + n_in57p2;


// FloatParameter:67
	float n_out67p0 = Dither_blue_noise_size;


// Input:58
	float n_out58p0 = TIME;


// FloatOp:59
	float n_in59p1 = 0.00100;
	float n_out59p0 = n_out58p0 * n_in59p1;


// FloatOp:60
	float n_in60p1 = 0.05000;
	float n_out60p0 = n_out59p0 * n_in60p1;


// UVFunc:56
	vec2 n_out56p0 = (n_out57p0 - vec2(n_out60p0)) * vec2(n_out67p0) + vec2(n_out60p0);


	vec4 n_out48p0;
// Texture2D:48
	n_out48p0 = texture(BlueNoise, n_out56p0);


// FloatParameter:46
	float n_out46p0 = Opacity;


// Mix:50
	float n_in50p1 = -1.27500;
	float n_out50p0 = mix(n_out48p0.x, n_in50p1, n_out46p0);


	vec4 n_out41p0;
// Texture2D:41
	n_out41p0 = texture(TEXTURE, UV);


// FloatFunc:79
	float n_out79p0 = 1.0 - n_out41p0.x;


// Step:49
	float n_out49p0 = step(n_out50p0, n_out79p0);


// Output:0
	COLOR.rgb = vec3(n_out69p0.xyz);
	COLOR.a = n_out49p0;


}
"
graph_offset = Vector2(-621.447, -553.328)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1080, -340)
nodes/fragment/40/node = SubResource("VisualShaderNodeInput_h3hwq")
nodes/fragment/40/position = Vector2(-1440, -1760)
nodes/fragment/41/node = SubResource("VisualShaderNodeTexture_i13uk")
nodes/fragment/41/position = Vector2(-620, -1660)
nodes/fragment/46/node = SubResource("VisualShaderNodeFloatParameter_xamrm")
nodes/fragment/46/position = Vector2(220, -140)
nodes/fragment/48/node = SubResource("VisualShaderNodeTexture_gwmx4")
nodes/fragment/48/position = Vector2(-439.734, -887.617)
nodes/fragment/49/node = SubResource("VisualShaderNodeStep_vwvr0")
nodes/fragment/49/position = Vector2(200, -1080)
nodes/fragment/50/node = SubResource("VisualShaderNodeMix_h3u5e")
nodes/fragment/50/position = Vector2(320, -720)
nodes/fragment/56/node = SubResource("VisualShaderNodeUVFunc_7q3hw")
nodes/fragment/56/position = Vector2(-1180, -500)
nodes/fragment/57/node = SubResource("VisualShaderNodeUVFunc_pajw5")
nodes/fragment/57/position = Vector2(-1860, -960)
nodes/fragment/58/node = SubResource("VisualShaderNodeInput_2wp62")
nodes/fragment/58/position = Vector2(-2740, -400)
nodes/fragment/59/node = SubResource("VisualShaderNodeFloatOp_73r32")
nodes/fragment/59/position = Vector2(-2060, -520)
nodes/fragment/60/node = SubResource("VisualShaderNodeFloatOp_gky2y")
nodes/fragment/60/position = Vector2(-1620, -260)
nodes/fragment/67/node = SubResource("VisualShaderNodeFloatParameter_irdl3")
nodes/fragment/67/position = Vector2(-2640, -840)
nodes/fragment/68/node = SubResource("VisualShaderNodeTexture2DParameter_5bxgj")
nodes/fragment/68/position = Vector2(-560, 60)
nodes/fragment/69/node = SubResource("VisualShaderNodeColorParameter_ebxat")
nodes/fragment/69/position = Vector2(900, -1000)
nodes/fragment/76/node = SubResource("VisualShaderNodeFloatConstant_cek6r")
nodes/fragment/76/position = Vector2(-2400, 120)
nodes/fragment/77/node = SubResource("VisualShaderNodeExpression_l3w6o")
nodes/fragment/77/position = Vector2(-2100, 240)
nodes/fragment/77/size = Vector2(724.789, 654.559)
nodes/fragment/77/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/77/output_ports = "0,0,Dither_Node;"
nodes/fragment/77/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/78/node = SubResource("VisualShaderNodeFloatParameter_3fjmn")
nodes/fragment/78/position = Vector2(-2840, 220)
nodes/fragment/79/node = SubResource("VisualShaderNodeFloatFunc_pseea")
nodes/fragment/79/position = Vector2(-40, -1380)
nodes/fragment/connections = PackedInt32Array(40, 0, 41, 2, 50, 0, 49, 0, 58, 0, 59, 0, 59, 0, 60, 0, 57, 0, 56, 0, 60, 0, 56, 2, 56, 0, 48, 0, 46, 0, 50, 2, 68, 0, 48, 2, 49, 0, 0, 1, 76, 0, 77, 0, 78, 0, 77, 1, 48, 0, 50, 0, 67, 0, 56, 1, 41, 0, 79, 0, 79, 0, 49, 1, 69, 0, 0, 0)

[resource]
shader = SubResource("VisualShader_i0itl")
shader_parameter/ColorParameter = Color(1, 0.67451, 0.388235, 1)
shader_parameter/Opacity = 0.0
