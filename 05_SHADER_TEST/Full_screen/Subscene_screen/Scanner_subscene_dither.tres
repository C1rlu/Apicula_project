[gd_resource type="ShaderMaterial" load_steps=23 format=3 uid="uid://b1iqs8p4it3ni"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dj8vr"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_mhw1d"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_26ssp"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_1oo8g"]
constant = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ilc2n"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_5opgu"]
parameter_name = "Circle"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_atyix"]
source = 5

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_i2gji"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_rsloa"]
default_input_values = [0, 0.03, 1, 0.065, 2, 0.26]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_wwoc3"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_sewej"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_umwfw"]
constant = Color(0.0143067, 0.116367, 0.131475, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_dectx"]
constant = Color(0.992188, 0.847656, 0.621094, 1)

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_6bf42"]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_v7bc7"]
default_input_values = [1, Vector2(1, 0.5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_65l6o"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_n30pu"]
default_input_values = [0, 0.0, 1, 0.001]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2iv12"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_5dp8q"]
parameter_name = "Dither_blue_noise_size"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_yhfjp"]
parameter_name = "BlueNoise"
qualifier = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_hr27q"]
constant = Color(0.951733, 0.711358, 0.280901, 1)

[sub_resource type="VisualShader" id="VisualShader_pn65u"]
code = "shader_type canvas_item;
render_mode blend_mix;

global uniform float Dither_blue_noise_size;
global uniform sampler2D BlueNoise : repeat_enable;
uniform float Circle : hint_range(0, 1) = 0.5;



void fragment() {
// ColorConstant:54
	vec4 n_out54p0 = vec4(0.014307, 0.116367, 0.131475, 1.000000);


// UVFunc:59
	vec2 n_in59p1 = vec2(1.00000, 0.50000);
	vec2 n_in59p2 = vec2(0.00000, 0.00000);
	vec2 n_out59p0 = (UV - n_in59p2) * n_in59p1 + n_in59p2;


// FloatParameter:67
	float n_out67p0 = Dither_blue_noise_size;


// Input:60
	float n_out60p0 = TIME;


// FloatOp:61
	float n_in61p1 = 0.00100;
	float n_out61p0 = n_out60p0 * n_in61p1;


// FloatOp:62
	float n_in62p1 = 0.10000;
	float n_out62p0 = n_out61p0 * n_in62p1;


// UVFunc:58
	vec2 n_out58p0 = (n_out59p0 - vec2(n_out62p0)) * vec2(n_out67p0) + vec2(n_out62p0);


	vec4 n_out42p0;
// Texture2D:42
	n_out42p0 = texture(BlueNoise, n_out58p0);


// Mix:48
	float n_in48p1 = 0.06500;
	float n_in48p2 = 0.26000;
	float n_out48p0 = mix(n_out42p0.x, n_in48p1, n_in48p2);


	vec4 n_out25p0;
// Texture2D:25
	n_out25p0 = texture(TEXTURE, UV);


// Step:43
	float n_out43p0 = step(n_out48p0, n_out25p0.x);


// Mix:53
	vec3 n_in53p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out53p0 = mix(vec3(n_out54p0.xyz), n_in53p1, vec3(n_out43p0));


// ColorConstant:69
	vec4 n_out69p0 = vec4(0.951733, 0.711358, 0.280901, 1.000000);


// Mix:52
	vec3 n_out52p0 = mix(n_out53p0, vec3(n_out69p0.xyz), vec3(n_out43p0));


// FloatParameter:39
	float n_out39p0 = Circle;


// FloatConstant:36
	float n_out36p0 = 0.400000;


	float n_out37p0;
// Expression:37
	n_out37p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out36p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out37p0 = n_out39p0 - DITHER_THRESHOLDS[index];
	}


// Step:35
	float n_in35p0 = 0.00000;
	float n_out35p0 = step(n_in35p0, n_out37p0);


// Output:0
	COLOR.rgb = n_out52p0;
	COLOR.a = n_out35p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1320, 40)
nodes/fragment/24/node = SubResource("VisualShaderNodeInput_dj8vr")
nodes/fragment/24/position = Vector2(-440, -1100)
nodes/fragment/25/node = SubResource("VisualShaderNodeTexture_mhw1d")
nodes/fragment/25/position = Vector2(-140, -1040)
nodes/fragment/35/node = SubResource("VisualShaderNodeStep_26ssp")
nodes/fragment/35/position = Vector2(-140, 340)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatConstant_1oo8g")
nodes/fragment/36/position = Vector2(-1560, 500)
nodes/fragment/37/node = SubResource("VisualShaderNodeExpression_ilc2n")
nodes/fragment/37/position = Vector2(-1260, 480)
nodes/fragment/37/size = Vector2(724.789, 654.559)
nodes/fragment/37/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/37/output_ports = "0,0,Dither_Node;"
nodes/fragment/37/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/39/node = SubResource("VisualShaderNodeFloatParameter_5opgu")
nodes/fragment/39/position = Vector2(-1620, 200)
nodes/fragment/42/node = SubResource("VisualShaderNodeTexture_atyix")
nodes/fragment/42/position = Vector2(-240, -580)
nodes/fragment/43/node = SubResource("VisualShaderNodeStep_i2gji")
nodes/fragment/43/position = Vector2(220, -660)
nodes/fragment/48/node = SubResource("VisualShaderNodeMix_rsloa")
nodes/fragment/48/position = Vector2(40, -500)
nodes/fragment/52/node = SubResource("VisualShaderNodeMix_wwoc3")
nodes/fragment/52/position = Vector2(720, -580)
nodes/fragment/53/node = SubResource("VisualShaderNodeMix_sewej")
nodes/fragment/53/position = Vector2(420, -340)
nodes/fragment/54/node = SubResource("VisualShaderNodeColorConstant_umwfw")
nodes/fragment/54/position = Vector2(120, -280)
nodes/fragment/56/node = SubResource("VisualShaderNodeColorConstant_dectx")
nodes/fragment/56/position = Vector2(420, -760)
nodes/fragment/58/node = SubResource("VisualShaderNodeUVFunc_6bf42")
nodes/fragment/58/position = Vector2(-1440, -840)
nodes/fragment/59/node = SubResource("VisualShaderNodeUVFunc_v7bc7")
nodes/fragment/59/position = Vector2(-1760, -960)
nodes/fragment/60/node = SubResource("VisualShaderNodeInput_65l6o")
nodes/fragment/60/position = Vector2(-2040, -580)
nodes/fragment/61/node = SubResource("VisualShaderNodeFloatOp_n30pu")
nodes/fragment/61/position = Vector2(-1720, -600)
nodes/fragment/62/node = SubResource("VisualShaderNodeFloatOp_2iv12")
nodes/fragment/62/position = Vector2(-1660, -400)
nodes/fragment/67/node = SubResource("VisualShaderNodeFloatParameter_5dp8q")
nodes/fragment/67/position = Vector2(-2440, -940)
nodes/fragment/68/node = SubResource("VisualShaderNodeTexture2DParameter_yhfjp")
nodes/fragment/68/position = Vector2(-780, -360)
nodes/fragment/69/node = SubResource("VisualShaderNodeColorConstant_hr27q")
nodes/fragment/69/position = Vector2(600, -740)
nodes/fragment/connections = PackedInt32Array(36, 0, 37, 1, 39, 0, 37, 0, 43, 0, 52, 2, 43, 0, 53, 2, 24, 0, 25, 2, 53, 0, 52, 0, 60, 0, 61, 0, 61, 0, 62, 0, 59, 0, 58, 0, 62, 0, 58, 2, 58, 0, 42, 0, 54, 0, 53, 0, 25, 0, 43, 1, 35, 0, 0, 1, 52, 0, 0, 0, 37, 0, 35, 1, 42, 0, 48, 0, 48, 0, 43, 0, 67, 0, 58, 1, 68, 0, 42, 2, 69, 0, 52, 1)

[resource]
shader = SubResource("VisualShader_pn65u")
shader_parameter/Circle = 1.0
