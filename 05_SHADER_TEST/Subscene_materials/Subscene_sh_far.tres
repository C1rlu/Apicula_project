[gd_resource type="VisualShader" load_steps=40 format=3 uid="uid://cx243vj1gf8pv"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_vsiqd"]
parameter_name = "Subscene_Darker_color"
qualifier = 1

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_1tx3l"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_bq4re"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_08pu3"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_4ndun"]
varying_name = "isgray"

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_byx46"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yv3uh"]
input_name = "light"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_lmf6q"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cls45"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jvnaj"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_wa0d8"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_jokje"]
constant = 1.156

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_76mnd"]
input_name = "albedo"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_j3k8k"]
default_input_values = [0, 0.0, 1, 0.125, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_plmkf"]
parameter_name = "Distance_power"
default_value_enabled = true
default_value = 0.25

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_d805k"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ocxf6"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_cnt8j"]
parameter_name = "active_Dither"
qualifier = 1

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_kcixi"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_hmtla"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_n5gij"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_8eq70"]
varying_name = "isgray"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_asbju"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_c0wm8"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_apd6j"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_udht2"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sow2w"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_fmmqe"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_a8smw"]
parameter_name = "mirror_wave_speed"
qualifier = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_65iyk"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1s3sb"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_k74l7"]
constant = 0.5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_ah11y"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_kpq41"]
operator = 2

[sub_resource type="FastNoiseLite" id="FastNoiseLite_75nlw"]
noise_type = 2
frequency = 0.3
fractal_weighted_strength = 1.0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_xij0p"]
bump_strength = 27.2
noise = SubResource("FastNoiseLite_75nlw")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_oaoio"]
texture = SubResource("NoiseTexture2D_xij0p")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_jdswg"]
default_input_values = [0, 0.0, 1, 0.075]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_g4hno"]
constant = 10.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, shadows_disabled, debug_shadow_splits;


// Varyings
varying float isgray;

global uniform float mirror_wave_speed;
uniform sampler2D tex_vtx_7;
global uniform vec4 Subscene_Darker_color : source_color;
global uniform bool isGray;
uniform float Distance_power = 0.25;
global uniform bool active_Dither;
global uniform float Dither_size;



void vertex() {
// Input:3
	float n_out3p0 = TIME;


// FloatConstant:4
	float n_out4p0 = 0.500000;


// FloatParameter:13
	float n_out13p0 = mirror_wave_speed;


// FloatOp:11
	float n_out11p0 = n_out4p0 * n_out13p0;


// FloatOp:6
	float n_out6p0 = n_out3p0 * n_out11p0;


// UVFunc:5
	vec2 n_in5p1 = vec2(1.00000, 1.00000);
	vec2 n_out5p0 = vec2(n_out6p0) * n_in5p1 + UV;


// Texture2D:7
	vec4 n_out7p0 = texture(tex_vtx_7, n_out5p0);


// FloatConstant:9
	float n_out9p0 = 10.000000;


// FloatOp:12
	float n_out12p0 = n_out9p0 * n_out13p0;


// FloatOp:8
	float n_out8p0 = n_out7p0.x * n_out12p0;


// Input:2
	vec3 n_out2p0 = VERTEX;


// VectorOp:10
	vec3 n_out10p0 = vec3(n_out8p0) + n_out2p0;


// Output:0
	VERTEX = n_out10p0;


}

void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Subscene_Darker_color;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		float luminance = 0.299 * vec3(n_out2p0.xyz).x + 0.587 * vec3(n_out2p0.xyz).y + 0.114 * vec3(n_out2p0.xyz).z;
		n_out4p0 = luminance;
	}


// BooleanParameter:3
	bool n_out3p0 = isGray;


// Mix:5
	vec3 n_out5p0 = mix(vec3(n_out2p0.xyz), vec3(n_out4p0), vec3(n_out3p0 ? 1.0 : 0.0));


// Output:0
	ALBEDO = n_out5p0;


// VaryingSetter:6
	isgray = (n_out3p0 ? 1.0 : 0.0);


}

void light() {
// Input:31
	vec3 n_out31p0 = ALBEDO;


// FloatParameter:33
	float n_out33p0 = Distance_power;


// BooleanParameter:48
	bool n_out48p0 = active_Dither;


// FloatConstant:3
	float n_out3p0 = 1.156000;


// FloatParameter:47
	float n_out47p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out47p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:7
	vec3 n_out7p0 = NORMAL;


// Input:11
	vec3 n_out11p0 = LIGHT;


// DotProduct:8
	float n_out8p0 = dot(n_out7p0, n_out11p0);


// Clamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out8p0, n_in10p1, n_in10p2);


// Input:27
	float n_out27p0 = ATTENUATION;


// FloatOp:28
	float n_in28p1 = 1.00000;
	float n_out28p0 = n_out27p0 * n_in28p1;


// VectorOp:29
	vec3 n_out29p0 = vec3(n_out10p0) * vec3(n_out28p0);


// Step:6
	float n_out6p0 = step(n_out4p0, n_out29p0.x);


	float n_out49p0;
// Switch:49
	n_out49p0 = mix(n_out29p0.x, n_out6p0, float(n_out48p0));


// Mix:32
	float n_in32p0 = 0.00000;
	float n_out32p0 = mix(n_in32p0, n_out33p0, n_out49p0);


// Mix:16
	vec3 n_in16p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out16p0 = mix(n_in16p0, n_out31p0, vec3(n_out32p0));


	float n_out50p0;
// Expression:50
	n_out50p0 = 0.0;
	{
		float luminance = 0.299 * n_out16p0.x + 0.587 * n_out16p0.y + 0.114 * n_out16p0.z;
		n_out50p0 = luminance;
	}


// VaryingGetter:52
	float n_out52p0 = isgray;


// Mix:51
	vec3 n_out51p0 = mix(n_out16p0, vec3(n_out50p0), vec3(n_out52p0));


// Output:0
	SPECULAR_LIGHT = n_out51p0;


}
"
graph_offset = Vector2(-336.663, -275.652)
flags/shadows_disabled = true
flags/debug_shadow_splits = true
varyings/isgray = "1,0"
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_65iyk")
nodes/vertex/2/position = Vector2(-200, 500)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_1s3sb")
nodes/vertex/3/position = Vector2(-1280, 100)
nodes/vertex/4/node = SubResource("VisualShaderNodeFloatConstant_k74l7")
nodes/vertex/4/position = Vector2(-1320, 280)
nodes/vertex/5/node = SubResource("VisualShaderNodeUVFunc_ah11y")
nodes/vertex/5/position = Vector2(-840, 240)
nodes/vertex/6/node = SubResource("VisualShaderNodeFloatOp_kpq41")
nodes/vertex/6/position = Vector2(-1040, 280)
nodes/vertex/7/node = SubResource("VisualShaderNodeTexture_oaoio")
nodes/vertex/7/position = Vector2(-560, -80)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatOp_jdswg")
nodes/vertex/8/position = Vector2(-120, -20)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatConstant_g4hno")
nodes/vertex/9/position = Vector2(-360, 120)
nodes/vertex/10/node = SubResource("VisualShaderNodeVectorOp_udht2")
nodes/vertex/10/position = Vector2(80, 80)
nodes/vertex/11/node = SubResource("VisualShaderNodeFloatOp_sow2w")
nodes/vertex/11/position = Vector2(-1120, 460)
nodes/vertex/12/node = SubResource("VisualShaderNodeFloatOp_fmmqe")
nodes/vertex/12/position = Vector2(-180, 160)
nodes/vertex/13/node = SubResource("VisualShaderNodeFloatParameter_a8smw")
nodes/vertex/13/position = Vector2(-1440, 740)
nodes/vertex/connections = PackedInt32Array(2, 0, 10, 1, 3, 0, 6, 0, 6, 0, 5, 2, 8, 0, 10, 0, 9, 0, 12, 0, 12, 0, 8, 1, 4, 0, 11, 0, 11, 0, 6, 1, 5, 0, 7, 0, 7, 0, 8, 0, 13, 0, 11, 1, 13, 0, 12, 1, 10, 0, 0, 0)
nodes/fragment/0/position = Vector2(720, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_vsiqd")
nodes/fragment/2/position = Vector2(-680, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeBooleanParameter_1tx3l")
nodes/fragment/3/position = Vector2(-320, -120)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_bq4re")
nodes/fragment/4/position = Vector2(-333.49, -392.387)
nodes/fragment/4/size = Vector2(620, 200)
nodes/fragment/4/input_ports = "0,4,color;"
nodes/fragment/4/output_ports = "0,0,grey_value;"
nodes/fragment/4/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/5/node = SubResource("VisualShaderNodeMix_08pu3")
nodes/fragment/5/position = Vector2(366.51, -112.387)
nodes/fragment/6/node = SubResource("VisualShaderNodeVaryingSetter_4ndun")
nodes/fragment/6/position = Vector2(60.4525, 44.4744)
nodes/fragment/connections = PackedInt32Array(4, 0, 5, 1, 3, 0, 5, 2, 3, 0, 6, 0, 2, 0, 4, 0, 2, 0, 5, 0, 5, 0, 0, 0)
nodes/light/0/position = Vector2(1660, 560)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_jokje")
nodes/light/3/position = Vector2(-2940, 1080)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_d805k")
nodes/light/4/position = Vector2(-2660, 1080)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/6/node = SubResource("VisualShaderNodeStep_asbju")
nodes/light/6/position = Vector2(-760, 300)
nodes/light/7/node = SubResource("VisualShaderNodeInput_c0wm8")
nodes/light/7/position = Vector2(-2900, 140)
nodes/light/8/node = SubResource("VisualShaderNodeDotProduct_apd6j")
nodes/light/8/position = Vector2(-2480, 260)
nodes/light/10/node = SubResource("VisualShaderNodeClamp_byx46")
nodes/light/10/position = Vector2(-2280, 140)
nodes/light/11/node = SubResource("VisualShaderNodeInput_yv3uh")
nodes/light/11/position = Vector2(-2900, 440)
nodes/light/16/node = SubResource("VisualShaderNodeMix_lmf6q")
nodes/light/16/position = Vector2(80, 20)
nodes/light/27/node = SubResource("VisualShaderNodeInput_cls45")
nodes/light/27/position = Vector2(-2027.75, 245.994)
nodes/light/28/node = SubResource("VisualShaderNodeFloatOp_jvnaj")
nodes/light/28/position = Vector2(-1647.75, 225.994)
nodes/light/29/node = SubResource("VisualShaderNodeVectorOp_wa0d8")
nodes/light/29/position = Vector2(-1467.75, 105.994)
nodes/light/31/node = SubResource("VisualShaderNodeInput_76mnd")
nodes/light/31/position = Vector2(-460, -140)
nodes/light/32/node = SubResource("VisualShaderNodeMix_j3k8k")
nodes/light/32/position = Vector2(-180, 180)
nodes/light/33/node = SubResource("VisualShaderNodeFloatParameter_plmkf")
nodes/light/33/position = Vector2(-820, -20)
nodes/light/47/node = SubResource("VisualShaderNodeFloatParameter_ocxf6")
nodes/light/47/position = Vector2(-3020, 1200)
nodes/light/48/node = SubResource("VisualShaderNodeBooleanParameter_cnt8j")
nodes/light/48/position = Vector2(-840, 720)
nodes/light/49/node = SubResource("VisualShaderNodeSwitch_kcixi")
nodes/light/49/position = Vector2(-300, 600)
nodes/light/50/node = SubResource("VisualShaderNodeExpression_hmtla")
nodes/light/50/position = Vector2(637.3, -146.778)
nodes/light/50/size = Vector2(620, 200)
nodes/light/50/input_ports = "0,4,color;"
nodes/light/50/output_ports = "0,0,grey_value;"
nodes/light/50/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/light/51/node = SubResource("VisualShaderNodeMix_n5gij")
nodes/light/51/position = Vector2(1337.3, 133.222)
nodes/light/52/node = SubResource("VisualShaderNodeVaryingGetter_8eq70")
nodes/light/52/position = Vector2(589.069, 145.339)
nodes/light/connections = PackedInt32Array(3, 0, 4, 0, 10, 0, 29, 0, 32, 0, 16, 2, 33, 0, 32, 1, 27, 0, 28, 0, 28, 0, 29, 1, 8, 0, 10, 0, 7, 0, 8, 0, 29, 0, 6, 1, 31, 0, 16, 1, 11, 0, 8, 1, 4, 0, 6, 0, 47, 0, 4, 1, 48, 0, 49, 0, 6, 0, 49, 1, 49, 0, 32, 2, 29, 0, 49, 2, 50, 0, 51, 1, 16, 0, 50, 0, 16, 0, 51, 0, 51, 0, 0, 1, 52, 0, 51, 2)
