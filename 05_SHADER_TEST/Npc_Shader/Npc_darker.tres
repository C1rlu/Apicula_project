[gd_resource type="ShaderMaterial" load_steps=21 format=3 uid="uid://cje3d31ux7y1p"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ivask"]
parameter_name = "Dark_color"
qualifier = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_6fask"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_516qe"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jh6b4"]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_k0r8y"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_opah5"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_vxvdx"]
parameter_name = "Color"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_1qipu"]
constant = 0.2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_sffop"]
parameter_name = "isSubscene_value"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ixs76"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0, 1, 1)]
op_type = 3

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_u6d34"]
parameter_name = "stayGlobal"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_4tu1t"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6ilnr"]
default_input_values = [0, 0.0, 1, 0.38]
operator = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_3gihy"]
parameter_name = "Attenuation"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_yruck"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_vtvca"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_apjlw"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0n3se"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_mgbe4"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1.325, 4.3, 2.415)]

[sub_resource type="VisualShader" id="VisualShader_euakn"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

global uniform vec4 Dark_color : source_color;
uniform bool stayGlobal = true;
uniform vec4 Color : source_color;
global uniform float isSubscene_value;
uniform float Attenuation = 1;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);


}

void light() {
// BooleanParameter:22
	bool n_out22p0 = stayGlobal;


// ColorParameter:17
	vec4 n_out17p0 = Color;


// FloatParameter:20
	float n_out20p0 = isSubscene_value;


// Mix:21
	vec3 n_in21p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out21p0 = mix(n_in21p0, vec3(n_out17p0.xyz), vec3(n_out20p0));


	vec3 n_out23p0;
// Switch:23
	vec3 n_in23p2 = vec3(0.00000, 0.00000, 0.00000);
	n_out23p0 = mix(n_in23p2, n_out21p0, float(n_out22p0));


// FloatConstant:3
	float n_out3p0 = 1.000000;


// FloatConstant:2
	float n_out2p0 = 0.200000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Input:7
	vec3 n_out7p0 = NORMAL;


// Input:11
	vec3 n_out11p0 = LIGHT;


// DotProduct:8
	float n_out8p0 = dot(n_out7p0, n_out11p0);


// Clamp:10
	float n_in10p1 = 0.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out8p0, n_in10p1, n_in10p2);


// Input:12
	float n_out12p0 = ATTENUATION;


// FloatParameter:25
	float n_out25p0 = Attenuation;


// FloatOp:24
	float n_out24p0 = pow(n_out12p0, n_out25p0);


// VectorOp:13
	vec2 n_out13p0 = vec2(n_out10p0) * vec2(n_out24p0);


// Step:6
	float n_out6p0 = step(n_out4p0, n_out13p0.x);


// Mix:16
	vec3 n_in16p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out16p0 = mix(n_in16p0, n_out23p0, vec3(n_out6p0));


// Output:0
	SPECULAR_LIGHT = n_out16p0;


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_ivask")
nodes/fragment/2/position = Vector2(-160, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
nodes/light/2/node = SubResource("VisualShaderNodeFloatConstant_1qipu")
nodes/light/2/position = Vector2(-1860, 980)
nodes/light/3/node = SubResource("VisualShaderNodeFloatConstant_yruck")
nodes/light/3/position = Vector2(-1780, 860)
nodes/light/4/node = SubResource("VisualShaderNodeExpression_vtvca")
nodes/light/4/position = Vector2(-1440, 840)
nodes/light/4/size = Vector2(724.789, 654.559)
nodes/light/4/input_ports = "0,0,In;1,0,Size;"
nodes/light/4/output_ports = "0,0,Dither_Node;"
nodes/light/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/light/6/node = SubResource("VisualShaderNodeStep_apjlw")
nodes/light/6/position = Vector2(-800, 460)
nodes/light/7/node = SubResource("VisualShaderNodeInput_0n3se")
nodes/light/7/position = Vector2(-2480, 340)
nodes/light/8/node = SubResource("VisualShaderNodeDotProduct_mgbe4")
nodes/light/8/position = Vector2(-2060, 460)
nodes/light/10/node = SubResource("VisualShaderNodeClamp_6fask")
nodes/light/10/position = Vector2(-1860, 340)
nodes/light/11/node = SubResource("VisualShaderNodeInput_516qe")
nodes/light/11/position = Vector2(-2480, 640)
nodes/light/12/node = SubResource("VisualShaderNodeInput_jh6b4")
nodes/light/12/position = Vector2(-1960, 620)
nodes/light/13/node = SubResource("VisualShaderNodeVectorOp_k0r8y")
nodes/light/13/position = Vector2(-1600, 360)
nodes/light/16/node = SubResource("VisualShaderNodeMix_opah5")
nodes/light/16/position = Vector2(0, 380)
nodes/light/17/node = SubResource("VisualShaderNodeColorParameter_vxvdx")
nodes/light/17/position = Vector2(-860, 140)
nodes/light/20/node = SubResource("VisualShaderNodeFloatParameter_sffop")
nodes/light/20/position = Vector2(-860, -60)
nodes/light/21/node = SubResource("VisualShaderNodeMix_ixs76")
nodes/light/21/position = Vector2(-460, 40)
nodes/light/22/node = SubResource("VisualShaderNodeBooleanParameter_u6d34")
nodes/light/22/position = Vector2(-280, -80)
nodes/light/23/node = SubResource("VisualShaderNodeSwitch_4tu1t")
nodes/light/23/position = Vector2(60, 80)
nodes/light/24/node = SubResource("VisualShaderNodeFloatOp_6ilnr")
nodes/light/24/position = Vector2(-1560, 580)
nodes/light/25/node = SubResource("VisualShaderNodeFloatParameter_3gihy")
nodes/light/25/position = Vector2(-2140, 700)
nodes/light/connections = PackedInt32Array(7, 0, 8, 0, 8, 0, 10, 0, 11, 0, 8, 1, 10, 0, 13, 0, 2, 0, 4, 1, 3, 0, 4, 0, 4, 0, 6, 0, 17, 0, 21, 1, 20, 0, 21, 2, 21, 0, 23, 1, 23, 0, 16, 1, 6, 0, 16, 2, 22, 0, 23, 0, 13, 0, 6, 1, 12, 0, 24, 0, 24, 0, 13, 1, 25, 0, 24, 1, 16, 0, 0, 1)

[resource]
render_priority = 0
shader = SubResource("VisualShader_euakn")
shader_parameter/stayGlobal = true
shader_parameter/Color = Color(0.45098, 0.439216, 0.286275, 1)
shader_parameter/Attenuation = 6.755
