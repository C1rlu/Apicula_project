[gd_resource type="ShaderMaterial" load_steps=21 format=3 uid="uid://bs4xcdhvj0k0p"]

[ext_resource type="Texture2D" uid="uid://38btbw60olcn" path="res://12_INVENTORY/Photo/IMG/Boat.png" id="1_lkjio"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_auibw"]
source = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_m4j5d"]
parameter_name = "Denoiser"
default_value_enabled = true

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_hlpbb"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_wjtmu"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ippto"]
parameter_name = "Texture"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ctxdp"]
constant = Color(1, 0.583333, 0, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_h161d"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_73h11"]
default_input_values = [1, Vector2(1, 1), 2, Vector2(-0.04, -0.205)]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_tdgfp"]
default_input_values = [1, Vector2(1, 1), 2, Vector2(-0.04, -0.205)]
function = 1

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_m8o0b"]
constant = 2.052

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_rk2ie"]
function = 31

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_v5yhm"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_aojlj"]
size = Vector2(580, 220)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_o8s5p"]
size = Vector2(580, 220)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_6nr63"]
default_input_values = [0, 0.0, 1, 1.0, 2, -0.125]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_n5orw"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_p30pv"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_0b4sw"]
constant = Color(1.7297e-08, 0.0281402, 0.0340851, 1)

[sub_resource type="VisualShader" id="VisualShader_aph82"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform sampler2D Texture;
global uniform bool isGray;



void fragment() {
// ColorConstant:20
	vec4 n_out20p0 = vec4(1.000000, 0.583333, 0.000000, 1.000000);


// ColorConstant:9
	vec4 n_out9p0 = vec4(0.000000, 0.028140, 0.034085, 1.000000);


// FloatConstant:24
	float n_out24p0 = 2.052000;


// UVFunc:23
	vec2 n_in23p2 = vec2(-0.04000, -0.20500);
	vec2 n_out23p0 = (UV - n_in23p2) * vec2(n_out24p0) + n_in23p2;


// UVFunc:22
	vec2 n_in22p1 = vec2(1.00000, 1.00000);
	vec2 n_in22p2 = vec2(-0.04000, -0.20500);
	vec2 n_out22p0 = n_in22p2 * n_in22p1 + n_out23p0;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Texture, n_out22p0);


	float n_out29p0;
// Expression:29
	n_out29p0 = 0.0;
	{
		float luminance = 0.299 * vec3(n_out11p0.xyz).x + 0.587 * vec3(n_out11p0.xyz).y + 0.114 * vec3(n_out11p0.xyz).z;
		n_out29p0 = luminance;
	}


// Mix:30
	float n_in30p1 = 1.00000;
	float n_in30p2 = -0.12500;
	float n_out30p0 = mix(n_out29p0, n_in30p1, n_in30p2);


// FloatFunc:25
	float n_out25p0 = 1.0 - n_out30p0;


// Mix:8
	vec3 n_out8p0 = mix(vec3(n_out20p0.xyz), vec3(n_out9p0.xyz), vec3(n_out25p0));


	float n_out28p0;
// Expression:28
	n_out28p0 = 0.0;
	{
		float luminance = 0.299 * n_out8p0.x + 0.587 * n_out8p0.y + 0.114 * n_out8p0.z;
		n_out28p0 = luminance;
	}


// BooleanParameter:31
	bool n_out31p0 = isGray;


// Mix:27
	vec3 n_out27p0 = mix(n_out8p0, vec3(n_out28p0), vec3(n_out31p0 ? 1.0 : 0.0));


// Output:0
	ALBEDO = n_out27p0;


}
"
graph_offset = Vector2(-312.797, -184.925)
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(1260, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_ippto")
nodes/fragment/2/position = Vector2(-1600, -100)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_p30pv")
nodes/fragment/8/position = Vector2(-160, 320)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_0b4sw")
nodes/fragment/9/position = Vector2(-560, 200)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_auibw")
nodes/fragment/11/position = Vector2(-1100, 240)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatParameter_m4j5d")
nodes/fragment/13/position = Vector2(-1120, 1280)
nodes/fragment/18/node = SubResource("VisualShaderNodeExpression_hlpbb")
nodes/fragment/18/position = Vector2(-760, 1400)
nodes/fragment/18/size = Vector2(724.789, 654.559)
nodes/fragment/18/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/18/output_ports = "0,0,Dither_Node;"
nodes/fragment/18/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/19/node = SubResource("VisualShaderNodeStep_wjtmu")
nodes/fragment/19/position = Vector2(-420, 920)
nodes/fragment/20/node = SubResource("VisualShaderNodeColorConstant_ctxdp")
nodes/fragment/20/position = Vector2(-560, 100)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatParameter_h161d")
nodes/fragment/21/position = Vector2(-1429.2, 1573.92)
nodes/fragment/22/node = SubResource("VisualShaderNodeUVFunc_73h11")
nodes/fragment/22/position = Vector2(-1460, 320)
nodes/fragment/23/node = SubResource("VisualShaderNodeUVFunc_tdgfp")
nodes/fragment/23/position = Vector2(-1780, 280)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatConstant_m8o0b")
nodes/fragment/24/position = Vector2(-1940, 360)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatFunc_rk2ie")
nodes/fragment/25/position = Vector2(-340, -80)
nodes/fragment/27/node = SubResource("VisualShaderNodeMix_v5yhm")
nodes/fragment/27/position = Vector2(760, -80)
nodes/fragment/28/node = SubResource("VisualShaderNodeExpression_aojlj")
nodes/fragment/28/position = Vector2(60, -200)
nodes/fragment/28/size = Vector2(580, 220)
nodes/fragment/28/input_ports = "0,4,color;"
nodes/fragment/28/output_ports = "0,0,grey_value;"
nodes/fragment/28/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/29/node = SubResource("VisualShaderNodeExpression_o8s5p")
nodes/fragment/29/position = Vector2(-994.534, -279.633)
nodes/fragment/29/size = Vector2(580, 220)
nodes/fragment/29/input_ports = "0,4,color;"
nodes/fragment/29/output_ports = "0,0,grey_value;"
nodes/fragment/29/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/30/node = SubResource("VisualShaderNodeMix_6nr63")
nodes/fragment/30/position = Vector2(-171.553, -221.166)
nodes/fragment/31/node = SubResource("VisualShaderNodeBooleanParameter_n5orw")
nodes/fragment/31/position = Vector2(400, 340)
nodes/fragment/connections = PackedInt32Array(13, 0, 18, 0, 21, 0, 18, 1, 2, 0, 11, 2, 23, 0, 22, 0, 24, 0, 23, 1, 18, 0, 19, 1, 22, 0, 11, 0, 28, 0, 27, 1, 8, 0, 28, 0, 8, 0, 27, 0, 27, 0, 0, 0, 20, 0, 8, 0, 9, 0, 8, 1, 11, 0, 29, 0, 25, 0, 8, 2, 29, 0, 30, 0, 30, 0, 25, 0, 31, 0, 27, 2)

[resource]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_aph82")
shader_parameter/Texture = ExtResource("1_lkjio")
