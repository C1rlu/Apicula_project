[gd_resource type="ShaderMaterial" load_steps=15 format=3 uid="uid://b5u3d7wosa00d"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_lpbai"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_gxqwa"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_78yig"]
parameter_name = "link_opacity"
qualifier = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_8msb4"]
parameter_name = "Dark_color"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_wikq1"]
constant = 0.8

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_c2472"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ju72v"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_6cvwb"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_4ipjb"]
parameter_name = "Gradient"
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_essdf"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_56ne6"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShader" id="VisualShader_ndmq4"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;


// Varyings
varying vec3 dark_color_var;

uniform vec4 Dark_color : source_color;
uniform sampler2D Gradient : filter_nearest, repeat_enable;
global uniform float Dither_size;
global uniform float link_opacity;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Dark_color;


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(Gradient, UV);


// FloatConstant:3
	float n_out3p0 = 0.800000;


// FloatParameter:5
	float n_out5p0 = Dither_size;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out5p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out3p0 - DITHER_THRESHOLDS[index];
	}


// Step:8
	float n_out8p0 = step(n_out6p0.x, n_out4p0);


// Mix:9
	vec3 n_out9p0 = mix(vec3(n_out2p0.xyz), vec3(n_out8p0), vec3(n_out2p0.xyz));


	float n_out10p0;
// Expression:10
	n_out10p0 = 0.0;
	{
		float luminance = 0.299 * n_out9p0.x + 0.587 * n_out9p0.y + 0.114 * n_out9p0.z;
		n_out10p0 = luminance;
	}


// FloatParameter:12
	float n_out12p0 = link_opacity;


// Mix:11
	vec3 n_out11p0 = mix(n_out9p0, vec3(n_out10p0), vec3(n_out12p0));


// Output:0
	ALBEDO = n_out11p0;


	dark_color_var = vec3(0.0);
}
"
graph_offset = Vector2(-200.957, -337.792)
flags/unshaded = true
varyings/dark_color_var = "1,4"
nodes/vertex/0/position = Vector2(400, 160)
nodes/fragment/0/position = Vector2(1020, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_8msb4")
nodes/fragment/2/position = Vector2(-940, -240)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_wikq1")
nodes/fragment/3/position = Vector2(-1020, 620)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_c2472")
nodes/fragment/4/position = Vector2(-740, 620)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_ju72v")
nodes/fragment/5/position = Vector2(-1200, 780)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_6cvwb")
nodes/fragment/6/position = Vector2(-460, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture2DParameter_4ipjb")
nodes/fragment/7/position = Vector2(-1320, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeStep_essdf")
nodes/fragment/8/position = Vector2(-100, 360)
nodes/fragment/9/node = SubResource("VisualShaderNodeMix_56ne6")
nodes/fragment/9/position = Vector2(99.9524, 52.3079)
nodes/fragment/10/node = SubResource("VisualShaderNodeExpression_lpbai")
nodes/fragment/10/position = Vector2(215.559, -533.652)
nodes/fragment/10/size = Vector2(620, 200)
nodes/fragment/10/input_ports = "0,4,color;"
nodes/fragment/10/output_ports = "0,0,grey_value;"
nodes/fragment/10/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_gxqwa")
nodes/fragment/11/position = Vector2(960, -200)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatParameter_78yig")
nodes/fragment/12/position = Vector2(340, -240)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 7, 0, 6, 2, 6, 0, 8, 0, 4, 0, 8, 1, 2, 0, 9, 0, 8, 0, 9, 1, 2, 0, 9, 2, 12, 0, 11, 2, 10, 0, 11, 1, 9, 0, 10, 0, 9, 0, 11, 0, 11, 0, 0, 0)
nodes/light/0/position = Vector2(2440, 1640)

[sub_resource type="Gradient" id="Gradient_c773w"]
colors = PackedColorArray(0.219501, 0.219501, 0.219501, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_m77sg"]
gradient = SubResource("Gradient_c773w")
fill = 1
fill_from = Vector2(0.525641, 0.470085)
fill_to = Vector2(1, 1)

[resource]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_ndmq4")
shader_parameter/Dark_color = Color(0.0235294, 0.141176, 0.152941, 1)
shader_parameter/Gradient = SubResource("GradientTexture2D_m77sg")
