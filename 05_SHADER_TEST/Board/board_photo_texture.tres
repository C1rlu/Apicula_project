[gd_resource type="ShaderMaterial" load_steps=12 format=3 uid="uid://25obtp1blkk6"]

[ext_resource type="Texture2D" uid="uid://dsmwbffwgaj4q" path="res://12_INVENTORY/Photo/PhotoTest_02.jpg" id="1_c2uan"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_auibw"]
source = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_m4j5d"]
parameter_name = "Denoiser"
default_value_enabled = true

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_hlpbb"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_wjtmu"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ippto"]
parameter_name = "Texture"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ctxdp"]
constant = Color(0.404588, 0.33011, 0.165636, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_h161d"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_p30pv"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_0b4sw"]
constant = Color(0.00777764, 0.0529966, 0.0591746, 1)

[sub_resource type="VisualShader" id="VisualShader_aph82"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform sampler2D Texture;
uniform float Denoiser = 0;
global uniform float Dither_size;



void fragment() {
// ColorConstant:20
	vec4 n_out20p0 = vec4(0.404588, 0.330110, 0.165636, 1.000000);


// ColorConstant:9
	vec4 n_out9p0 = vec4(0.007778, 0.052997, 0.059175, 1.000000);


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Texture, UV);


// FloatParameter:13
	float n_out13p0 = Denoiser;


// FloatParameter:21
	float n_out21p0 = Dither_size;


	float n_out18p0;
// Expression:18
	n_out18p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out21p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out18p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:19
	float n_out19p0 = step(n_out11p0.x, n_out18p0);


// Mix:8
	vec3 n_out8p0 = mix(vec3(n_out20p0.xyz), vec3(n_out9p0.xyz), vec3(n_out19p0));


// Output:0
	ALBEDO = n_out8p0;


}
"
graph_offset = Vector2(-720.089, -91.0286)
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_ippto")
nodes/fragment/2/position = Vector2(-2060, -100)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_p30pv")
nodes/fragment/8/position = Vector2(-160, 320)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_0b4sw")
nodes/fragment/9/position = Vector2(-620, 340)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_auibw")
nodes/fragment/11/position = Vector2(-1560, 240)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatParameter_m4j5d")
nodes/fragment/13/position = Vector2(-1120, 1280)
nodes/fragment/18/node = SubResource("VisualShaderNodeExpression_hlpbb")
nodes/fragment/18/position = Vector2(-760, 1400)
nodes/fragment/18/size = Vector2(724.789, 654.559)
nodes/fragment/18/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/18/output_ports = "0,0,Dither_Node;"
nodes/fragment/18/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/19/node = SubResource("VisualShaderNodeStep_wjtmu")
nodes/fragment/19/position = Vector2(-420, 920)
nodes/fragment/20/node = SubResource("VisualShaderNodeColorConstant_ctxdp")
nodes/fragment/20/position = Vector2(-620, 240)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatParameter_h161d")
nodes/fragment/21/position = Vector2(-1429.2, 1573.92)
nodes/fragment/connections = PackedInt32Array(19, 0, 8, 2, 13, 0, 18, 0, 18, 0, 19, 1, 2, 0, 11, 2, 11, 0, 19, 0, 21, 0, 18, 1, 20, 0, 8, 0, 9, 0, 8, 1, 8, 0, 0, 0)

[resource]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_aph82")
shader_parameter/Denoiser = 1.055
shader_parameter/Texture = ExtResource("1_c2uan")
