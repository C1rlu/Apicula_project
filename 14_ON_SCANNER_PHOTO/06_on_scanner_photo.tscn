[gd_scene load_steps=47 format=3 uid="uid://dpl12cginnwpp"]

[ext_resource type="Script" path="res://13_TOOLS_UI/set_Resolution_viewports.gd" id="1_ifne7"]
[ext_resource type="Script" path="res://14_ON_SCANNER_PHOTO/Flash_Scanner.gd" id="2_gnkwf"]
[ext_resource type="PackedScene" uid="uid://b4hspc8dsyv14" path="res://08_SUBSCENES/Elements/Tiny_boat/scene_boat_ch_test.tscn" id="5_fy62g"]
[ext_resource type="Script" path="res://03_CAMERA/Active_scene_viewports.gd" id="7_j563j"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gfsdv"]
source = 5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_jhcmr"]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_tj8nm"]
default_input_values = [1, Vector2(1, 0.5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_70iid"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_uqgnp"]
default_input_values = [0, 0.0, 1, 0.001]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4rbop"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 2

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_35dnd"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_ft37r"]
parameter_name = "BlueNoise"
qualifier = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u52w7"]
parameter_name = "Dither_blue_noise_size"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_35skw"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bom8v"]
input_name = "color"

[sub_resource type="VisualShader" id="VisualShader_4q2r2"]
code = "shader_type canvas_item;
render_mode blend_mix;

global uniform float Dither_blue_noise_size;
global uniform sampler2D BlueNoise : repeat_enable;
uniform float Opacity : hint_range(0, 1) = 0.5;



void fragment() {
// Input:9
	vec4 n_out9p0 = COLOR;


// UVFunc:16
	vec2 n_in16p1 = vec2(1.00000, 0.50000);
	vec2 n_in16p2 = vec2(0.00000, 0.00000);
	vec2 n_out16p0 = (UV - n_in16p2) * n_in16p1 + n_in16p2;


// FloatParameter:30
	float n_out30p0 = Dither_blue_noise_size;


// Input:17
	float n_out17p0 = TIME;


// FloatOp:18
	float n_in18p1 = 0.00100;
	float n_out18p0 = n_out17p0 * n_in18p1;


// FloatOp:19
	float n_in19p1 = 0.10000;
	float n_out19p0 = n_out18p0 * n_in19p1;


// UVFunc:15
	vec2 n_out15p0 = (n_out16p0 - vec2(n_out19p0)) * vec2(n_out30p0) + vec2(n_out19p0);


	vec4 n_out13p0;
// Texture2D:13
	n_out13p0 = texture(BlueNoise, n_out15p0);


// FloatParameter:5
	float n_out5p0 = Opacity;


// Step:2
	float n_out2p0 = step(n_out13p0.x, n_out5p0);


// Output:0
	COLOR.rgb = vec3(n_out9p0.xyz);
	COLOR.a = n_out2p0;


}
"
graph_offset = Vector2(-652.644, -327.21)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(680, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeStep_35dnd")
nodes/fragment/2/position = Vector2(260, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_35skw")
nodes/fragment/5/position = Vector2(-200, 380)
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_bom8v")
nodes/fragment/9/position = Vector2(740, -640)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture_gfsdv")
nodes/fragment/13/position = Vector2(-820, -580)
nodes/fragment/15/node = SubResource("VisualShaderNodeUVFunc_jhcmr")
nodes/fragment/15/position = Vector2(-1420, -460)
nodes/fragment/16/node = SubResource("VisualShaderNodeUVFunc_tj8nm")
nodes/fragment/16/position = Vector2(-1740, -580)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_70iid")
nodes/fragment/17/position = Vector2(-2020, -200)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatOp_uqgnp")
nodes/fragment/18/position = Vector2(-1700, -220)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_4rbop")
nodes/fragment/19/position = Vector2(-1640, -20)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture2DParameter_ft37r")
nodes/fragment/21/position = Vector2(-1180, -300)
nodes/fragment/30/node = SubResource("VisualShaderNodeFloatParameter_u52w7")
nodes/fragment/30/position = Vector2(-2140, -440)
nodes/fragment/connections = PackedInt32Array(9, 0, 0, 0, 17, 0, 18, 0, 18, 0, 19, 0, 16, 0, 15, 0, 19, 0, 15, 2, 15, 0, 13, 0, 21, 0, 13, 2, 13, 0, 2, 0, 5, 0, 2, 1, 30, 0, 15, 1, 2, 0, 0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vn7gh"]
shader = SubResource("VisualShader_4q2r2")
shader_parameter/Opacity = 0.0

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_r1xak"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_o7wnw"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ai7hb"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_5o7da"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nqokt"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_p4dfd"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_1df7c"]

[sub_resource type="VisualShader" id="VisualShader_jxlx7"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Opacity : hint_range(0, 1) = 0.5;
global uniform float Dither_size;



void fragment() {
	vec4 n_out77p0;
// Texture2D:77
	n_out77p0 = texture(TEXTURE, UV);
	float n_out77p4 = n_out77p0.a;


// FloatParameter:39
	float n_out39p0 = Opacity;


// FloatParameter:69
	float n_out69p0 = Dither_size;


	float n_out37p0;
// Expression:37
	n_out37p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out69p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out37p0 = n_out39p0 - DITHER_THRESHOLDS[index];
	}


// Step:35
	float n_in35p0 = 0.00000;
	float n_out35p0 = step(n_in35p0, n_out37p0);


// Mix:80
	float n_in80p0 = 0.00000;
	float n_out80p0 = mix(n_in80p0, n_out77p4, n_out35p0);


// Output:0
	COLOR.rgb = vec3(n_out77p0.xyz);
	COLOR.a = n_out80p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1800, -60)
nodes/fragment/35/node = SubResource("VisualShaderNodeStep_r1xak")
nodes/fragment/35/position = Vector2(1080, 560)
nodes/fragment/37/node = SubResource("VisualShaderNodeExpression_o7wnw")
nodes/fragment/37/position = Vector2(40, 500)
nodes/fragment/37/size = Vector2(724.789, 654.559)
nodes/fragment/37/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/37/output_ports = "0,0,Dither_Node;"
nodes/fragment/37/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/39/node = SubResource("VisualShaderNodeFloatParameter_ai7hb")
nodes/fragment/39/position = Vector2(-320, 220)
nodes/fragment/69/node = SubResource("VisualShaderNodeFloatParameter_5o7da")
nodes/fragment/69/position = Vector2(-420, 660)
nodes/fragment/76/node = SubResource("VisualShaderNodeInput_nqokt")
nodes/fragment/76/position = Vector2(600, -480)
nodes/fragment/77/node = SubResource("VisualShaderNodeTexture_p4dfd")
nodes/fragment/77/position = Vector2(1220, -360)
nodes/fragment/80/node = SubResource("VisualShaderNodeMix_1df7c")
nodes/fragment/80/position = Vector2(1520, 40)
nodes/fragment/connections = PackedInt32Array(39, 0, 37, 0, 37, 0, 35, 1, 69, 0, 37, 1, 76, 0, 77, 2, 35, 0, 80, 2, 80, 0, 0, 1, 77, 0, 0, 0, 77, 4, 80, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_qojhl"]
shader = SubResource("VisualShader_jxlx7")
shader_parameter/Opacity = 0.0

[sub_resource type="ViewportTexture" id="ViewportTexture_ev3qb"]
viewport_path = NodePath("SubViewport_scanner")

[sub_resource type="QuadMesh" id="QuadMesh_0l2rs"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_x1s8l"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_efjrb"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_vqxk4"]
parameter_name = "ColorParameter"

[sub_resource type="Gradient" id="Gradient_neilk"]

[sub_resource type="GradientTexture2D" id="GradientTexture2D_1xghf"]
gradient = SubResource("Gradient_neilk")
fill = 1
fill_from = Vector2(0.5, 0.5)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ktumw"]
texture = SubResource("GradientTexture2D_1xghf")

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_2mdc7"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_pw3yw"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.5]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_nvn6f"]
size = Vector2(582.979, 472.949)
expression = "vec2 uv = (offset / size) + UV;
vec2 r = mod(size * uv, vec2(grid_size));
vec2 lines = smoothstep(1.0 - line_width, 1, r / vec2(grid_size));
float alpha = dot(lines, vec2(1.0, 1.0));
COLOR = alpha;"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_1epbb"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_k0o1k"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_6d8ca"]
parameter_name = "Offset"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_tq01j"]
parameter_name = "Size"
default_value_enabled = true
default_value = Vector2(1000, 1000)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_irf6w"]
constant = 200.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_vpem4"]
parameter_name = "Ligne_widht"
default_value_enabled = true
default_value = 0.025

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_n5bdq"]
constant = 1.263

[sub_resource type="VisualShader" id="VisualShader_0b14l"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 ColorParameter : source_color;
global uniform float Dither_size;
uniform vec2 Offset = vec2(0.000000, 0.000000);
uniform vec2 Size = vec2(1000.000000, 1000.000000);
uniform float Ligne_widht = 0.02500000037253;
uniform sampler2D tex_frg_16;



void fragment() {
// ColorParameter:13
	vec4 n_out13p0 = ColorParameter;


// FloatConstant:9
	float n_out9p0 = 1.263000;


// FloatParameter:12
	float n_out12p0 = Dither_size;


	float n_out10p0;
// Expression:10
	n_out10p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out10p0 = n_out9p0 - DITHER_THRESHOLDS[index];
	}


// Vector2Parameter:4
	vec2 n_out4p0 = Offset;


// Input:3
	vec2 n_out3p0 = UV;


// Vector2Parameter:5
	vec2 n_out5p0 = Size;


// FloatConstant:6
	float n_out6p0 = 200.000000;


// FloatParameter:7
	float n_out7p0 = Ligne_widht;


	float n_out2p0;
// Expression:2
	n_out2p0 = 0.0;
	{
		vec2 uv = (n_out4p0 / n_out5p0) + n_out3p0;
		vec2 r = mod(n_out5p0 * uv, vec2(n_out6p0));
		vec2 lines = smoothstep(1.0 - n_out7p0, 1, r / vec2(n_out6p0));
		float alpha = dot(lines, vec2(1.0, 1.0));
		n_out2p0 = alpha;
	}


// Texture2D:16
	vec4 n_out16p0 = texture(tex_frg_16, UV);


// Mix:18
	float n_in18p1 = 0.00000;
	float n_out18p0 = mix(n_out2p0, n_in18p1, n_out16p0.x);


// Step:20
	float n_out20p0 = step(n_out10p0, n_out18p0);


// Output:0
	ALBEDO = vec3(n_out13p0.xyz);
	ALPHA = n_out20p0;


}
"
flags/unshaded = true
nodes/fragment/2/node = SubResource("VisualShaderNodeExpression_nvn6f")
nodes/fragment/2/position = Vector2(-2860, 620)
nodes/fragment/2/size = Vector2(582.979, 472.949)
nodes/fragment/2/input_ports = "0,3,offset;1,3,UV;2,3,size;3,0,grid_size;4,0,line_width;"
nodes/fragment/2/output_ports = "0,0,COLOR;"
nodes/fragment/2/expression = "vec2 uv = (offset / size) + UV;
vec2 r = mod(size * uv, vec2(grid_size));
vec2 lines = smoothstep(1.0 - line_width, 1, r / vec2(grid_size));
float alpha = dot(lines, vec2(1.0, 1.0));
COLOR = alpha;"
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_k0o1k")
nodes/fragment/3/position = Vector2(-3380, 680)
nodes/fragment/4/node = SubResource("VisualShaderNodeVec2Parameter_6d8ca")
nodes/fragment/4/position = Vector2(-3600, 280)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec2Parameter_tq01j")
nodes/fragment/5/position = Vector2(-3920, 820)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_irf6w")
nodes/fragment/6/position = Vector2(-3180, 900)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_vpem4")
nodes/fragment/7/position = Vector2(-3560, 1220)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatConstant_n5bdq")
nodes/fragment/9/position = Vector2(-2220, 1200)
nodes/fragment/10/node = SubResource("VisualShaderNodeExpression_x1s8l")
nodes/fragment/10/position = Vector2(-1920, 1320)
nodes/fragment/10/size = Vector2(724.789, 654.559)
nodes/fragment/10/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/10/output_ports = "0,0,Dither_Node;"
nodes/fragment/10/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatParameter_efjrb")
nodes/fragment/12/position = Vector2(-2540, 1680)
nodes/fragment/13/node = SubResource("VisualShaderNodeColorParameter_vqxk4")
nodes/fragment/13/position = Vector2(-40, -360)
nodes/fragment/16/node = SubResource("VisualShaderNodeTexture_ktumw")
nodes/fragment/16/position = Vector2(-2200, -180)
nodes/fragment/17/node = SubResource("VisualShaderNodeStep_2mdc7")
nodes/fragment/17/position = Vector2(-580, 0)
nodes/fragment/18/node = SubResource("VisualShaderNodeMix_pw3yw")
nodes/fragment/18/position = Vector2(-1260, 300)
nodes/fragment/20/node = SubResource("VisualShaderNodeStep_1epbb")
nodes/fragment/20/position = Vector2(-100, 780)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 1, 6, 0, 2, 3, 4, 0, 2, 0, 5, 0, 2, 2, 7, 0, 2, 4, 9, 0, 10, 0, 12, 0, 10, 1, 13, 0, 0, 0, 16, 0, 18, 2, 20, 0, 0, 1, 10, 0, 20, 0, 2, 0, 18, 0, 18, 0, 20, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_wi17y"]
render_priority = 0
shader = SubResource("VisualShader_0b14l")
shader_parameter/ColorParameter = Color(0.984314, 0.752941, 0.556863, 1)
shader_parameter/Offset = Vector2(0, 0)
shader_parameter/Size = Vector2(1100, 1100)
shader_parameter/Ligne_widht = 0.05

[node name="06_ON_SCANNER_PHOTO" type="Node"]

[node name="set_Resolution" type="Node" parent="." node_paths=PackedStringArray("viewports")]
script = ExtResource("1_ifne7")
viewports = [NodePath("../SubViewport_scanner")]

[node name="Flash_Scanner" type="Node" parent="."]
script = ExtResource("2_gnkwf")

[node name="Active_scene_viewports" type="Node" parent="." node_paths=PackedStringArray("viewports")]
script = ExtResource("7_j563j")
viewports = [NodePath("../SubViewport_scanner")]

[node name="SubViewport_scanner" type="SubViewport" parent="."]
transparent_bg = true
handle_input_locally = false
size = Vector2i(1920, 1080)

[node name="Camp_root_Render" type="Node3D" parent="SubViewport_scanner"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -2.38419e-07)

[node name="Camera3D" type="Camera3D" parent="SubViewport_scanner/Camp_root_Render"]
transform = Transform3D(1, 0, 0, 0, 0.866025, 0.5, 0, -0.5, 0.866025, 0, 0.181, 0.197)
cull_mask = 128
current = true
fov = 40.0
far = 0.5

[node name="BACKDROP_FOCUS" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_vn7gh")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
color = Color(0.0705882, 0.12549, 0.129412, 1)

[node name="RENDER_Scanner" type="TextureRect" parent="."]
material = SubResource("ShaderMaterial_qojhl")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
texture = SubResource("ViewportTexture_ev3qb")
expand_mode = 3

[node name="InsidePhoto_scanner_scene" type="Node3D" parent="."]

[node name="OmniLight3D" type="OmniLight3D" parent="InsidePhoto_scanner_scene"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.199094, 0.00701758)
layers = 128
omni_range = 0.240332

[node name="loader" type="Node3D" parent="InsidePhoto_scanner_scene"]
transform = Transform3D(-0.841511, 0, -0.54024, 0, 1, 0, 0.54024, 0, -0.841511, 0, 0.0487088, 0)

[node name="Scene_boat_ch_test" parent="InsidePhoto_scanner_scene/loader" instance=ExtResource("5_fy62g")]
transform = Transform3D(0.0133498, 0, 0, 0, 0.0133497, 0, 0, 0, 0.0133498, 0, 0, 0)
visible = false

[node name="Grid" type="MeshInstance3D" parent="InsidePhoto_scanner_scene"]
transform = Transform3D(0.312734, 0, 0, 0, 0, 0.312734, 0, -0.312734, 0, 0, 0.0362411, -0.0370907)
visible = false
layers = 128
mesh = SubResource("QuadMesh_0l2rs")
surface_material_override/0 = SubResource("ShaderMaterial_wi17y")
