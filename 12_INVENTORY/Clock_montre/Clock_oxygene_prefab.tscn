[gd_scene load_steps=139 format=3 uid="uid://clc3sbquuu1us"]

[ext_resource type="Script" path="res://10_BOARD/Behaviour/Movable_paper.tres.gd" id="1_hwa20"]
[ext_resource type="Script" path="res://10_BOARD/Behaviour/Apply_pos_anim.gd" id="2_utw7r"]
[ext_resource type="Texture2D" uid="uid://dloafgux050ra" path="res://12_INVENTORY/Clock_montre/Clock_detail.png" id="3_qfgi4"]
[ext_resource type="Texture2D" uid="uid://bm0x5egb7ypfh" path="res://12_INVENTORY/Clock_montre/Aiguille.png" id="4_530h2"]

[sub_resource type="GDScript" id="GDScript_xxuca"]
script/source = "extends Node2D

@onready var timer = $Timer

@onready var clock_root = $Clock_root

var actual_max_angle : float = 90.0
var actual_min_angle : float = 0.0

func _ready():
	
	_global_datas._end_ini_subscene.connect(_start_clock)
	_global_datas._go_Mainscene.connect(_stop_clock)
	_global_datas.clock_timer = timer
	
func _process(delta):
	
	if timer.is_stopped():
		return		
	_update_clock()
	

func _update_clock():
	var timeConvert = 1 - (timer.time_left / timer.wait_time ) 
	clock_root.rotation_degrees = lerp(actual_min_angle,actual_max_angle,timeConvert)



func _start_clock():
	
	actual_max_angle = 90.0
	actual_min_angle = 0.0
	
	timer.start()
	
func _stop_clock():
	
	timer.stop()
	clock_root.rotation_degrees = 0.0
	
	
func _increase_angle():
	
	actual_max_angle += 90.0
	actual_min_angle += 90.0	
	
	if actual_max_angle > 360.0:
		_global_datas._go_Subscene.emit()
	else:
		timer.start()	
		_global_datas._spawn_empty_oxygene.emit()	


func _on_timer_timeout():
	_increase_angle()

"

[sub_resource type="GDScript" id="GDScript_uwuod"]
script/source = "extends Node

@onready var take_object = $\"../Take_object\"
@onready var timer = $Timer
@onready var clock_root = $\"../Clock_root\"
@onready var blast = $\"../Dots/Blast\"

var actual_max_angle : float = 90.0
var actual_min_angle : float = 0.0
var click : bool = false
@export var active = false

func _ready():
	_global_datas._reseting_clock_active.connect(_active_reset)
	_global_datas._reseting_clock_disable.connect(_disable_reset)

	
func _input(event):
	#Active


	if _global_datas.Player_lock_click:
		return
		
	if  !active:
		return
		
		
	if _global_datas.Player_InSubScene:
		return
	
	if click:
		#TO Disable
		if event is InputEventMouseButton:
			if event.button_index == MOUSE_BUTTON_LEFT and not event.pressed:
				_disable_reset()
				
	
		
	if Input.is_action_just_pressed(\"Click\"):
		click = true
		_active_reset()
		
	
	
func _active_reset():
	take_object._reset_active()
	_start_clock()
	
func _disable_reset():
	take_object._reset_disable()
	_stop_clock()
	click = false

	
func _process(delta):
	
	if timer.is_stopped():
		return		
	_update_clock()
	

func _update_clock():
	var timeConvert = 1 - (timer.time_left / timer.wait_time ) 
	clock_root.rotation_degrees = lerp(-actual_min_angle,-actual_max_angle,timeConvert)
	
func _start_clock():
	blast.disable_all()
	actual_max_angle = 90.0
	actual_min_angle = 0.0
	
	timer.start()
	
func _stop_clock():
	
	timer.stop()
	clock_root.rotation_degrees = 0.0
	
	if _global_datas.Player_InSubScene:
		return
	blast.disable_all()
	
func _increase_angle():
	
	actual_max_angle += 90.0
	actual_min_angle += 90.0	
	
	blast.active_by_index()
	
	if actual_max_angle > 360.0:
		_global_datas._reseting_clock_disable.emit()
		_global_datas._go_Subscene.emit()
		
	else:
		timer.start()	
		print(\"BLAST READY\")	
		

func _on_timer_timeout():
	_increase_angle()
"

[sub_resource type="Gradient" id="Gradient_dg561"]
offsets = PackedFloat32Array(0, 0.528875, 0.547112, 0.984802)
colors = PackedColorArray(1, 1, 1, 1, 0.0102558, 0.0102558, 0.0102558, 1, 0.0243161, 0.0243161, 0.0243161, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_rmu3q"]
gradient = SubResource("Gradient_dg561")
fill_from = Vector2(0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3680o"]
source = 5
texture = SubResource("GradientTexture2D_rmu3q")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ic3n3"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_lp0m1"]
constant = 1.14

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_s01g0"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_q3b1e"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_2umjo"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_bc86e"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_aswer"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_p67a3"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_oaye5"]
constant = -0.091

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_njeob"]
constant = 0.088

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_k7hrs"]
constant = 0.2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_uxi2h"]
default_input_values = [0, 0.0, 1, 1.96, 2, 0.775]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_p28jl"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vewd3"]
input_name = "uv"

[sub_resource type="VisualShader" id="VisualShader_erwvj"]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// FloatConstant:13
	float n_out13p0 = 1.140000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Input:31
	vec2 n_out31p0 = UV;


// FloatConstant:24
	float n_out24p0 = 0.500000;


// FloatConstant:25
	float n_out25p0 = -0.091000;


	vec4 n_out23p0;
// Expression:23
	n_out23p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out31p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out24p0,n_out24p0 + n_out25p0,d);
		n_out23p0 = vec4(vec3(c),1.0);
	}


// FloatConstant:28
	float n_out28p0 = 0.200000;


// FloatConstant:27
	float n_out27p0 = 0.088000;


	vec4 n_out30p0;
// Expression:30
	n_out30p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out31p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out28p0,n_out28p0 + n_out27p0,d);
		n_out30p0 = vec4(vec3(c),1.0);
	}


// Mix:29
	float n_in29p0 = 0.00000;
	float n_out29p0 = mix(n_in29p0, n_out23p0.x, n_out30p0.x);


// Step:22
	float n_out22p0 = step(n_out14p0, n_out29p0);


// Output:0
	COLOR.a = n_out22p0;


}
"
graph_offset = Vector2(-847.811, 182.034)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 160)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_3680o")
nodes/fragment/11/position = Vector2(-120, -740)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_ic3n3")
nodes/fragment/12/position = Vector2(-2060, -500)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_lp0m1")
nodes/fragment/13/position = Vector2(-2060, -640)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_s01g0")
nodes/fragment/14/position = Vector2(-1740, -420)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_q3b1e")
nodes/fragment/16/position = Vector2(-500, -740)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_2umjo")
nodes/fragment/20/position = Vector2(-460, -540)
nodes/fragment/22/node = SubResource("VisualShaderNodeStep_bc86e")
nodes/fragment/22/position = Vector2(404.503, 382.058)
nodes/fragment/23/node = SubResource("VisualShaderNodeExpression_aswer")
nodes/fragment/23/position = Vector2(-1300, 840)
nodes/fragment/23/size = Vector2(513.781, 284.487)
nodes/fragment/23/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/23/output_ports = "0,5,color;"
nodes/fragment/23/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatConstant_p67a3")
nodes/fragment/24/position = Vector2(-1580, 940)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatConstant_oaye5")
nodes/fragment/25/position = Vector2(-1500, 1040)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatConstant_njeob")
nodes/fragment/27/position = Vector2(-1380, 1540)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatConstant_k7hrs")
nodes/fragment/28/position = Vector2(-1480, 1440)
nodes/fragment/29/node = SubResource("VisualShaderNodeMix_uxi2h")
nodes/fragment/29/position = Vector2(-200, 960)
nodes/fragment/30/node = SubResource("VisualShaderNodeExpression_p28jl")
nodes/fragment/30/position = Vector2(-880, 1500)
nodes/fragment/30/size = Vector2(513.781, 284.487)
nodes/fragment/30/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/30/output_ports = "0,5,color;"
nodes/fragment/30/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/31/node = SubResource("VisualShaderNodeInput_vewd3")
nodes/fragment/31/position = Vector2(-1760, 1320)
nodes/fragment/connections = PackedInt32Array(12, 0, 14, 1, 13, 0, 14, 0, 16, 0, 11, 0, 20, 0, 11, 2, 14, 0, 22, 0, 22, 0, 0, 1, 24, 0, 23, 1, 25, 0, 23, 2, 27, 0, 30, 2, 28, 0, 30, 1, 30, 0, 29, 2, 29, 0, 22, 1, 31, 0, 23, 0, 31, 0, 30, 0, 23, 0, 29, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_g3dkn"]
shader = SubResource("VisualShader_erwvj")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ugtis"]
input_name = "color"

[sub_resource type="Gradient" id="Gradient_q3d34"]
offsets = PackedFloat32Array(0, 0.528875, 0.547112, 0.984802)
colors = PackedColorArray(1, 1, 1, 1, 0.0102558, 0.0102558, 0.0102558, 1, 0.0243161, 0.0243161, 0.0243161, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_wd546"]
gradient = SubResource("Gradient_q3d34")
fill_from = Vector2(0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1lkh7"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_7ufpq"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_64fox"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ntuss"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_axqom"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n2hwl"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_ajuon"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_mut2r"]
constant = 0.1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_v10gc"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_0lx10"]
parameter_name = "Texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_kwkvu"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5nec0"]
input_name = "uv"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_2cs2g"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_jpa6y"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8jgsi"]
constant = 0.897

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_a81ws"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_mckg2"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ddl80"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_353pi"]
constant = 0.64

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_sgdtk"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_kmuxy"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_utsim"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;
uniform sampler2D Texture;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:18
	float n_out18p0 = 0.100000;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out18p0));


// Input:22
	vec2 n_out22p0 = UV;


	vec4 n_out21p0;
// Texture2D:21
	n_out21p0 = texture(Texture, n_out22p0);


// Output:0
	COLOR.rgb = n_out17p0;
	COLOR.a = n_out21p0.x;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(640, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_mckg2")
nodes/fragment/5/position = Vector2(-1720, 900)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_ddl80")
nodes/fragment/6/position = Vector2(-2120, 840)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_353pi")
nodes/fragment/7/position = Vector2(-2000, 1000)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_sgdtk")
nodes/fragment/8/position = Vector2(-1920, 1100)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_kmuxy")
nodes/fragment/9/position = Vector2(-1420, 700)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_ugtis")
nodes/fragment/10/position = Vector2(-600, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_1lkh7")
nodes/fragment/11/position = Vector2(-1360, -680)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_7ufpq")
nodes/fragment/12/position = Vector2(-2860, -320)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_64fox")
nodes/fragment/13/position = Vector2(-2860, -460)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_ntuss")
nodes/fragment/14/position = Vector2(-2540, -240)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_axqom")
nodes/fragment/15/position = Vector2(-1100, 100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_n2hwl")
nodes/fragment/16/position = Vector2(-1940, -920)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_ajuon")
nodes/fragment/17/position = Vector2(-80, -80)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_mut2r")
nodes/fragment/18/position = Vector2(-620, 260)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture2DParameter_v10gc")
nodes/fragment/19/position = Vector2(-1900, -720)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_0lx10")
nodes/fragment/20/position = Vector2(-60, 800)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture_kwkvu")
nodes/fragment/21/position = Vector2(500, 620)
nodes/fragment/22/node = SubResource("VisualShaderNodeInput_5nec0")
nodes/fragment/22/position = Vector2(40, 700)
nodes/fragment/23/node = SubResource("VisualShaderNodeStep_2cs2g")
nodes/fragment/23/position = Vector2(180, 260)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatConstant_jpa6y")
nodes/fragment/24/position = Vector2(-1260, 440)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatConstant_8jgsi")
nodes/fragment/25/position = Vector2(-1260, 300)
nodes/fragment/26/node = SubResource("VisualShaderNodeExpression_a81ws")
nodes/fragment/26/position = Vector2(-940, 520)
nodes/fragment/26/size = Vector2(724.789, 654.559)
nodes/fragment/26/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/26/output_ports = "0,0,Dither_Node;"
nodes/fragment/26/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 12, 0, 14, 1, 13, 0, 14, 0, 14, 0, 15, 1, 18, 0, 17, 2, 16, 0, 11, 0, 19, 0, 11, 2, 10, 0, 17, 0, 15, 0, 17, 1, 17, 0, 0, 0, 11, 0, 15, 0, 20, 0, 21, 2, 22, 0, 21, 0, 24, 0, 26, 1, 25, 0, 26, 0, 26, 0, 23, 0, 21, 0, 0, 1)

[sub_resource type="Gradient" id="Gradient_8nnng"]
offsets = PackedFloat32Array(0, 0.555957, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_2mwp6"]
gradient = SubResource("Gradient_8nnng")
fill_from = Vector2(1, 0)
fill_to = Vector2(0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_amjd8"]
shader = SubResource("VisualShader_utsim")
shader_parameter/Gradiant = SubResource("GradientTexture2D_2mwp6")
shader_parameter/Texture = ExtResource("3_qfgi4")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dx8kb"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_y8sua"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_64qpx"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_aq2fs"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_r8ssv"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_010j7"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hhbkm"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_nyyit"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_m8mqh"]
constant = 0.1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_exvt4"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_rtkj8"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hw75g"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_yoew2"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_plj76"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_7qd6n"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_gvsu8"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = SCREEN_UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:18
	float n_out18p0 = 0.100000;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out18p0));


// Output:0
	COLOR.rgb = n_out17p0;


}
"
graph_offset = Vector2(-1906.17, -871.281)
mode = 1
flags/light_only = false
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_rtkj8")
nodes/fragment/5/position = Vector2(-760, 560)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_hw75g")
nodes/fragment/6/position = Vector2(-1160, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_yoew2")
nodes/fragment/7/position = Vector2(-1040, 660)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_plj76")
nodes/fragment/8/position = Vector2(-960, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_7qd6n")
nodes/fragment/9/position = Vector2(-23.3431, 308.463)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_dx8kb")
nodes/fragment/10/position = Vector2(-600, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_y8sua")
nodes/fragment/11/position = Vector2(-1360, -680)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_64qpx")
nodes/fragment/12/position = Vector2(-2860, -320)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_aq2fs")
nodes/fragment/13/position = Vector2(-2860, -460)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_r8ssv")
nodes/fragment/14/position = Vector2(-2540, -240)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_010j7")
nodes/fragment/15/position = Vector2(-1100, 100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_hhbkm")
nodes/fragment/16/position = Vector2(-1940, -920)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_nyyit")
nodes/fragment/17/position = Vector2(-80, -80)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_m8mqh")
nodes/fragment/18/position = Vector2(-620, 260)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture2DParameter_exvt4")
nodes/fragment/19/position = Vector2(-1900, -720)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 12, 0, 14, 1, 13, 0, 14, 0, 18, 0, 17, 2, 16, 0, 11, 0, 19, 0, 11, 2, 10, 0, 17, 0, 15, 0, 17, 1, 17, 0, 0, 0, 14, 0, 15, 1, 11, 0, 15, 0)

[sub_resource type="Gradient" id="Gradient_nrla2"]
offsets = PackedFloat32Array(0, 0.519856, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_mvtgg"]
gradient = SubResource("Gradient_nrla2")
fill_from = Vector2(1, 1)
fill_to = Vector2(0, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5lomb"]
shader = SubResource("VisualShader_gvsu8")
shader_parameter/Gradiant = SubResource("GradientTexture2D_mvtgg")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jgvvv"]
input_name = "color"

[sub_resource type="Gradient" id="Gradient_wu3n3"]
offsets = PackedFloat32Array(0, 0.528875, 0.547112, 0.984802)
colors = PackedColorArray(1, 1, 1, 1, 0.0102558, 0.0102558, 0.0102558, 1, 0.0243161, 0.0243161, 0.0243161, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_2xai1"]
gradient = SubResource("Gradient_wu3n3")
fill_from = Vector2(0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_a0tbq"]
source = 5
texture = SubResource("GradientTexture2D_2xai1")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cdm5u"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ypf05"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_1bmkn"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_32tbt"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7eewe"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_lm1bn"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ug46v"]
constant = 0.1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_21did"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_psm58"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_x5mon"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5qa2i"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_u68rx"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_xcs0n"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_85gqb"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:18
	float n_out18p0 = 0.100000;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out18p0));


// Input:6
	vec2 n_out6p0 = UV;


// FloatConstant:7
	float n_out7p0 = 0.500000;


// FloatConstant:8
	float n_out8p0 = 0.000000;


	vec4 n_out5p0;
// Expression:5
	n_out5p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out7p0,n_out7p0 + n_out8p0,d);
		n_out5p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:9
	float n_out9p0 = 1.0 - n_out5p0.x;


// Output:0
	COLOR.rgb = n_out17p0;
	COLOR.a = n_out9p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_psm58")
nodes/fragment/5/position = Vector2(-760, 560)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_x5mon")
nodes/fragment/6/position = Vector2(-1160, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_5qa2i")
nodes/fragment/7/position = Vector2(-1040, 660)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_u68rx")
nodes/fragment/8/position = Vector2(-960, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_xcs0n")
nodes/fragment/9/position = Vector2(-23.3431, 308.463)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_jgvvv")
nodes/fragment/10/position = Vector2(-600, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_a0tbq")
nodes/fragment/11/position = Vector2(-1360, -680)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_cdm5u")
nodes/fragment/12/position = Vector2(-2860, -320)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_ypf05")
nodes/fragment/13/position = Vector2(-2860, -460)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_1bmkn")
nodes/fragment/14/position = Vector2(-2540, -240)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_32tbt")
nodes/fragment/15/position = Vector2(-1100, 100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_7eewe")
nodes/fragment/16/position = Vector2(-1940, -920)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_lm1bn")
nodes/fragment/17/position = Vector2(-80, -80)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_ug46v")
nodes/fragment/18/position = Vector2(-620, 260)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture2DParameter_21did")
nodes/fragment/19/position = Vector2(-1900, -720)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 9, 0, 0, 1, 12, 0, 14, 1, 13, 0, 14, 0, 14, 0, 15, 1, 18, 0, 17, 2, 16, 0, 11, 0, 19, 0, 11, 2, 10, 0, 17, 0, 15, 0, 17, 1, 17, 0, 0, 0, 11, 0, 15, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0wfle"]
shader = SubResource("VisualShader_85gqb")
shader_parameter/Gradiant = SubResource("GradientTexture2D_mvtgg")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3cotx"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_sj21e"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ufmug"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_33xy5"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_0yyxd"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_dnaiy"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_35a4c"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_vry00"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_4w4ly"]
constant = 0.1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_xv26y"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_3fprr"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dkur1"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_3hh0k"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8inps"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_hr2jl"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_iy7ta"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:18
	float n_out18p0 = 0.100000;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out18p0));


// Input:6
	vec2 n_out6p0 = UV;


// FloatConstant:7
	float n_out7p0 = 0.500000;


// FloatConstant:8
	float n_out8p0 = 0.000000;


	vec4 n_out5p0;
// Expression:5
	n_out5p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out7p0,n_out7p0 + n_out8p0,d);
		n_out5p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:9
	float n_out9p0 = 1.0 - n_out5p0.x;


// Output:0
	COLOR.rgb = n_out17p0;
	COLOR.a = n_out9p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_3fprr")
nodes/fragment/5/position = Vector2(-760, 560)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_dkur1")
nodes/fragment/6/position = Vector2(-1160, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_3hh0k")
nodes/fragment/7/position = Vector2(-1040, 660)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_8inps")
nodes/fragment/8/position = Vector2(-960, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_hr2jl")
nodes/fragment/9/position = Vector2(-23.3431, 308.463)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_3cotx")
nodes/fragment/10/position = Vector2(-600, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_sj21e")
nodes/fragment/11/position = Vector2(-1360, -680)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_ufmug")
nodes/fragment/12/position = Vector2(-2860, -320)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_33xy5")
nodes/fragment/13/position = Vector2(-2860, -460)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_0yyxd")
nodes/fragment/14/position = Vector2(-2540, -240)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_dnaiy")
nodes/fragment/15/position = Vector2(-1100, 100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_35a4c")
nodes/fragment/16/position = Vector2(-1940, -920)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_vry00")
nodes/fragment/17/position = Vector2(-80, -80)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_4w4ly")
nodes/fragment/18/position = Vector2(-620, 260)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture2DParameter_xv26y")
nodes/fragment/19/position = Vector2(-1900, -720)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 9, 0, 0, 1, 12, 0, 14, 1, 13, 0, 14, 0, 14, 0, 15, 1, 18, 0, 17, 2, 16, 0, 11, 0, 19, 0, 11, 2, 10, 0, 17, 0, 15, 0, 17, 1, 17, 0, 0, 0, 11, 0, 15, 0)

[sub_resource type="Gradient" id="Gradient_0aprj"]
offsets = PackedFloat32Array(0, 0.570397, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_iejkk"]
gradient = SubResource("Gradient_0aprj")
fill_from = Vector2(0.252137, 0.149573)
fill_to = Vector2(0.739316, 0.739316)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nlwb1"]
shader = SubResource("VisualShader_iy7ta")
shader_parameter/Gradiant = SubResource("GradientTexture2D_iejkk")

[sub_resource type="GDScript" id="GDScript_u1faa"]
script/source = "extends Node2D

var blasts : Array
var index : int = 0
func _ready():
	blasts = get_children()	
	
	_global_datas._backFrom_subscene.connect(disable_all)
	_global_datas._go_Subscene.connect(active_all)
	


func disable_all():
	for blast in blasts:
		blast.visible = false
	index = 0
	
func active_all():
	for blast in blasts:
		blast.visible = true
	

func active_by_index():
	index +=1
	blasts[index-1].visible = true

"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_dqrup"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_kwpvr"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_b7ma4"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_py1yl"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_0t2r3"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_0v7e2"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yokdr"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_rfw77"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_24k66"]
constant = 0.1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_wxdfk"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_5hlrs"]
parameter_name = "Texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ptxgs"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e4ub8"]
input_name = "uv"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_dniiv"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_4d5p2"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ml72p"]
constant = 0.897

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_tes8b"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_6xoyj"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pr56p"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_jtvss"]
constant = 0.64

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_djnhr"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_2gbc2"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_qtoyw"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;
uniform sampler2D Texture;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:18
	float n_out18p0 = 0.100000;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out18p0));


// Input:22
	vec2 n_out22p0 = UV;


	vec4 n_out21p0;
// Texture2D:21
	n_out21p0 = texture(Texture, n_out22p0);


// Output:0
	COLOR.rgb = n_out17p0;
	COLOR.a = n_out21p0.x;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(640, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_6xoyj")
nodes/fragment/5/position = Vector2(-1720, 900)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_pr56p")
nodes/fragment/6/position = Vector2(-2120, 840)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_jtvss")
nodes/fragment/7/position = Vector2(-2000, 1000)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_djnhr")
nodes/fragment/8/position = Vector2(-1920, 1100)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_2gbc2")
nodes/fragment/9/position = Vector2(-1420, 700)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_dqrup")
nodes/fragment/10/position = Vector2(-600, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_kwpvr")
nodes/fragment/11/position = Vector2(-1360, -680)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_b7ma4")
nodes/fragment/12/position = Vector2(-2860, -320)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_py1yl")
nodes/fragment/13/position = Vector2(-2860, -460)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_0t2r3")
nodes/fragment/14/position = Vector2(-2540, -240)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_0v7e2")
nodes/fragment/15/position = Vector2(-1100, 100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_yokdr")
nodes/fragment/16/position = Vector2(-1940, -920)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_rfw77")
nodes/fragment/17/position = Vector2(-80, -80)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_24k66")
nodes/fragment/18/position = Vector2(-620, 260)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture2DParameter_wxdfk")
nodes/fragment/19/position = Vector2(-1900, -720)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_5hlrs")
nodes/fragment/20/position = Vector2(-60, 800)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture_ptxgs")
nodes/fragment/21/position = Vector2(500, 620)
nodes/fragment/22/node = SubResource("VisualShaderNodeInput_e4ub8")
nodes/fragment/22/position = Vector2(40, 700)
nodes/fragment/23/node = SubResource("VisualShaderNodeStep_dniiv")
nodes/fragment/23/position = Vector2(180, 260)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatConstant_4d5p2")
nodes/fragment/24/position = Vector2(-1260, 440)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatConstant_ml72p")
nodes/fragment/25/position = Vector2(-1260, 300)
nodes/fragment/26/node = SubResource("VisualShaderNodeExpression_tes8b")
nodes/fragment/26/position = Vector2(-940, 520)
nodes/fragment/26/size = Vector2(724.789, 654.559)
nodes/fragment/26/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/26/output_ports = "0,0,Dither_Node;"
nodes/fragment/26/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 12, 0, 14, 1, 13, 0, 14, 0, 14, 0, 15, 1, 18, 0, 17, 2, 16, 0, 11, 0, 19, 0, 11, 2, 10, 0, 17, 0, 15, 0, 17, 1, 17, 0, 0, 0, 11, 0, 15, 0, 20, 0, 21, 2, 22, 0, 21, 0, 24, 0, 26, 1, 25, 0, 26, 0, 26, 0, 23, 0, 21, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_ty4d2"]
gradient = SubResource("Gradient_0aprj")
fill_from = Vector2(0.230769, 0)
fill_to = Vector2(0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_hxqs5"]
shader = SubResource("VisualShader_qtoyw")
shader_parameter/Gradiant = SubResource("GradientTexture2D_ty4d2")
shader_parameter/Texture = ExtResource("4_530h2")

[sub_resource type="GDScript" id="GDScript_y5o0k"]
script/source = "extends Node

signal  move_behind


func _move_behind():
	move_behind.emit()
"

[sub_resource type="CircleShape2D" id="CircleShape2D_1tlla"]
radius = 63.1472

[node name="Clock" type="Node2D"]
scale = Vector2(1.79872, 1.79872)
script = SubResource("GDScript_xxuca")

[node name="GoSubscene_timer" type="Node" parent="."]
script = SubResource("GDScript_uwuod")

[node name="Timer" type="Timer" parent="GoSubscene_timer"]
wait_time = 0.25

[node name="Timer" type="Timer" parent="."]
wait_time = 30.0

[node name="Take_object" type="Node" parent="."]
script = ExtResource("1_hwa20")

[node name="Apply_pos_anim" type="Node" parent="."]
script = ExtResource("2_utw7r")

[node name="Timer" type="Timer" parent="Apply_pos_anim"]
wait_time = 0.25
one_shot = true

[node name="shadow" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_g3dkn")
offset_left = -52.8153
offset_top = -43.9201
offset_right = 47.1847
offset_bottom = 56.0799
scale = Vector2(1.31675, 1.31675)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.027451, 0.0980392, 0.129412, 1)

[node name="Button" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_amjd8")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -47.2558
offset_top = -111.746
offset_right = 36.7442
offset_bottom = -27.7461
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.429635, 0.429635)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.113725, 0.227451, 0.235294, 1)

[node name="ColorRect7" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_5lomb")
offset_left = -10.0071
offset_top = -65.0462
offset_right = 7.83288
offset_bottom = -60.3563
mouse_filter = 2
color = Color(0.0392157, 0.101961, 0.105882, 1)

[node name="ColorRect4" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_0wfle")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -62.0
offset_top = -62.0
offset_right = 61.0
offset_bottom = 61.0
grow_horizontal = 2
grow_vertical = 2
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.113725, 0.227451, 0.235294, 1)

[node name="ColorRect" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_0wfle")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -59.0
offset_top = -59.0
offset_right = 59.0
offset_bottom = 59.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.96637, 0.96637)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.0627451, 0.145098, 0.152941, 1)

[node name="ColorRect3" type="ColorRect" parent="."]
visible = false
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -51.1475
offset_top = -51.1475
offset_right = 49.8525
offset_bottom = 49.8525
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.867009, 0.867009)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.380392, 0.329412, 0.243137, 1)

[node name="ColorRect5" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -50.0356
offset_top = -50.5915
offset_right = 51.9644
offset_bottom = 51.4085
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.770627, 0.770627)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.576471, 0.513726, 0.4, 1)

[node name="ColorRect8" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -16.1226
offset_top = -16.1226
offset_right = 5.87742
offset_bottom = 5.87742
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.856818, 0.856818)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.482353, 0.423529, 0.321569, 1)

[node name="Dots" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_left = -2.2238
offset_top = -37.8047
offset_right = -2.2238
offset_bottom = -37.8047
scale = Vector2(1.10972, 1.10972)
mouse_filter = 2

[node name="Blast" type="Node2D" parent="Dots"]
position = Vector2(2.00393, 34.0669)
script = SubResource("GDScript_u1faa")

[node name="01" type="ColorRect" parent="Dots/Blast"]
visible = false
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
offset_left = -49.0963
offset_top = -3.50689
offset_right = -15.0963
offset_bottom = 30.4931
scale = Vector2(0.280388, 0.280388)
mouse_filter = 2
color = Color(0.433594, 0.378906, 0.289063, 1)

[node name="02" type="ColorRect" parent="Dots/Blast"]
visible = false
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
offset_left = -4.50885
offset_top = 38.5757
offset_right = 29.4911
offset_bottom = 72.5757
scale = Vector2(0.280388, 0.280388)
mouse_filter = 2
color = Color(0.433594, 0.378906, 0.289063, 1)

[node name="03" type="ColorRect" parent="Dots/Blast"]
visible = false
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
offset_left = 39.0767
offset_top = -4.50884
offset_right = 73.0767
offset_bottom = 29.4911
scale = Vector2(0.280388, 0.280388)
mouse_filter = 2
color = Color(0.433594, 0.378906, 0.289063, 1)

[node name="04" type="ColorRect" parent="Dots/Blast"]
visible = false
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
offset_left = -5.00982
offset_top = -47.5934
offset_right = 28.9902
offset_bottom = -13.5934
scale = Vector2(0.280388, 0.280388)
mouse_filter = 2
color = Color(0.433594, 0.378906, 0.289063, 1)

[node name="ColorRect5" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = -0.500984
offset_top = 3.05176e-05
offset_right = 33.499
offset_bottom = 34.0
scale = Vector2(0.164157, 0.164157)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect6" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = -0.500986
offset_top = 63.1239
offset_right = 33.499
offset_bottom = 97.1239
scale = Vector2(0.164157, 0.164157)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect7" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = 30.56
offset_top = 31.0
offset_right = 64.56
offset_bottom = 65.0
scale = Vector2(0.164157, 0.164157)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect8" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = -31.5619
offset_top = 31.562
offset_right = 1.43806
offset_bottom = 64.562
scale = Vector2(0.164157, 0.164157)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect9" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = -27.7975
offset_top = 20.0142
offset_right = -3.79755
offset_bottom = 44.0142
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect10" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = -17.7904
offset_top = 7.78329
offset_right = 6.20956
offset_bottom = 31.7833
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect11" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = 31.1333
offset_top = 20.0142
offset_right = 55.1333
offset_bottom = 44.0142
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect12" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = 22.238
offset_top = 7.78329
offset_right = 46.238
offset_bottom = 31.7833
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect13" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = -27.7975
offset_top = 47.8118
offset_right = -3.79755
offset_bottom = 71.8118
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect15" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = 31.1333
offset_top = 47.8118
offset_right = 55.1333
offset_bottom = 71.8118
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect16" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = 22.238
offset_top = 60.5986
offset_right = 46.238
offset_bottom = 84.5986
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="ColorRect14" type="ColorRect" parent="Dots"]
light_mask = 3
material = SubResource("ShaderMaterial_nlwb1")
layout_mode = 0
offset_left = -17.7904
offset_top = 60.5986
offset_right = 6.20956
offset_bottom = 84.5986
scale = Vector2(0.0762063, 0.0762063)
mouse_filter = 2
color = Color(0.015625, 0.109375, 0.121094, 1)

[node name="Clock_root" type="Node2D" parent="."]

[node name="Aiguille" type="ColorRect" parent="Clock_root"]
light_mask = 3
material = SubResource("ShaderMaterial_hxqs5")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -46.1439
offset_top = -58.9308
offset_right = 37.8561
offset_bottom = 25.0692
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.482615, 0.482615)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.015625, 0.121094, 0.136719, 1)

[node name="Area2D" type="Area2D" parent="."]
position = Vector2(0, 0.00012207)

[node name="Apply_pos_behind" type="Node" parent="Area2D"]
script = SubResource("GDScript_y5o0k")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
visible = false
position = Vector2(-0.977112, 0.213074)
shape = SubResource("CircleShape2D_1tlla")

[connection signal="timeout" from="GoSubscene_timer/Timer" to="GoSubscene_timer" method="_on_timer_timeout"]
[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
[connection signal="pos_anim" from="Take_object" to="Apply_pos_anim" method="_on_take_object_pos_anim"]
[connection signal="timeout" from="Apply_pos_anim/Timer" to="Apply_pos_anim" method="_on_timer_timeout"]
[connection signal="mouse_entered" from="Area2D" to="Take_object" method="_on_area_2d_mouse_entered"]
[connection signal="mouse_exited" from="Area2D" to="Take_object" method="_on_area_2d_mouse_exited"]
[connection signal="move_behind" from="Area2D/Apply_pos_behind" to="Apply_pos_anim" method="_on_apply_pos_behind_move_behind"]
