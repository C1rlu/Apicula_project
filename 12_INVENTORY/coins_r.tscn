[gd_scene load_steps=74 format=3 uid="uid://by7rfopxdjwq"]

[ext_resource type="Script" path="res://12_INVENTORY/Behaviour/Movable_paper.tres.gd" id="1_4j1j7"]
[ext_resource type="Script" path="res://12_INVENTORY/Behaviour/Apply_pos_anim.gd" id="2_guse4"]

[sub_resource type="GDScript" id="GDScript_elddd"]
script/source = "extends Node
@onready var main_root = $\"..\"

@onready var timer = $Timer

var start_pos : Vector2
var dir : Vector2


func _push():
	
	
	var target = get_viewport().get_camera_3d().unproject_position(_global_datas.subbscene_playerPosition)
	target = Vector2(target.x,target.y - 80)
	#var random_x = randf_range(-50.0, 50.0)
	#start_pos = Vector2(main_root.global_position.x,main_root.global_position.y)
	start_pos = get_viewport().get_mouse_position()
	#var random_y = randf_range(50, 80)
	#dir = (target - start_pos).normalized()
	dir = target 
	
	var random_wait_time =  randf_range(0.15, 0.25)
	timer.wait_time = random_wait_time
	timer.start()	

func _push_b():
	
	start_pos = Vector2(main_root.global_position.x,main_root.global_position.y)
	
	var random_x = randf_range(-150.0, 150.0)
	var random_y = randf_range(150, 200)
	dir = Vector2(start_pos.x + random_x,start_pos.y - random_y) 
	
	var random_wait_time =  randf_range(0.15, 0.25)
	timer.wait_time = random_wait_time
	timer.start()	
	
func _process(delta):
	
	if timer.is_stopped():
		return
	main_root.global_position = lerp(start_pos,dir,1-timer.time_left / timer.wait_time)	


func _on_timer_timeout():
	timer.stop()
"

[sub_resource type="Gradient" id="Gradient_l1cst"]
offsets = PackedFloat32Array(0, 0.528875, 0.547112, 0.984802)
colors = PackedColorArray(1, 1, 1, 1, 0.0102558, 0.0102558, 0.0102558, 1, 0.0243161, 0.0243161, 0.0243161, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_wd546"]
gradient = SubResource("Gradient_l1cst")
fill_from = Vector2(0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_y4vqy"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_qyew8"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ok5yi"]
constant = 1.14

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_fcnci"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5gmr0"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_bvhns"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_4cdlh"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_3ye03"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cy3an"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cr4ax"]
constant = -0.091

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_k36jh"]
constant = 0.088

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_fo482"]
constant = 0.2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_u6iy8"]
default_input_values = [0, 0.0, 1, 1.96, 2, 0.775]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ettni"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_liq6r"]
input_name = "uv"

[sub_resource type="VisualShader" id="VisualShader_b6ycs"]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// FloatConstant:13
	float n_out13p0 = 1.140000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Input:31
	vec2 n_out31p0 = UV;


// FloatConstant:24
	float n_out24p0 = 0.500000;


// FloatConstant:25
	float n_out25p0 = -0.091000;


	vec4 n_out23p0;
// Expression:23
	n_out23p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out31p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out24p0,n_out24p0 + n_out25p0,d);
		n_out23p0 = vec4(vec3(c),1.0);
	}


// FloatConstant:28
	float n_out28p0 = 0.200000;


// FloatConstant:27
	float n_out27p0 = 0.088000;


	vec4 n_out30p0;
// Expression:30
	n_out30p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out31p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out28p0,n_out28p0 + n_out27p0,d);
		n_out30p0 = vec4(vec3(c),1.0);
	}


// Mix:29
	float n_in29p0 = 0.00000;
	float n_out29p0 = mix(n_in29p0, n_out23p0.x, n_out30p0.x);


// Step:22
	float n_out22p0 = step(n_out14p0, n_out29p0);


// Output:0
	COLOR.a = n_out22p0;


}
"
graph_offset = Vector2(-847.811, 182.034)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 160)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_y4vqy")
nodes/fragment/11/position = Vector2(-120, -740)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_qyew8")
nodes/fragment/12/position = Vector2(-2060, -500)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_ok5yi")
nodes/fragment/13/position = Vector2(-2060, -640)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_fcnci")
nodes/fragment/14/position = Vector2(-1740, -420)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_5gmr0")
nodes/fragment/16/position = Vector2(-500, -740)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_bvhns")
nodes/fragment/20/position = Vector2(-460, -540)
nodes/fragment/22/node = SubResource("VisualShaderNodeStep_4cdlh")
nodes/fragment/22/position = Vector2(404.503, 382.058)
nodes/fragment/23/node = SubResource("VisualShaderNodeExpression_3ye03")
nodes/fragment/23/position = Vector2(-1300, 840)
nodes/fragment/23/size = Vector2(513.781, 284.487)
nodes/fragment/23/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/23/output_ports = "0,5,color;"
nodes/fragment/23/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatConstant_cy3an")
nodes/fragment/24/position = Vector2(-1580, 940)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatConstant_cr4ax")
nodes/fragment/25/position = Vector2(-1500, 1040)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatConstant_k36jh")
nodes/fragment/27/position = Vector2(-1380, 1540)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatConstant_fo482")
nodes/fragment/28/position = Vector2(-1480, 1440)
nodes/fragment/29/node = SubResource("VisualShaderNodeMix_u6iy8")
nodes/fragment/29/position = Vector2(-200, 960)
nodes/fragment/30/node = SubResource("VisualShaderNodeExpression_ettni")
nodes/fragment/30/position = Vector2(-880, 1500)
nodes/fragment/30/size = Vector2(513.781, 284.487)
nodes/fragment/30/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/30/output_ports = "0,5,color;"
nodes/fragment/30/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/31/node = SubResource("VisualShaderNodeInput_liq6r")
nodes/fragment/31/position = Vector2(-1760, 1320)
nodes/fragment/connections = PackedInt32Array(12, 0, 14, 1, 13, 0, 14, 0, 16, 0, 11, 0, 20, 0, 11, 2, 14, 0, 22, 0, 22, 0, 0, 1, 24, 0, 23, 1, 25, 0, 23, 2, 27, 0, 30, 2, 28, 0, 30, 1, 30, 0, 29, 2, 29, 0, 22, 1, 31, 0, 23, 0, 31, 0, 30, 0, 23, 0, 29, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1ms6u"]
shader = SubResource("VisualShader_b6ycs")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6eqd4"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_vvwei"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_4oeua"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_t7to4"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_34xvq"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_c0ic6"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y6awn"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_emuj0"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ovfs4"]
constant = -0.073

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_8jvmo"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_il121"]
constant = 0.001

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_k0jkb"]
constant = 0.2

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_44qsn"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_m2jae"]
default_input_values = [0, 0.0, 1, 1.96, 2, 0.775]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_wxqlc"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3jgxi"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_nyyfi"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_wrcjx"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_wfapn"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_4if6y"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:19
	float n_out19p0 = -0.073000;


// Mix:18
	vec3 n_out18p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out19p0));


// Input:6
	vec2 n_out6p0 = UV;


// FloatConstant:7
	float n_out7p0 = 0.500000;


// FloatConstant:8
	float n_out8p0 = 0.000000;


	vec4 n_out5p0;
// Expression:5
	n_out5p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out7p0,n_out7p0 + n_out8p0,d);
		n_out5p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:9
	float n_out9p0 = 1.0 - n_out5p0.x;


// FloatConstant:22
	float n_out22p0 = 0.200000;


// FloatConstant:21
	float n_out21p0 = 0.001000;


	vec4 n_out23p0;
// Expression:23
	n_out23p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out22p0,n_out22p0 + n_out21p0,d);
		n_out23p0 = vec4(vec3(c),1.0);
	}


// Mix:24
	float n_in24p0 = 0.00000;
	float n_out24p0 = mix(n_in24p0, n_out9p0, n_out23p0.x);


// Output:0
	COLOR.rgb = n_out18p0;
	COLOR.a = n_out24p0;


}
"
graph_offset = Vector2(-511.052, 17.0045)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(600, 260)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_wxqlc")
nodes/fragment/5/position = Vector2(-760, 560)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_3jgxi")
nodes/fragment/6/position = Vector2(-1160, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_nyyfi")
nodes/fragment/7/position = Vector2(-1040, 660)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_wrcjx")
nodes/fragment/8/position = Vector2(-960, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_wfapn")
nodes/fragment/9/position = Vector2(-23.3431, 308.463)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_6eqd4")
nodes/fragment/10/position = Vector2(180, -300)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_vvwei")
nodes/fragment/11/position = Vector2(-120, -740)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_4oeua")
nodes/fragment/12/position = Vector2(-1900, -540)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_t7to4")
nodes/fragment/13/position = Vector2(-1900, -680)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_34xvq")
nodes/fragment/14/position = Vector2(-1580, -460)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_c0ic6")
nodes/fragment/15/position = Vector2(12.11, -72.5138)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_y6awn")
nodes/fragment/16/position = Vector2(-500, -740)
nodes/fragment/18/node = SubResource("VisualShaderNodeMix_emuj0")
nodes/fragment/18/position = Vector2(540, -220)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatConstant_ovfs4")
nodes/fragment/19/position = Vector2(82.9683, 139.635)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_8jvmo")
nodes/fragment/20/position = Vector2(-460, -540)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatConstant_il121")
nodes/fragment/21/position = Vector2(-840, 1260)
nodes/fragment/22/node = SubResource("VisualShaderNodeFloatConstant_k0jkb")
nodes/fragment/22/position = Vector2(-940, 1160)
nodes/fragment/23/node = SubResource("VisualShaderNodeExpression_44qsn")
nodes/fragment/23/position = Vector2(-340, 1220)
nodes/fragment/23/size = Vector2(513.781, 284.487)
nodes/fragment/23/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/23/output_ports = "0,5,color;"
nodes/fragment/23/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/24/node = SubResource("VisualShaderNodeMix_m2jae")
nodes/fragment/24/position = Vector2(340, 680)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 12, 0, 14, 1, 13, 0, 14, 0, 11, 0, 15, 0, 14, 0, 15, 1, 18, 0, 0, 0, 19, 0, 18, 2, 15, 0, 18, 1, 10, 0, 18, 0, 16, 0, 11, 0, 20, 0, 11, 2, 21, 0, 23, 2, 22, 0, 23, 1, 9, 0, 24, 1, 23, 0, 24, 2, 24, 0, 0, 1, 6, 0, 23, 0)

[sub_resource type="Gradient" id="Gradient_yslo6"]
offsets = PackedFloat32Array(0, 0.67148, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_i2dxw"]
gradient = SubResource("Gradient_yslo6")
fill_from = Vector2(0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_y4cc2"]
shader = SubResource("VisualShader_4if6y")
shader_parameter/Gradiant = SubResource("GradientTexture2D_i2dxw")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e0b4e"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_sp72b"]
source = 5
texture = SubResource("GradientTexture2D_wd546")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_n6yss"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_2mktw"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ts325"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_sx1sr"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_56wwj"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_reju2"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_vxyl1"]
constant = -0.073

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_qqnnj"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_faa2y"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_nqvyt"]
default_input_values = [0, 1.0, 1, 1.96, 2, 0.775]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_855bv"]
constant = 0.001

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_7lp31"]
constant = 0.25

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_3xikt"]
parameter_name = "Inscription"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ud6x8"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_4fm1k"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1.8]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ohite"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_w3t4k"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_kr5ab"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_pls77"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_dhhp8"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_8efh3"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:19
	float n_out19p0 = -0.073000;


// Mix:18
	vec3 n_out18p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out19p0));


// Input:6
	vec2 n_out6p0 = UV;


// FloatConstant:7
	float n_out7p0 = 0.500000;


// FloatConstant:8
	float n_out8p0 = 0.000000;


	vec4 n_out5p0;
// Expression:5
	n_out5p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out7p0,n_out7p0 + n_out8p0,d);
		n_out5p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:9
	float n_out9p0 = 1.0 - n_out5p0.x;


// FloatConstant:26
	float n_out26p0 = 0.250000;


// FloatConstant:25
	float n_out25p0 = 0.001000;


	vec4 n_out22p0;
// Expression:22
	n_out22p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out26p0,n_out26p0 + n_out25p0,d);
		n_out22p0 = vec4(vec3(c),1.0);
	}


// Mix:23
	float n_in23p0 = 1.00000;
	float n_out23p0 = mix(n_in23p0, n_out9p0, n_out22p0.x);


// Output:0
	COLOR.rgb = n_out18p0;
	COLOR.a = n_out23p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1660, 240)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_ohite")
nodes/fragment/5/position = Vector2(-740, 560)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_w3t4k")
nodes/fragment/6/position = Vector2(-1160, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_kr5ab")
nodes/fragment/7/position = Vector2(-1040, 660)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_pls77")
nodes/fragment/8/position = Vector2(-960, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_dhhp8")
nodes/fragment/9/position = Vector2(-23.3431, 308.463)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_e0b4e")
nodes/fragment/10/position = Vector2(520, -260)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_sp72b")
nodes/fragment/11/position = Vector2(-680, -1080)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_n6yss")
nodes/fragment/12/position = Vector2(-2900, -680)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_2mktw")
nodes/fragment/13/position = Vector2(-2900, -820)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_ts325")
nodes/fragment/14/position = Vector2(-2580, -600)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_sx1sr")
nodes/fragment/15/position = Vector2(12.11, -72.5138)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_56wwj")
nodes/fragment/16/position = Vector2(-1060, -1080)
nodes/fragment/18/node = SubResource("VisualShaderNodeMix_reju2")
nodes/fragment/18/position = Vector2(1040, -260)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatConstant_vxyl1")
nodes/fragment/19/position = Vector2(500, 80)
nodes/fragment/20/node = SubResource("VisualShaderNodeTexture2DParameter_qqnnj")
nodes/fragment/20/position = Vector2(-1020, -880)
nodes/fragment/22/node = SubResource("VisualShaderNodeExpression_faa2y")
nodes/fragment/22/position = Vector2(0, 1160)
nodes/fragment/22/size = Vector2(513.781, 284.487)
nodes/fragment/22/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/22/output_ports = "0,5,color;"
nodes/fragment/22/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/23/node = SubResource("VisualShaderNodeMix_nqvyt")
nodes/fragment/23/position = Vector2(640, 560)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatConstant_855bv")
nodes/fragment/25/position = Vector2(-500, 1200)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatConstant_7lp31")
nodes/fragment/26/position = Vector2(-595.971, 1089.58)
nodes/fragment/27/node = SubResource("VisualShaderNodeTexture2DParameter_3xikt")
nodes/fragment/27/position = Vector2(-320, -1100)
nodes/fragment/28/node = SubResource("VisualShaderNodeTexture_ud6x8")
nodes/fragment/28/position = Vector2(80, -1080)
nodes/fragment/29/node = SubResource("VisualShaderNodeMix_4fm1k")
nodes/fragment/29/position = Vector2(226.057, -565.496)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 12, 0, 14, 1, 13, 0, 14, 0, 19, 0, 18, 2, 16, 0, 11, 0, 20, 0, 11, 2, 10, 0, 18, 0, 18, 0, 0, 0, 15, 0, 18, 1, 25, 0, 22, 2, 6, 0, 22, 0, 26, 0, 22, 1, 27, 0, 28, 2, 28, 0, 29, 0, 11, 0, 15, 0, 14, 0, 15, 1, 9, 0, 23, 1, 22, 0, 23, 2, 23, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_4ym3a"]
gradient = SubResource("Gradient_yslo6")
fill_from = Vector2(0.303419, 0.74359)
fill_to = Vector2(0.782051, 0.252137)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_le8i1"]
shader = SubResource("VisualShader_8efh3")
shader_parameter/Gradiant = SubResource("GradientTexture2D_4ym3a")

[sub_resource type="GDScript" id="GDScript_t15r3"]
script/source = "extends Node2D


@onready var pin : Array = get_children()


var random_pin : int
var lock_random = false

func _ready():
	_disable_all_pin()	
	
func _random_pin():
	
	# hide all first
	_disable_all_pin()
	
	if !lock_random : 
		random_pin = randi_range(0, pin.size()-1)
		lock_random = true
		
	# show only random number index
	pin[random_pin].visible = true
		
		
func _disable_all_pin():

	for element in pin:
		element.visible = false		
"

[sub_resource type="GDScript" id="GDScript_fyyax"]
script/source = "extends Node

signal  move_behind


func _move_behind():
	move_behind.emit()
"

[sub_resource type="CircleShape2D" id="CircleShape2D_ox1q2"]
radius = 75.0067

[node name="Coins" type="Node2D"]
scale = Vector2(0.9, 0.9)

[node name="Push" type="Node" parent="."]
script = SubResource("GDScript_elddd")

[node name="Timer" type="Timer" parent="Push"]
wait_time = 0.5

[node name="Take_object" type="Node" parent="."]
script = ExtResource("1_4j1j7")
scale_in_loupe = 3.0

[node name="Apply_pos_anim" type="Node" parent="."]
script = ExtResource("2_guse4")

[node name="shadow" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_1ms6u")
offset_left = -56.0
offset_top = -42.0
offset_right = 44.0
offset_bottom = 58.0
scale = Vector2(1.24254, 1.24254)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.0588235, 0.113725, 0.137255, 1)

[node name="ColorRect" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_y4cc2")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -62.5
offset_top = -62.5
offset_right = 62.5
offset_bottom = 62.5
grow_horizontal = 2
grow_vertical = 2
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.313726, 0.294118, 0.2, 1)

[node name="ColorRect2" type="ColorRect" parent="."]
light_mask = 3
material = SubResource("ShaderMaterial_le8i1")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -61.5
offset_top = -61.5
offset_right = 63.5
offset_bottom = 63.5
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.925229, 0.925229)
pivot_offset = Vector2(50, 50)
mouse_filter = 2
color = Color(0.372549, 0.341176, 0.207843, 1)

[node name="Pin_book" type="Node2D" parent="."]
position = Vector2(33.6667, -39.3333)
script = SubResource("GDScript_t15r3")

[node name="ColorRect3" type="ColorRect" parent="Pin_book"]
offset_left = -54.6667
offset_top = -38.6667
offset_right = -33.6667
offset_bottom = -4.66669
rotation = -0.19199
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect4" type="ColorRect" parent="Pin_book"]
offset_left = -19.6667
offset_top = -36.6667
offset_right = 1.33331
offset_bottom = -2.66669
rotation = 0.255582
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect5" type="ColorRect" parent="Pin_book"]
offset_left = -37.6667
offset_top = -42.6667
offset_right = -16.6667
offset_bottom = -8.66669
rotation = 0.122938
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect6" type="ColorRect" parent="Pin_book"]
offset_left = -37.6667
offset_top = -45.6667
offset_right = -16.6667
offset_bottom = -11.6667
rotation = 0.0836047
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="Area2D" type="Area2D" parent="."]

[node name="Apply_pos_behind" type="Node" parent="Area2D"]
script = SubResource("GDScript_fyyax")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
visible = false
shape = SubResource("CircleShape2D_ox1q2")

[connection signal="timeout" from="Push/Timer" to="Push" method="_on_timer_timeout"]
[connection signal="mouse_entered" from="Area2D" to="Take_object" method="_on_area_2d_mouse_entered"]
[connection signal="mouse_exited" from="Area2D" to="Take_object" method="_on_area_2d_mouse_exited"]
[connection signal="move_behind" from="Area2D/Apply_pos_behind" to="Apply_pos_anim" method="_on_apply_pos_behind_move_behind"]
