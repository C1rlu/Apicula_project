[gd_scene load_steps=21 format=3 uid="uid://cgb4c1n0bj2at"]

[ext_resource type="PackedScene" uid="uid://d1qrohq4a6bus" path="res://12_INVENTORY/Book/Page_flip/Page_flip_right.glb" id="1_75j24"]

[sub_resource type="GDScript" id="GDScript_ahbli"]
script/source = "extends Node3D


signal turn_page
"

[sub_resource type="GDScript" id="GDScript_hjljc"]
script/source = "extends Node

@onready var root = $\"..\"
@onready var animation_player = $\"../AnimationPlayer\"

func _turn_page():
	animation_player.play(\"Key_001Action\")	
	
func _on_animation_player_animation_finished(anim_name):
	root.queue_free()		

func _on_page_flip_right_turn_page():
	_turn_page()
"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_rt3or"]
parameter_name = "Gradient"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_d0cah"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_wstcn"]
parameter_name = "link_opacity"
qualifier = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_qy77p"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ea31r"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_hvmpm"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_nxgyf"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_7mbin"]
constant = 0.389

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_psdk0"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_587ra"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_1raoo"]
parameter_name = "Darker"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_i8uwd"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0lmpe"]
source = 5

[sub_resource type="VisualShader" id="VisualShader_wnmu0"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform vec4 ColorParameter : source_color;
uniform vec4 Darker : source_color;
uniform sampler2D Gradient;
global uniform float link_opacity;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// ColorParameter:7
	vec4 n_out7p0 = Darker;


// Input:11
	vec2 n_out11p0 = UV;


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(Gradient, n_out11p0);


// FloatConstant:4
	float n_out4p0 = 0.389000;


// FloatConstant:3
	float n_out3p0 = 0.400000;


	float n_out5p0;
// Expression:5
	n_out5p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out3p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out5p0 = n_out4p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_out6p0 = step(n_out9p0.x, n_out5p0);


// Mix:8
	vec3 n_out8p0 = mix(vec3(n_out2p0.xyz), vec3(n_out7p0.xyz), vec3(n_out6p0));


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		float luminance = 0.299 * n_out8p0.x + 0.587 * n_out8p0.y + 0.114 * n_out8p0.z;
		n_out14p0 = luminance;
	}


// FloatParameter:12
	float n_out12p0 = link_opacity;


// Mix:13
	vec3 n_out13p0 = mix(n_out8p0, vec3(n_out14p0), vec3(n_out12p0));


// Output:0
	ALBEDO = n_out13p0;


}
"
graph_offset = Vector2(-322.197, -348.633)
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(380, 240)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_hvmpm")
nodes/fragment/2/position = Vector2(-460, -20)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatConstant_nxgyf")
nodes/fragment/3/position = Vector2(-1600, 600)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatConstant_7mbin")
nodes/fragment/4/position = Vector2(-1600, 420)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_psdk0")
nodes/fragment/5/position = Vector2(-1200, 600)
nodes/fragment/5/size = Vector2(724.789, 654.559)
nodes/fragment/5/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/5/output_ports = "0,0,Dither_Node;"
nodes/fragment/5/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_587ra")
nodes/fragment/6/position = Vector2(-120, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_1raoo")
nodes/fragment/7/position = Vector2(-840, 140)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_i8uwd")
nodes/fragment/8/position = Vector2(-14.5749, 83.0822)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_0lmpe")
nodes/fragment/9/position = Vector2(-1060, 300)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture2DParameter_rt3or")
nodes/fragment/10/position = Vector2(-1660, 80)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_d0cah")
nodes/fragment/11/position = Vector2(-1300, 120)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatParameter_wstcn")
nodes/fragment/12/position = Vector2(123.308, -88.7206)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_qy77p")
nodes/fragment/13/position = Vector2(763.308, -228.721)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_ea31r")
nodes/fragment/14/position = Vector2(-16.6922, -428.721)
nodes/fragment/14/size = Vector2(620, 200)
nodes/fragment/14/input_ports = "0,4,color;"
nodes/fragment/14/output_ports = "0,0,grey_value;"
nodes/fragment/14/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 1, 4, 0, 5, 0, 5, 0, 6, 1, 2, 0, 8, 0, 7, 0, 8, 1, 10, 0, 9, 2, 9, 0, 6, 0, 6, 0, 8, 2, 11, 0, 9, 0, 12, 0, 13, 2, 14, 0, 13, 1, 8, 0, 14, 0, 8, 0, 13, 0, 13, 0, 0, 0)

[sub_resource type="Gradient" id="Gradient_lpoqh"]
offsets = PackedFloat32Array(0.552036, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_385hh"]
gradient = SubResource("Gradient_lpoqh")
fill_from = Vector2(0.538462, 1)
fill_to = Vector2(0.491453, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4uk4y"]
render_priority = 0
shader = SubResource("VisualShader_wnmu0")
shader_parameter/ColorParameter = Color(0.541176, 0.501961, 0.427451, 1)
shader_parameter/Darker = Color(0.376471, 0.345098, 0.290196, 1)
shader_parameter/Gradient = SubResource("GradientTexture2D_385hh")

[node name="Page_flip_right" instance=ExtResource("1_75j24")]
script = SubResource("GDScript_ahbli")

[node name="Anim" type="Node" parent="." index="0"]
script = SubResource("GDScript_hjljc")

[node name="page" parent="." index="1"]
layers = 2
cast_shadow = 0
surface_material_override/0 = SubResource("ShaderMaterial_4uk4y")

[node name="AnimationPlayer" parent="." index="2"]
speed_scale = 2.0

[connection signal="turn_page" from="." to="Anim" method="_on_page_flip_right_turn_page"]
[connection signal="animation_finished" from="AnimationPlayer" to="Anim" method="_on_animation_player_animation_finished"]
