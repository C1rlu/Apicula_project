[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://bhctfh42jxjgh"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_jafiu"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_6eity"]
size = Vector2(634.014, 470.339)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2r7au"]
parameter_name = "Dither_size"
qualifier = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_50g6t"]
parameter_name = "Opacity"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_yqkrr"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_gs0rr"]
constant = Color(0.0257031, 0.185156, 0.209569, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hd0qn"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ag3rd"]
source = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Opacity : hint_range(0, 1) = 1;
global uniform float Dither_size;



void fragment() {
// ColorConstant:7
	vec4 n_out7p0 = vec4(0.025703, 0.185156, 0.209569, 1.000000);


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(TEXTURE, UV);


// FloatParameter:5
	float n_out5p0 = Opacity;


// FloatParameter:4
	float n_out4p0 = Dither_size;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out4p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out3p0 = n_out5p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_in6p0 = 0.00000;
	float n_out6p0 = step(n_in6p0, n_out3p0);


// Mix:10
	vec3 n_out10p0 = mix(vec3(n_out7p0.xyz), vec3(n_out9p0.xyz), vec3(n_out6p0));


// Output:0
	COLOR.rgb = n_out10p0;


}
"
graph_offset = Vector2(-664.77, -338.587)
mode = 1
flags/light_only = false
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_6eity")
nodes/fragment/3/position = Vector2(-620, 220)
nodes/fragment/3/size = Vector2(634.014, 470.339)
nodes/fragment/3/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/3/output_ports = "0,0,Dither_Node;"
nodes/fragment/3/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_2r7au")
nodes/fragment/4/position = Vector2(-1020, 540)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_50g6t")
nodes/fragment/5/position = Vector2(-1320, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_yqkrr")
nodes/fragment/6/position = Vector2(120, 180)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_gs0rr")
nodes/fragment/7/position = Vector2(160, -260)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_hd0qn")
nodes/fragment/8/position = Vector2(-460, -340)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_ag3rd")
nodes/fragment/9/position = Vector2(-180, -320)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_jafiu")
nodes/fragment/10/position = Vector2(327.619, -169.565)
nodes/fragment/connections = PackedInt32Array(5, 0, 3, 0, 4, 0, 3, 1, 3, 0, 6, 1, 8, 0, 9, 2, 6, 0, 10, 2, 10, 0, 0, 0, 7, 0, 10, 0, 9, 0, 10, 1)
