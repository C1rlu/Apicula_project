[gd_scene load_steps=102 format=3 uid="uid://dmg5brvcww8lq"]

[ext_resource type="Script" path="res://12_INVENTORY/Change_cursor.gd" id="1_8ci41"]
[ext_resource type="PackedScene" uid="uid://dyfif7fbf51gx" path="res://12_INVENTORY/Book/Book_prefab.tscn" id="1_mrfq4"]
[ext_resource type="PackedScene" uid="uid://dr7pcue70x0dt" path="res://10_BOARD/Behaviour/Photo_square_prefabs.tscn" id="2_3xfr3"]
[ext_resource type="PackedScene" uid="uid://bjy34o0nbhbc3" path="res://12_INVENTORY/Map_ui/Map_ui.tscn" id="3_fbqjn"]
[ext_resource type="Script" path="res://10_BOARD/Behaviour/Movable_paper.tres.gd" id="3_yssyu"]
[ext_resource type="Script" path="res://10_BOARD/Behaviour/Apply_pos_anim.gd" id="4_ueoox"]
[ext_resource type="PackedScene" uid="uid://by7rfopxdjwq" path="res://12_INVENTORY/coins_r.tscn" id="5_6qspm"]
[ext_resource type="PackedScene" uid="uid://bba4phbllf3f8" path="res://12_INVENTORY/coins.tscn" id="6_iwb8l"]
[ext_resource type="PackedScene" uid="uid://clc3sbquuu1us" path="res://12_INVENTORY/Clock_montre/Clock_oxygene_prefab.tscn" id="7_ci51x"]

[sub_resource type="GDScript" id="GDScript_mh7vf"]
script/source = "extends Node

@onready var control = $Control
@onready var board = $Control/Board

func _ready():


	_global_datas._open_dialogue.connect(_hide)
	_global_datas._close_dialogue.connect(_show)
	_global_datas._go_Subscene.connect(_hide)
	_global_datas._backFrom_subscene.connect(_show)
	control.visible = true
	
func _hide_2d_enventory():
	control.visible = false
	
func _show_2d_enventory():
	control.visible = true


func _show():

	board.visible = true

func _hide():

	board.visible = false
"

[sub_resource type="GDScript" id="GDScript_huuan"]
script/source = "extends Node


@onready var coins_group = $\"../Control/Coins_group\"
@onready var instance_pos = $\"../Control/Coins_group/instance_pos\"
@onready var timer = $Timer


func _ready():
	_global_datas._find_loot.connect(_add_inventory)	
	_global_datas._backFrom_subscene.connect(start_timer)



func clear_inventory():
	_global_datas.loot_from_subscene.clear()	


func start_timer():
	if _global_datas.loot_from_subscene.size() > 0:	
		timer.start()
		
func instance_loot():
	
	for element in _global_datas.loot_from_subscene:
		_intance_loot_bottom(element)
	clear_inventory()
		
		
func _add_inventory(type : Loot_Data):
	_global_datas.loot_from_subscene.append(type)
	print(\"type\",\" is add in inventory\")
	
func _intance_loot_bottom(type : Loot_Data):
	
	var new_node = type.prefabs.instantiate()
	coins_group.add_child(new_node)

	var random_angle = randf_range(-6.0, 6.0)
	new_node.rotation_degrees = random_angle
	new_node.position = instance_pos.global_position
	new_node.get_node(\"Push\")._push_b()
	


func _on_timer_timeout():
	instance_loot()
"

[sub_resource type="GDScript" id="GDScript_om7tc"]
script/source = "extends Node

@onready var photo_prefab = preload(\"res://10_BOARD/Behaviour/Photo_square_prefabs.tscn\")
@onready var photo_group = $\"../Control/Photo_group\"
var _mirror_contact : bool = false

func _ready():
	_global_datas._take_photo.connect(_intance_photo)	
	
	_global_datas.player_mirror_contact.connect(func(condition):
		_mirror_contact = condition
	)
	
func _intance_photo():

	if _mirror_contact:
		return

	var new_node = photo_prefab.instantiate()
	photo_group.add_child(new_node)
	
	#var screen_center = Vector2(1920.0 / 2.0, 1080.0/ 2.0)
	var random_angle = randf_range(-6.0, 6.0)
	new_node.rotation_degrees = random_angle
	new_node.position = _global_datas._photo_position
	
"

[sub_resource type="GDScript" id="GDScript_wd62i"]
script/source = "extends Node

@onready var words_note_prefab = preload(\"res://12_INVENTORY/Words_note/note_words_prefab.tscn\")
@onready var words_note = $\"../Control/Words_note\"




func _ready():
	_global_datas.instance_word_text = self
	
func _intance_words_note(value : String, name_words : String):
	
	print(\"INSTANCE NOTE\")
	var new_node = words_note_prefab.instantiate()
	words_note.add_child(new_node)
	
	var screen_center = Vector2(1920.0 / 2.0, 1080/ 2.0 + 250.0)
	var random_angle = randf_range(-6.0, 6.0)
	new_node.rotation_degrees = random_angle
	new_node.position = screen_center
	# change text
	var text : Label = new_node.get_node(\"text\")
	text.text = \"'\"+value+\"'\"
	# change owner ,ame text
	var text_name : Label = text.get_node(\"name\")
	text_name.text = name_words
"

[sub_resource type="GDScript" id="GDScript_3n8kc"]
script/source = "extends Node

@onready var backdrop = $\"../Control/Backdrop\"
@onready var timer = $Timer
@onready var material : Material = backdrop.get_material()
@onready var timer_out = $Timer_out


func _ready():
	
	backdrop.visible = false

	_global_datas.using_board_enable.connect(_enable_board_backdrop)
	_global_datas.using_board_disable.connect(_disable_board_backdrop)
	
func _enable_board_backdrop():
	backdrop.visible = true

	timer.start()	
	
func _disable_board_backdrop():
	backdrop.visible = false
	timer.stop()

	
func _process(delta):
	
	
	if !timer.is_stopped():
		var lerp_time = lerp(0.5,0.0, timer.time_left / timer.wait_time)	
		material.set_shader_parameter(\"Opacity\",lerp_time)	
	

func _on_timer_timeout():
	timer.stop()



"

[sub_resource type="GDScript" id="GDScript_xw7ed"]
script/source = "extends Node

@export var active_teleport = false		

var index : int = 0
@onready var timer = $Timer


func _ready():
	_global_datas._start_ini_subscene.connect(_reset_index)
	#_global_datas._backFrom_subscene.connect(_active_teleport)



func _active_teleport():
	timer.start()	


func _reset_index():
	index = 3
	

func _teleport_back_to_ship(_index : int):


	var position = _global_datas.teleport_pos[index]
	_global_datas._teleport_position.emit(position)	

	timer.start()
	
	
func _on_timer_timeout():
	
	
	if index == 0:
		_global_datas._go_Mainscene.emit()
		return
	_teleport_back_to_ship(index)	
	
	index -= 1


"

[sub_resource type="GDScript" id="GDScript_xyojo"]
script/source = "extends Node

@onready var light_f = $\"../Light_F\"
@onready var light_b = $\"../Light_b\"

@onready var gpu_particles_2d = $\"../GPUParticles2D\"

func _ready():
	_global_datas._go_Subscene.connect(_disable_bougie)
	_global_datas._go_Mainscene.connect(_active_bougie)
	
	
func _active_bougie():

	light_f.visible = true
	light_b.visible = true
	gpu_particles_2d.visible = true
func _disable_bougie():

	light_f.visible = false
	light_b.visible = false
	gpu_particles_2d.visible = false
"

[sub_resource type="GDScript" id="GDScript_c27os"]
script/source = "extends Node




func _on_area_2d_area_shape_entered(area_rid, area, area_shape_index, local_shape_index):
	if area.get_node_or_null(\"I_Burn\") == null:
		return
	var i_burn = area.get_node(\"I_Burn\")
	
	
	i_burn._in_zone()
	

func _on_area_2d_area_shape_exited(area_rid, area, area_shape_index, local_shape_index):
	if !_global_datas.Player_lock_click:
		return
	if area.get_node_or_null(\"I_Burn\") == null:
		return
	var i_burn = area.get_node(\"I_Burn\")	
	i_burn._out_zone()



"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0fbvr"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_a3pvp"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_mnk67"]
input_name = "color"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_56kj4"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.31]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_xnyqf"]
parameter_name = "Intensity"
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vgofo"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_y5wre"]
default_input_values = [0, 0.0, 1, 25.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_18eog"]
function = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ag54u"]
default_input_values = [0, 0.0, 1, 25.0]
operator = 2

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_c5ups"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1.025]

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_84u5y"]
default_input_values = [0, Vector3(1, 1, 1), 1, 10.0, 2, 25.0]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_i6gf7"]
constant = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_kgoag"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_86fqp"]
input_name = "texture"

[sub_resource type="VisualShader" id="VisualShader_g3ehj"]
code = "shader_type canvas_item;
render_mode blend_add;

uniform float Intensity = 0.5;




// 3D Noise with friendly permission by Inigo Quilez
vec3 hash_noise_range( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
}


void fragment() {
// Input:15
	vec4 n_out15p0 = COLOR;


// Input:18
	float n_out18p0 = TIME;


// RandomRange:23
	vec3 n_in23p0 = vec3(1.00000, 1.00000, 1.00000);
	float n_in23p1 = 10.00000;
	float n_in23p2 = 25.00000;
	float n_out23p0 = mix(n_in23p1, n_in23p2, hash_noise_range(n_in23p0).x);


// FloatOp:19
	float n_out19p0 = n_out18p0 * n_out23p0;


// FloatFunc:20
	float n_out20p0 = sin(n_out19p0);


// FloatOp:21
	float n_in21p1 = 25.00000;
	float n_out21p0 = n_out20p0 * n_in21p1;


// Clamp:22
	float n_in22p1 = 1.00000;
	float n_in22p2 = 1.02500;
	float n_out22p0 = clamp(n_out21p0, n_in22p1, n_in22p2);


// FloatConstant:6
	float n_out6p0 = 0.400000;


	float n_out8p0;
// Expression:8
	n_out8p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out6p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out8p0 = n_out22p0 - DITHER_THRESHOLDS[index];
	}


	vec4 n_out10p0;
// Texture2D:10
	n_out10p0 = texture(TEXTURE, UV);


// Step:14
	float n_out14p0 = step(n_out8p0, n_out10p0.x);


// FloatParameter:17
	float n_out17p0 = Intensity;


// Mix:16
	float n_in16p0 = 0.00000;
	float n_out16p0 = mix(n_in16p0, n_out14p0, n_out17p0);


// Output:0
	COLOR.rgb = vec3(n_out15p0.xyz);
	COLOR.a = n_out16p0;


}
"
mode = 1
modes/blend = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(460, 80)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_i6gf7")
nodes/fragment/6/position = Vector2(-2400, 680)
nodes/fragment/8/node = SubResource("VisualShaderNodeExpression_kgoag")
nodes/fragment/8/position = Vector2(-2140, 440)
nodes/fragment/8/size = Vector2(724.789, 654.559)
nodes/fragment/8/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/8/output_ports = "0,0,Dither_Node;"
nodes/fragment/8/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/9/node = SubResource("VisualShaderNodeInput_86fqp")
nodes/fragment/9/position = Vector2(-1320, 40)
nodes/fragment/10/node = SubResource("VisualShaderNodeTexture_0fbvr")
nodes/fragment/10/position = Vector2(-960, -40)
nodes/fragment/14/node = SubResource("VisualShaderNodeStep_a3pvp")
nodes/fragment/14/position = Vector2(60, 80)
nodes/fragment/15/node = SubResource("VisualShaderNodeInput_mnk67")
nodes/fragment/15/position = Vector2(-729.078, -335.456)
nodes/fragment/16/node = SubResource("VisualShaderNodeMix_56kj4")
nodes/fragment/16/position = Vector2(260, 240)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatParameter_xnyqf")
nodes/fragment/17/position = Vector2(-220, 300)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_vgofo")
nodes/fragment/18/position = Vector2(-3480, 340)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatOp_y5wre")
nodes/fragment/19/position = Vector2(-3040, 280)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatFunc_18eog")
nodes/fragment/20/position = Vector2(-2900, 480)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatOp_ag54u")
nodes/fragment/21/position = Vector2(-2720, 600)
nodes/fragment/22/node = SubResource("VisualShaderNodeClamp_c5ups")
nodes/fragment/22/position = Vector2(-2460, 440)
nodes/fragment/23/node = SubResource("VisualShaderNodeRandomRange_84u5y")
nodes/fragment/23/position = Vector2(-3220, 500)
nodes/fragment/connections = PackedInt32Array(6, 0, 8, 1, 9, 0, 10, 2, 10, 0, 14, 1, 8, 0, 14, 0, 15, 0, 0, 0, 16, 0, 0, 1, 14, 0, 16, 1, 17, 0, 16, 2, 18, 0, 19, 0, 19, 0, 20, 0, 22, 0, 8, 0, 20, 0, 21, 0, 21, 0, 22, 0, 23, 0, 19, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_iywle"]
shader = SubResource("VisualShader_g3ehj")
shader_parameter/Intensity = 0.59

[sub_resource type="Gradient" id="Gradient_g2eju"]
interpolation_mode = 2
offsets = PackedFloat32Array(0.145963, 0.493789, 0.833333)
colors = PackedColorArray(0, 0, 0, 0, 0.431373, 0.321569, 0.129412, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_ltt6a"]
gradient = SubResource("Gradient_g2eju")
width = 512
height = 512
fill = 1
fill_from = Vector2(0.5, 0.5)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jgvvv"]
input_name = "color"

[sub_resource type="Gradient" id="Gradient_wu3n3"]
offsets = PackedFloat32Array(0, 0.528875, 0.547112, 0.984802)
colors = PackedColorArray(1, 1, 1, 1, 0.0102558, 0.0102558, 0.0102558, 1, 0.0243161, 0.0243161, 0.0243161, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_2xai1"]
gradient = SubResource("Gradient_wu3n3")
fill_from = Vector2(0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_a0tbq"]
source = 5
texture = SubResource("GradientTexture2D_2xai1")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cdm5u"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ypf05"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_1bmkn"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_32tbt"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7eewe"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_lm1bn"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ug46v"]
constant = 0.1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_21did"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_psm58"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_x5mon"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5qa2i"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_u68rx"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_xcs0n"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_85gqb"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:18
	float n_out18p0 = 0.100000;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out18p0));


// Input:6
	vec2 n_out6p0 = UV;


// FloatConstant:7
	float n_out7p0 = 0.500000;


// FloatConstant:8
	float n_out8p0 = 0.000000;


	vec4 n_out5p0;
// Expression:5
	n_out5p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out7p0,n_out7p0 + n_out8p0,d);
		n_out5p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:9
	float n_out9p0 = 1.0 - n_out5p0.x;


// Output:0
	COLOR.rgb = n_out17p0;
	COLOR.a = n_out9p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_psm58")
nodes/fragment/5/position = Vector2(-760, 560)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_x5mon")
nodes/fragment/6/position = Vector2(-1160, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_5qa2i")
nodes/fragment/7/position = Vector2(-1040, 660)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_u68rx")
nodes/fragment/8/position = Vector2(-960, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_xcs0n")
nodes/fragment/9/position = Vector2(-23.3431, 308.463)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_jgvvv")
nodes/fragment/10/position = Vector2(-600, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_a0tbq")
nodes/fragment/11/position = Vector2(-1360, -680)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_cdm5u")
nodes/fragment/12/position = Vector2(-2860, -320)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_ypf05")
nodes/fragment/13/position = Vector2(-2860, -460)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_1bmkn")
nodes/fragment/14/position = Vector2(-2540, -240)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_32tbt")
nodes/fragment/15/position = Vector2(-1100, 100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_7eewe")
nodes/fragment/16/position = Vector2(-1940, -920)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_lm1bn")
nodes/fragment/17/position = Vector2(-80, -80)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_ug46v")
nodes/fragment/18/position = Vector2(-620, 260)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture2DParameter_21did")
nodes/fragment/19/position = Vector2(-1900, -720)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 9, 0, 0, 1, 12, 0, 14, 1, 13, 0, 14, 0, 14, 0, 15, 1, 18, 0, 17, 2, 16, 0, 11, 0, 19, 0, 11, 2, 10, 0, 17, 0, 15, 0, 17, 1, 17, 0, 0, 0, 11, 0, 15, 0)

[sub_resource type="Gradient" id="Gradient_c7vvi"]
offsets = PackedFloat32Array(0, 0.570397, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_l8kj1"]
gradient = SubResource("Gradient_c7vvi")
fill_to = Vector2(1, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5tl7k"]
shader = SubResource("VisualShader_85gqb")
shader_parameter/Gradiant = SubResource("GradientTexture2D_l8kj1")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_3svhc"]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_lk8gi"]
source = 5
texture = SubResource("GradientTexture2D_2xai1")

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_10t2q"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_w73ua"]
constant = 0.826

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_kdnq2"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_flf0d"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_r7fo4"]
input_name = "uv"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_lbu2a"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_1f3bt"]
constant = 0.1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_xlayd"]
parameter_name = "Gradiant"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_doon2"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jkp40"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_c4bjg"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_7lma2"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_lvab6"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_4oagh"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Gradiant;



void fragment() {
// Input:10
	vec4 n_out10p0 = COLOR;


// Input:16
	vec2 n_out16p0 = UV;


	vec4 n_out11p0;
// Texture2D:11
	n_out11p0 = texture(Gradiant, n_out16p0);


// FloatConstant:13
	float n_out13p0 = 0.826000;


// FloatConstant:12
	float n_out12p0 = 0.400000;


	float n_out14p0;
// Expression:14
	n_out14p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out12p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out14p0 = n_out13p0 - DITHER_THRESHOLDS[index];
	}


// Step:15
	float n_out15p0 = step(n_out11p0.x, n_out14p0);


// FloatConstant:18
	float n_out18p0 = 0.100000;


// Mix:17
	vec3 n_out17p0 = mix(vec3(n_out10p0.xyz), vec3(n_out15p0), vec3(n_out18p0));


// Output:0
	COLOR.rgb = n_out17p0;


}
"
graph_offset = Vector2(-227.297, 112.311)
mode = 1
flags/light_only = false
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_doon2")
nodes/fragment/5/position = Vector2(-760, 560)
nodes/fragment/5/size = Vector2(513.781, 284.487)
nodes/fragment/5/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/5/output_ports = "0,5,color;"
nodes/fragment/5/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_jkp40")
nodes/fragment/6/position = Vector2(-1160, 500)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_c4bjg")
nodes/fragment/7/position = Vector2(-1040, 660)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_7lma2")
nodes/fragment/8/position = Vector2(-960, 760)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatFunc_lvab6")
nodes/fragment/9/position = Vector2(-23.3431, 308.463)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_3svhc")
nodes/fragment/10/position = Vector2(-600, -80)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_lk8gi")
nodes/fragment/11/position = Vector2(-1360, -680)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatConstant_10t2q")
nodes/fragment/12/position = Vector2(-2860, -320)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_w73ua")
nodes/fragment/13/position = Vector2(-2860, -460)
nodes/fragment/14/node = SubResource("VisualShaderNodeExpression_kdnq2")
nodes/fragment/14/position = Vector2(-2540, -240)
nodes/fragment/14/size = Vector2(724.789, 654.559)
nodes/fragment/14/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/14/output_ports = "0,0,Dither_Node;"
nodes/fragment/14/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/15/node = SubResource("VisualShaderNodeStep_flf0d")
nodes/fragment/15/position = Vector2(-1100, 100)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_r7fo4")
nodes/fragment/16/position = Vector2(-1940, -920)
nodes/fragment/17/node = SubResource("VisualShaderNodeMix_lbu2a")
nodes/fragment/17/position = Vector2(-80, -80)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatConstant_1f3bt")
nodes/fragment/18/position = Vector2(-620, 260)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture2DParameter_xlayd")
nodes/fragment/19/position = Vector2(-1900, -720)
nodes/fragment/connections = PackedInt32Array(6, 0, 5, 0, 7, 0, 5, 1, 8, 0, 5, 2, 5, 0, 9, 0, 12, 0, 14, 1, 13, 0, 14, 0, 14, 0, 15, 1, 18, 0, 17, 2, 16, 0, 11, 0, 19, 0, 11, 2, 10, 0, 17, 0, 15, 0, 17, 1, 17, 0, 0, 0, 11, 0, 15, 0)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ups44"]
shader = SubResource("VisualShader_4oagh")
shader_parameter/Gradiant = SubResource("GradientTexture2D_l8kj1")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ygy0o"]
size = Vector2(184.286, 241.429)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_smra1"]
shader = SubResource("VisualShader_g3ehj")
shader_parameter/Intensity = 0.8

[sub_resource type="Gradient" id="Gradient_8lwon"]
interpolation_mode = 2
offsets = PackedFloat32Array(0, 0.833333)
colors = PackedColorArray(0.692124, 0.542547, 0.281115, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_ahb4m"]
gradient = SubResource("Gradient_8lwon")
width = 512
height = 512
fill = 1
fill_from = Vector2(0.5, 0.5)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_bsycp"]
constant = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_30uk7"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_l3y3r"]
input_name = "color"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_kurnp"]
default_input_values = [0, 0.505, 1, 0.0]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_t8vby"]
constant = 1.0

[sub_resource type="VisualShader" id="VisualShader_5u71o"]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// FloatConstant:7
	float n_out7p0 = 1.000000;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out3p0;
// Expression:3
	n_out3p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out3p0 = n_out7p0 - DITHER_THRESHOLDS[index];
	}


// Step:6
	float n_in6p0 = 0.50500;
	float n_out6p0 = step(n_in6p0, n_out3p0);


// Output:0
	COLOR.a = n_out6p0;


}
"
graph_offset = Vector2(-505.703, -72.4036)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_bsycp")
nodes/fragment/2/position = Vector2(-980, 560)
nodes/fragment/3/node = SubResource("VisualShaderNodeExpression_30uk7")
nodes/fragment/3/position = Vector2(-720, 420)
nodes/fragment/3/size = Vector2(724.789, 654.559)
nodes/fragment/3/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/3/output_ports = "0,0,Dither_Node;"
nodes/fragment/3/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_l3y3r")
nodes/fragment/5/position = Vector2(-472.209, 62.207)
nodes/fragment/6/node = SubResource("VisualShaderNodeStep_kurnp")
nodes/fragment/6/position = Vector2(-51.8656, 54.1544)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_t8vby")
nodes/fragment/7/position = Vector2(-1000, 440)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 1, 3, 0, 6, 1, 7, 0, 3, 0, 6, 0, 0, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fm4ww"]
shader = SubResource("VisualShader_5u71o")

[sub_resource type="Gradient" id="Gradient_lxymc"]
offsets = PackedFloat32Array(0.133956, 1)
colors = PackedColorArray(0.793396, 0.412387, 0.282001, 1, 0.901291, 0.775677, 0.524283, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_wfdju"]
gradient = SubResource("Gradient_lxymc")

[sub_resource type="Curve" id="Curve_lyj41"]
_data = [Vector2(0.00568182, 0.4), 0.0, 0.0, 0, 0, Vector2(0.997159, 0.463158), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_ysv26"]
curve = SubResource("Curve_lyj41")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_hsdlg"]
particle_flag_rotate_y = true
direction = Vector3(0, 0, 0)
gravity = Vector3(0, -100, 0)
initial_velocity_max = 25.0
angular_velocity_max = 0.1
damping_min = 0.1
damping_max = 0.25
angle_min = -720.0
angle_max = 720.0
scale_min = 25.0
scale_max = 35.0
scale_curve = SubResource("CurveTexture_ysv26")
color_ramp = SubResource("GradientTexture1D_wfdju")
turbulence_noise_strength = 0.05
turbulence_noise_scale = 1.12
turbulence_noise_speed_random = 0.0
turbulence_influence_min = 0.0
turbulence_influence_max = 0.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_v0atv"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_wu65v"]
default_input_values = [1, Vector2(1.8, 1), 2, Vector2(0.5, 0)]
function = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_uwtqq"]
default_input_values = [1, Vector2(0, 1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_r2a56"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_h8my2"]
constant = 1.372

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8kisr"]
constant = 0.406

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cgsxd"]
constant = 0.4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ovf53"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_5k3j8"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_5t4o4"]
parameter_name = "Opacity"
default_value_enabled = true

[sub_resource type="VisualShader" id="VisualShader_wndyb"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Opacity = 0;



void fragment() {
// FloatParameter:9
	float n_out9p0 = Opacity;


// FloatConstant:2
	float n_out2p0 = 0.400000;


	float n_out4p0;
// Expression:4
	n_out4p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out2p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out4p0 = n_out9p0 - DITHER_THRESHOLDS[index];
	}


// Step:5
	float n_in5p0 = 0.00000;
	float n_out5p0 = step(n_in5p0, n_out4p0);


// Output:0
	COLOR.a = n_out5p0;


}
"
graph_offset = Vector2(-1245.45, -17.1)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_cgsxd")
nodes/fragment/2/position = Vector2(-1600, 600)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_ovf53")
nodes/fragment/4/position = Vector2(-1300, 500)
nodes/fragment/4/size = Vector2(724.789, 654.559)
nodes/fragment/4/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/4/output_ports = "0,0,Dither_Node;"
nodes/fragment/4/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/5/node = SubResource("VisualShaderNodeStep_5k3j8")
nodes/fragment/5/position = Vector2(-180, 240)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_5t4o4")
nodes/fragment/9/position = Vector2(-1980, 380)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_v0atv")
nodes/fragment/10/position = Vector2(-2820, -140)
nodes/fragment/11/node = SubResource("VisualShaderNodeUVFunc_wu65v")
nodes/fragment/11/position = Vector2(-2480, -200)
nodes/fragment/12/node = SubResource("VisualShaderNodeUVFunc_uwtqq")
nodes/fragment/12/position = Vector2(-2240, -200)
nodes/fragment/13/node = SubResource("VisualShaderNodeExpression_r2a56")
nodes/fragment/13/position = Vector2(-1980, 20)
nodes/fragment/13/size = Vector2(513.781, 284.487)
nodes/fragment/13/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/13/output_ports = "0,5,color;"
nodes/fragment/13/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatConstant_h8my2")
nodes/fragment/14/position = Vector2(-2520, 260)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatConstant_8kisr")
nodes/fragment/15/position = Vector2(-2460, 40)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 1, 4, 0, 5, 1, 5, 0, 0, 1, 9, 0, 4, 0, 10, 0, 11, 0, 11, 0, 12, 0, 14, 0, 13, 2, 12, 0, 13, 0, 15, 0, 13, 1)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_2qpgv"]
shader = SubResource("VisualShader_wndyb")
shader_parameter/Opacity = 0.0

[node name="06_INVENTORY" type="Node"]
script = SubResource("GDScript_mh7vf")
metadata/_edit_vertical_guides_ = [960.0]

[node name="INSTANCE_LOOT" type="Node" parent="."]
script = SubResource("GDScript_huuan")

[node name="Timer" type="Timer" parent="INSTANCE_LOOT"]
one_shot = true

[node name="INSTANCE_PICTURES" type="Node" parent="."]
script = SubResource("GDScript_om7tc")

[node name="INSTANCE_WORDS_NOTE" type="Node" parent="."]
script = SubResource("GDScript_wd62i")

[node name="USING_BOOK" type="Node" parent="."]
script = SubResource("GDScript_3n8kc")

[node name="Timer" type="Timer" parent="USING_BOOK"]
wait_time = 0.25
one_shot = true

[node name="Timer_out" type="Timer" parent="USING_BOOK"]
one_shot = true

[node name="CHANGE_CURSOR" type="Node" parent="."]
script = ExtResource("1_8ci41")

[node name="TELEPORT" type="Node" parent="."]
script = SubResource("GDScript_xw7ed")

[node name="Timer" type="Timer" parent="TELEPORT"]

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[node name="Board" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Board_all" type="Node2D" parent="Control/Board"]
position = Vector2(960, 1080)

[node name="Book" parent="Control/Board/Board_all" instance=ExtResource("1_mrfq4")]

[node name="Map_Parent" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Map" parent="Control/Map_Parent" instance=ExtResource("3_fbqjn")]
position = Vector2(1918, 3.99996)

[node name="Bougie_zone" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Bougie" type="Node2D" parent="Control/Bougie_zone"]
position = Vector2(1562, 123)

[node name="Active_bougie" type="Node" parent="Control/Bougie_zone/Bougie"]
script = SubResource("GDScript_xyojo")

[node name="Burn_Paper" type="Node" parent="Control/Bougie_zone/Bougie"]
script = SubResource("GDScript_c27os")

[node name="Take_object" type="Node" parent="Control/Bougie_zone/Bougie"]
script = ExtResource("3_yssyu")

[node name="Apply_pos_anim" type="Node" parent="Control/Bougie_zone/Bougie"]
script = ExtResource("4_ueoox")

[node name="Light_b" type="TextureRect" parent="Control/Bougie_zone/Bougie"]
texture_filter = 1
texture_repeat = 2
material = SubResource("ShaderMaterial_iywle")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -254.0
offset_top = -234.0
offset_right = 258.0
offset_bottom = 278.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.514329, 0.514329)
pivot_offset = Vector2(256, 256)
texture = SubResource("GradientTexture2D_ltt6a")

[node name="light_m7" type="ColorRect" parent="Control/Bougie_zone/Bougie"]
visible = false
light_mask = 3
material = SubResource("ShaderMaterial_5tl7k")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 78.0
offset_top = 109.831
offset_right = 180.0
offset_bottom = 211.831
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(-1.58491, -1.68462)
mouse_filter = 2
color = Color(0.0666667, 0.109804, 0.113725, 1)

[node name="light_m6" type="ColorRect" parent="Control/Bougie_zone/Bougie"]
visible = false
light_mask = 3
material = SubResource("ShaderMaterial_5tl7k")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 78.0
offset_top = 104.831
offset_right = 180.0
offset_bottom = 206.831
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(-1.58491, -1.68462)
mouse_filter = 2
color = Color(0.121569, 0.180392, 0.188235, 1)

[node name="light_m3" type="ColorRect" parent="Control/Bougie_zone/Bougie"]
light_mask = 3
material = SubResource("ShaderMaterial_ups44")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 62.0676
offset_top = 30.0
offset_right = 164.068
offset_bottom = 63.905
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(-1.22615, -1.22615)
mouse_filter = 2
color = Color(0.533333, 0.533333, 0.533333, 1)

[node name="light_m" type="ColorRect" parent="Control/Bougie_zone/Bougie"]
light_mask = 3
material = SubResource("ShaderMaterial_5tl7k")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 62.0677
offset_top = 83.9213
offset_right = 164.068
offset_bottom = 185.921
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(-1.22615, -1.22615)
mouse_filter = 2
color = Color(0.537255, 0.537255, 0.537255, 1)

[node name="light_m2" type="ColorRect" parent="Control/Bougie_zone/Bougie"]
light_mask = 3
material = SubResource("ShaderMaterial_5tl7k")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 62.0676
offset_top = 58.0
offset_right = 164.068
offset_bottom = 160.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(-1.22615, -1.22615)
mouse_filter = 2
color = Color(0.686275, 0.686275, 0.686275, 1)

[node name="light_m5" type="ColorRect" parent="Control/Bougie_zone/Bougie"]
light_mask = 3
material = SubResource("ShaderMaterial_ups44")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = 5.06763
offset_top = -4.0
offset_right = 11.7606
offset_bottom = 28.355
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(-1.22615, -1.22615)
mouse_filter = 2
color = Color(0.176471, 0.176471, 0.176471, 1)

[node name="Area2D" type="Area2D" parent="Control/Bougie_zone/Bougie"]
position = Vector2(-40.9322, -27.0787)
scale = Vector2(0.7, 0.7)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Control/Bougie_zone/Bougie/Area2D"]
visible = false
position = Vector2(57.8572, 39.2858)
scale = Vector2(0.999998, 0.999998)
shape = SubResource("RectangleShape2D_ygy0o")

[node name="Light_F" type="TextureRect" parent="Control/Bougie_zone/Bougie"]
texture_filter = 1
texture_repeat = 2
material = SubResource("ShaderMaterial_smra1")
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -258.0
offset_top = -305.0
offset_right = 254.0
offset_bottom = 207.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(0.173154, 0.232457)
pivot_offset = Vector2(256, 256)
texture = SubResource("GradientTexture2D_ahb4m")

[node name="GPUParticles2D" type="GPUParticles2D" parent="Control/Bougie_zone/Bougie"]
material = SubResource("ShaderMaterial_fm4ww")
position = Vector2(1, -44)
scale = Vector2(1.76852, 1.76852)
amount = 3
process_material = SubResource("ParticleProcessMaterial_hsdlg")
lifetime = 0.5
explosiveness = 0.01
fixed_fps = 6
interpolate = false
fract_delta = false
local_coords = true

[node name="Photo_group" type="Control" parent="Control"]
anchors_preset = 0

[node name="PaperSquare_prefabs" parent="Control/Photo_group" instance=ExtResource("2_3xfr3")]
position = Vector2(143, 16)
rotation = 0.104477

[node name="PaperSquare_prefabs3" parent="Control/Photo_group" instance=ExtResource("2_3xfr3")]
position = Vector2(175, 142)
rotation = -0.232413

[node name="PaperSquare_prefabs2" parent="Control/Photo_group" instance=ExtResource("2_3xfr3")]
position = Vector2(247, 52)
rotation = -0.185973

[node name="Coins_group" type="Control" parent="Control"]
visible = false
anchors_preset = 0
mouse_filter = 2

[node name="instance_pos" type="Control" parent="Control/Coins_group"]
visible = false
anchors_preset = 0
offset_left = 960.0
offset_top = 491.0
offset_right = 960.0
offset_bottom = 491.0
mouse_filter = 2

[node name="Coins6" parent="Control/Coins_group" instance=ExtResource("5_6qspm")]
visible = false
position = Vector2(771, 118)

[node name="Coins" parent="Control/Coins_group" instance=ExtResource("6_iwb8l")]
visible = false
position = Vector2(727, 144)

[node name="Coins7" parent="Control/Coins_group" instance=ExtResource("5_6qspm")]
visible = false
position = Vector2(1809, 559)

[node name="Coins8" parent="Control/Coins_group" instance=ExtResource("5_6qspm")]
visible = false
position = Vector2(1773, 572)

[node name="Coins9" parent="Control/Coins_group" instance=ExtResource("5_6qspm")]
visible = false
position = Vector2(592, 87)

[node name="Coins2" parent="Control/Coins_group" instance=ExtResource("6_iwb8l")]
visible = false
position = Vector2(467, 166)

[node name="Coins3" parent="Control/Coins_group" instance=ExtResource("6_iwb8l")]
visible = false
position = Vector2(443, 162)

[node name="Coins4" parent="Control/Coins_group" instance=ExtResource("6_iwb8l")]
visible = false
position = Vector2(443, 165)

[node name="Coins5" parent="Control/Coins_group" instance=ExtResource("6_iwb8l")]
position = Vector2(683, 65)

[node name="Words_note" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Clock_Parent" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Clock" parent="Control/Clock_Parent" instance=ExtResource("7_ci51x")]
position = Vector2(1741, 395)
rotation = 0.0698132

[node name="Backdrop" type="ColorRect" parent="Control"]
material = SubResource("ShaderMaterial_2qpgv")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -4.0
offset_top = -1.0
offset_right = -4.0
offset_bottom = -1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
color = Color(0.0156863, 0.0705882, 0.0823529, 1)

[connection signal="timeout" from="INSTANCE_LOOT/Timer" to="INSTANCE_LOOT" method="_on_timer_timeout"]
[connection signal="timeout" from="USING_BOOK/Timer" to="USING_BOOK" method="_on_timer_timeout"]
[connection signal="timeout" from="USING_BOOK/Timer_out" to="USING_BOOK" method="_on_timer_out_timeout"]
[connection signal="timeout" from="TELEPORT/Timer" to="TELEPORT" method="_on_timer_timeout"]
[connection signal="area_shape_entered" from="Control/Bougie_zone/Bougie/Area2D" to="Control/Bougie_zone/Bougie/Burn_Paper" method="_on_area_2d_area_shape_entered"]
[connection signal="area_shape_exited" from="Control/Bougie_zone/Bougie/Area2D" to="Control/Bougie_zone/Bougie/Burn_Paper" method="_on_area_2d_area_shape_exited"]
[connection signal="mouse_entered" from="Control/Bougie_zone/Bougie/Area2D" to="Control/Bougie_zone/Bougie/Take_object" method="_on_area_2d_mouse_entered"]
[connection signal="mouse_exited" from="Control/Bougie_zone/Bougie/Area2D" to="Control/Bougie_zone/Bougie/Take_object" method="_on_area_2d_mouse_exited"]
