[gd_scene load_steps=39 format=3 uid="uid://dmg5brvcww8lq"]

[ext_resource type="Script" path="res://12_INVENTORY/Change_cursor.gd" id="1_8ci41"]
[ext_resource type="PackedScene" uid="uid://dyfif7fbf51gx" path="res://12_INVENTORY/Book/Book_prefab.tscn" id="1_mrfq4"]
[ext_resource type="PackedScene" uid="uid://dr7pcue70x0dt" path="res://10_BOARD/Behaviour/Photo_square_prefabs.tscn" id="2_3xfr3"]
[ext_resource type="PackedScene" uid="uid://bjy34o0nbhbc3" path="res://12_INVENTORY/Map_ui/Map_ui.tscn" id="3_fbqjn"]
[ext_resource type="Script" path="res://10_BOARD/Behaviour/Movable_paper.tres.gd" id="3_yssyu"]
[ext_resource type="Script" path="res://10_BOARD/Behaviour/Apply_pos_anim.gd" id="4_ueoox"]
[ext_resource type="Texture2D" uid="uid://ch5fu7wcqx25i" path="res://12_INVENTORY/Book/Quest_img/TheMirrors.png" id="4_xu54d"]
[ext_resource type="PackedScene" uid="uid://by7rfopxdjwq" path="res://12_INVENTORY/coins_r.tscn" id="5_6qspm"]
[ext_resource type="PackedScene" uid="uid://bba4phbllf3f8" path="res://12_INVENTORY/coins.tscn" id="6_iwb8l"]
[ext_resource type="PackedScene" uid="uid://dky4f05drqbp8" path="res://12_INVENTORY/Bougie/Bougie.tscn" id="7_12ygw"]
[ext_resource type="PackedScene" uid="uid://clc3sbquuu1us" path="res://12_INVENTORY/Clock_montre/Clock_oxygene_prefab.tscn" id="7_ci51x"]

[sub_resource type="GDScript" id="GDScript_mh7vf"]
script/source = "extends Node

@onready var control = $Control
@onready var board = $Control/Board

func _ready():


	_global_datas._open_dialogue.connect(_hide)
	_global_datas._close_dialogue.connect(_show)
	_global_datas._go_Subscene.connect(_hide)
	_global_datas._backFrom_subscene.connect(_show)
	control.visible = true
	
func _hide_2d_enventory():
	control.visible = false
	
func _show_2d_enventory():
	control.visible = true


func _show():

	board.visible = true

func _hide():

	board.visible = false
"

[sub_resource type="GDScript" id="GDScript_5js7i"]
script/source = "extends Node

@onready var book = $\"../../Control/Board/Board_all/Book\"

@onready var map = $\"../../Control/Map_Parent/Map\"
@onready var illustration = $\"../../Control/Paper_info/Illustration\"
@onready var coins_group = $\"../../Control/Coins_group\"
@onready var clock = $\"../../Control/Clock_Parent/clock\"

@onready var photo_group = $\"../../Control/Photo_group\"
@onready var bougie = $\"../../Control/Bougie_zone/bougie\"


func _ready():	
	_global_datas.active_prologue_demo.connect(_active_prologue)


func _active_prologue():
	
	
	print(\"PROLOGUE INVENTORY ACTIVATED\")
	book.visible = false
	map.visible = false 
	illustration.visible = false 
	var all_coins = coins_group.get_children()
	for c in all_coins:
		c.visible = false
	clock.visible = false
	
	var photo_group_all = photo_group.get_children()
	for e in photo_group_all:
		e.visible = false
	bougie.visible = false
	
	
	
func _on_i_burn_burn_signal():
	print(\"UNLOCK\")
"

[sub_resource type="GDScript" id="GDScript_venie"]
script/source = "extends Node


@export var tools_list : Array[Node2D]
@export var bougie_start_pos : Vector2
@export var map_start_pos : Vector2

func _ready():
	
	_global_datas.player_received_ui_tool.connect(_active_this_ui_tool)


func _active_this_ui_tool(_name : String):
	print(\" connection is ok\", \"  \",_name)
	
	for e in tools_list:	
		if e.name == _name:
			e.visible = true
			var screen_center = Vector2(1920.0 / 2.0, 1080/ 2.0 )
			e.position = screen_center 
			if e.name == \"bougie\":
				var active = e.get_node_or_null(\"Active_bougie\")
				active.enable_burning_tool(true)
				e.position = bougie_start_pos
			if e.name == \"Map\":
				e.position = map_start_pos
"

[sub_resource type="GDScript" id="GDScript_huuan"]
script/source = "extends Node


@onready var coins_group = $\"../Control/Coins_group\"
@onready var instance_pos = $\"../Control/Coins_group/instance_pos\"
@onready var timer = $Timer


func _ready():
	_global_datas._find_loot.connect(_add_inventory)	
	_global_datas._backFrom_subscene.connect(start_timer)



func clear_inventory():
	_global_datas.loot_from_subscene.clear()	


func start_timer():
	if _global_datas.loot_from_subscene.size() > 0:	
		timer.start()
		
func instance_loot():
	
	for element in _global_datas.loot_from_subscene:
		_intance_loot_bottom(element)
	clear_inventory()
		
		
func _add_inventory(type : Loot_Data):
	_global_datas.loot_from_subscene.append(type)
	print(\"type\",\" is add in inventory\")
	
func _intance_loot_bottom(type : Loot_Data):
	
	var new_node = type.prefabs.instantiate()
	coins_group.add_child(new_node)

	var random_angle = randf_range(-6.0, 6.0)
	new_node.rotation_degrees = random_angle
	new_node.position = instance_pos.global_position
	new_node.get_node(\"Push\")._push_b()
	


func _on_timer_timeout():
	instance_loot()
"

[sub_resource type="GDScript" id="GDScript_om7tc"]
script/source = "extends Node

@onready var photo_prefab = preload(\"res://10_BOARD/Behaviour/Photo_square_prefabs.tscn\")
@onready var photo_group = $\"../Control/Photo_group\"


func _ready():
	_global_datas._instance_photo.connect(_intance_photo)
	_global_datas._take_photo.connect(_take_npc_photo)
func _intance_photo():



	var new_node = photo_prefab.instantiate()
	photo_group.add_child(new_node)
	
	#var screen_center = Vector2(1920.0 / 2.0, 1080.0/ 2.0)
	var random_angle = randf_range(-3.0, 3.0)
	new_node.rotation_degrees = random_angle
	new_node.position = _global_datas._photo_position
	
func _take_npc_photo():
	
	if _global_datas.Player_InSubScene:
		return
	
	_global_datas._instance_photo.emit()		
	_global_datas.Npc_Dialogue.photo_done = true
"

[sub_resource type="GDScript" id="GDScript_wd62i"]
script/source = "extends Node

@onready var words_note_prefab = preload(\"res://12_INVENTORY/Words_note/note_words_prefab.tscn\")
@onready var words_note = $\"../Control/Words_note\"


@onready var letter_prefab = preload(\"res://12_INVENTORY/Letter/Start_note.tscn\")

func _ready():
	_global_datas.instance_word_text = self
	_global_datas._give_letter.connect(_intance_letter)
	
func _intance_words_note(value : String, name_words : String):
	
	print(\"INSTANCE NOTE\")
	var new_node = words_note_prefab.instantiate()
	words_note.add_child(new_node)
	
	var screen_center = Vector2(1920.0 / 2.0, 1080/ 2.0 + 250.0)
	var random_angle = randf_range(-6.0, 6.0)
	new_node.rotation_degrees = random_angle
	new_node.position = screen_center
	# change text
	var text : Label = new_node.get_node(\"text\")
	text.text = \"'\"+value+\"'\"
	# change owner ,ame text
	var text_name : Label = text.get_node(\"name\")
	text_name.text = name_words
	
func _intance_letter(_words : String, _from: String):
	
	var new_node = 	letter_prefab.instantiate()
	words_note.add_child(new_node)
	
	var screen_center = Vector2(1920.0 / 2.0, 1080/ 2.0 )
	var random_angle = randf_range(-96.0, -84.0)
	
	new_node.rotation_degrees = random_angle
	new_node.position = screen_center
	var text = new_node.get_node_or_null(\"Update_words\")
	text._update_words(_words,_from)
"

[sub_resource type="GDScript" id="GDScript_xw7ed"]
script/source = "extends Node

@export var active_teleport = false		

var index : int = 0
@onready var timer = $Timer


func _ready():
	_global_datas._start_ini_subscene.connect(_reset_index)
	#_global_datas._backFrom_subscene.connect(_active_teleport)



func _active_teleport():
	timer.start()	


func _reset_index():
	index = 3
	

func _teleport_back_to_ship(_index : int):


	var position = _global_datas.teleport_pos[index]
	_global_datas._teleport_position.emit(position)	

	timer.start()
	
	
func _on_timer_timeout():
	
	
	if index == 0:
		_global_datas._go_Mainscene.emit()
		return
	_teleport_back_to_ship(index)	
	
	index -= 1


"

[sub_resource type="GDScript" id="GDScript_pvnvf"]
script/source = "extends Node

@export var _legend : String

func set_legend(legend : String):
	_legend = legend	

func get_legend():
	return _legend 
"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_obpvf"]
constant = 0.4

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_nvnww"]
constant = 0.989

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_sc4ia"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_0g42n"]
parameter_name = "Color2"
default_value_enabled = true
default_value = Color(0.470642, 0.389814, 0.0971986, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_4ivee"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_56px2"]
parameter_name = "ColorParameter"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_sei5t"]
parameter_name = "Noise"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_1bpmb"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_8get6"]
default_input_values = [0, 0.0, 1, 1.0, 2, 1.155]

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_d7qsl"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kd1d2"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_76kcg"]
source = 5

[sub_resource type="VisualShader" id="VisualShader_7yicc"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 ColorParameter : source_color;
uniform vec4 Color2 : source_color = vec4(0.470642, 0.389814, 0.097199, 1.000000);
uniform sampler2D Noise;



void fragment() {
// ColorParameter:29
	vec4 n_out29p0 = ColorParameter;


// ColorParameter:13
	vec4 n_out13p0 = Color2;


// FloatConstant:11
	float n_out11p0 = 0.989000;


// FloatConstant:10
	float n_out10p0 = 0.400000;


	float n_out12p0;
// Expression:12
	n_out12p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out10p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out12p0 = n_out11p0 - DITHER_THRESHOLDS[index];
	}


	vec4 n_out32p0;
// Texture2D:32
	n_out32p0 = texture(Noise, UV);


// Step:34
	float n_out34p0 = step(n_out12p0, n_out32p0.x);


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(TEXTURE, UV);


// Mix:33
	float n_in33p2 = 1.15500;
	float n_out33p0 = mix(n_out34p0, n_out9p0.x, n_in33p2);


// Mix:28
	vec3 n_out28p0 = mix(vec3(n_out29p0.xyz), vec3(n_out13p0.xyz), vec3(n_out33p0));


// Output:0
	COLOR.rgb = n_out28p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1820, 100)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_kd1d2")
nodes/fragment/8/position = Vector2(-420, -300)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_76kcg")
nodes/fragment/9/position = Vector2(-120, -360)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatConstant_obpvf")
nodes/fragment/10/position = Vector2(-560, 20)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatConstant_nvnww")
nodes/fragment/11/position = Vector2(-560, -120)
nodes/fragment/12/node = SubResource("VisualShaderNodeExpression_sc4ia")
nodes/fragment/12/position = Vector2(-320, -80)
nodes/fragment/12/size = Vector2(724.789, 654.559)
nodes/fragment/12/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/12/output_ports = "0,0,Dither_Node;"
nodes/fragment/12/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/13/node = SubResource("VisualShaderNodeColorParameter_0g42n")
nodes/fragment/13/position = Vector2(1020, -340)
nodes/fragment/28/node = SubResource("VisualShaderNodeMix_4ivee")
nodes/fragment/28/position = Vector2(1496.8, -32.3737)
nodes/fragment/29/node = SubResource("VisualShaderNodeColorParameter_56px2")
nodes/fragment/29/position = Vector2(1380, -280)
nodes/fragment/31/node = SubResource("VisualShaderNodeTexture2DParameter_sei5t")
nodes/fragment/31/position = Vector2(420, 560)
nodes/fragment/32/node = SubResource("VisualShaderNodeTexture_1bpmb")
nodes/fragment/32/position = Vector2(880, 400)
nodes/fragment/33/node = SubResource("VisualShaderNodeMix_8get6")
nodes/fragment/33/position = Vector2(1260, 120)
nodes/fragment/34/node = SubResource("VisualShaderNodeStep_d7qsl")
nodes/fragment/34/position = Vector2(922.397, -15.5859)
nodes/fragment/connections = PackedInt32Array(8, 0, 9, 2, 10, 0, 12, 1, 11, 0, 12, 0, 29, 0, 28, 0, 31, 0, 32, 2, 13, 0, 28, 1, 28, 0, 0, 0, 33, 0, 28, 2, 12, 0, 34, 0, 32, 0, 34, 1, 34, 0, 33, 0, 9, 0, 33, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_iy3q4"]
frequency = 0.0001
fractal_octaves = 10
fractal_gain = 0.63

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_jh3ja"]
generate_mipmaps = false
seamless = true
noise = SubResource("FastNoiseLite_iy3q4")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xrbty"]
shader = SubResource("VisualShader_7yicc")
shader_parameter/ColorParameter = Color(0.521569, 0.486275, 0.423529, 1)
shader_parameter/Color2 = Color(0.0862745, 0.188235, 0.192157, 1)
shader_parameter/Noise = SubResource("NoiseTexture2D_jh3ja")

[sub_resource type="GDScript" id="GDScript_bgfws"]
script/source = "extends Node2D


@onready var pin : Array = get_children()


var random_pin : int
var lock_random = false

func _ready():
	_disable_all_pin()	
	
func _random_pin():
	
	# hide all first
	_disable_all_pin()
	
	if !lock_random : 
		random_pin = randi_range(0, pin.size()-1)
		lock_random = true
		
	# show only random number index
	pin[random_pin].visible = true
		
		
func _disable_all_pin():

	for element in pin:
		element.visible = false		
"

[sub_resource type="GDScript" id="GDScript_axg7a"]
script/source = "extends Node

signal  move_behind


func _move_behind():
	move_behind.emit()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_34v14"]
size = Vector2(320, 429)

[node name="06_INVENTORY" type="Node"]
script = SubResource("GDScript_mh7vf")
metadata/_edit_vertical_guides_ = [960.0]

[node name="GAME_STATE" type="Node" parent="."]

[node name="Prologue" type="Node" parent="GAME_STATE"]
script = SubResource("GDScript_5js7i")

[node name="ACTIVE_UI_TOOLS" type="Node" parent="GAME_STATE/Prologue" node_paths=PackedStringArray("tools_list")]
script = SubResource("GDScript_venie")
tools_list = [NodePath("../../../Control/Board/Board_all/Book"), NodePath("../../../Control/Bougie_zone/bougie"), NodePath("../../../Control/Clock_Parent/clock"), NodePath("../../../Control/Map_Parent/Map")]
bougie_start_pos = Vector2(1150, 666)
map_start_pos = Vector2(1442, 666)

[node name="INSTANCE_LOOT" type="Node" parent="."]
script = SubResource("GDScript_huuan")

[node name="Timer" type="Timer" parent="INSTANCE_LOOT"]
one_shot = true

[node name="INSTANCE_PICTURES" type="Node" parent="."]
script = SubResource("GDScript_om7tc")

[node name="INSTANCE_WORDS_NOTE" type="Node" parent="."]
script = SubResource("GDScript_wd62i")

[node name="CHANGE_CURSOR" type="Node" parent="."]
script = ExtResource("1_8ci41")

[node name="TELEPORT" type="Node" parent="."]
script = SubResource("GDScript_xw7ed")

[node name="Timer" type="Timer" parent="TELEPORT"]

[node name="Control" type="Control" parent="."]
visible = false
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2

[node name="Board" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Board_all" type="Node2D" parent="Control/Board"]
position = Vector2(960, 1080)

[node name="Book" parent="Control/Board/Board_all" instance=ExtResource("1_mrfq4")]
position = Vector2(0, -391)
scale = Vector2(1.1, 1.1)

[node name="Map_Parent" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Map" parent="Control/Map_Parent" instance=ExtResource("3_fbqjn")]
position = Vector2(1904, 6.00001)
rotation = 0.0941491

[node name="Paper_info" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Illustration" type="Node2D" parent="Control/Paper_info"]
position = Vector2(16, 144)

[node name="Take_object" type="Node" parent="Control/Paper_info/Illustration"]
script = ExtResource("3_yssyu")
object_center_marge = Vector2(153, 190)

[node name="Apply_pos_anim" type="Node" parent="Control/Paper_info/Illustration"]
script = ExtResource("4_ueoox")

[node name="Legend" type="Node" parent="Control/Paper_info/Illustration"]
script = SubResource("GDScript_pvnvf")
_legend = "A sketch with \"Mirrors\" as tittle"

[node name="TheMirrors" type="Sprite2D" parent="Control/Paper_info/Illustration"]
material = SubResource("ShaderMaterial_xrbty")
position = Vector2(8, 0)
scale = Vector2(0.25, 0.25)
texture = ExtResource("4_xu54d")

[node name="Pin_book" type="Node2D" parent="Control/Paper_info/Illustration"]
position = Vector2(79, -183)
scale = Vector2(2, 2)
script = SubResource("GDScript_bgfws")

[node name="ColorRect3" type="ColorRect" parent="Control/Paper_info/Illustration/Pin_book"]
offset_left = -74.0
offset_top = -6.0
offset_right = -65.0
offset_bottom = 8.0
rotation = -0.453786
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect4" type="ColorRect" parent="Control/Paper_info/Illustration/Pin_book"]
offset_left = -50.0
offset_top = -10.5
offset_right = -41.0
offset_bottom = 3.5
rotation = 0.153398
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect5" type="ColorRect" parent="Control/Paper_info/Illustration/Pin_book"]
offset_left = 19.5
offset_top = -8.5
offset_right = 28.5
offset_bottom = 5.5
rotation = 0.136955
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect6" type="ColorRect" parent="Control/Paper_info/Illustration/Pin_book"]
offset_left = -23.5
offset_top = -10.0
offset_right = -14.5
offset_bottom = 4.0
rotation = 0.136955
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect7" type="ColorRect" parent="Control/Paper_info/Illustration/Pin_book"]
offset_left = -80.0
offset_top = -10.5
offset_right = -71.0
offset_bottom = 3.5
rotation = 0.136955
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="ColorRect8" type="ColorRect" parent="Control/Paper_info/Illustration/Pin_book"]
offset_left = -40.5
offset_top = -11.5
offset_right = -31.5
offset_bottom = 2.5
rotation = 0.136955
color = Color(0.560784, 0.545098, 0.462745, 1)

[node name="Area2D" type="Area2D" parent="Control/Paper_info/Illustration"]

[node name="Apply_pos_behind" type="Node" parent="Control/Paper_info/Illustration/Area2D"]
script = SubResource("GDScript_axg7a")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Control/Paper_info/Illustration/Area2D"]
visible = false
position = Vector2(7.5, 1.5)
shape = SubResource("RectangleShape2D_34v14")

[node name="Bougie_zone" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="bougie" parent="Control/Bougie_zone" instance=ExtResource("7_12ygw")]

[node name="Photo_group" type="Control" parent="Control"]
anchors_preset = 0

[node name="PaperSquare_prefabs" parent="Control/Photo_group" instance=ExtResource("2_3xfr3")]
position = Vector2(143, 16)
rotation = 0.0523599

[node name="PaperSquare_prefabs3" parent="Control/Photo_group" instance=ExtResource("2_3xfr3")]
position = Vector2(175, 142)
rotation = -0.0523599

[node name="PaperSquare_prefabs2" parent="Control/Photo_group" instance=ExtResource("2_3xfr3")]
position = Vector2(247, 52)
rotation = 0.0523599

[node name="Words_note" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="Coins_group" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="instance_pos" type="Control" parent="Control/Coins_group"]
anchors_preset = 0
offset_left = 960.0
offset_top = 491.0
offset_right = 960.0
offset_bottom = 491.0
mouse_filter = 2

[node name="Coins6" parent="Control/Coins_group" instance=ExtResource("5_6qspm")]
position = Vector2(313, 83)

[node name="Coins" parent="Control/Coins_group" instance=ExtResource("6_iwb8l")]
position = Vector2(381, 133)

[node name="Clock_Parent" type="Control" parent="Control"]
anchors_preset = 0
mouse_filter = 2

[node name="clock" parent="Control/Clock_Parent" instance=ExtResource("7_ci51x")]
position = Vector2(1767, 294)
rotation = 0.0698132

[connection signal="timeout" from="INSTANCE_LOOT/Timer" to="INSTANCE_LOOT" method="_on_timer_timeout"]
[connection signal="timeout" from="TELEPORT/Timer" to="TELEPORT" method="_on_timer_timeout"]
[connection signal="mouse_entered" from="Control/Paper_info/Illustration/Area2D" to="Control/Paper_info/Illustration/Take_object" method="_on_area_2d_mouse_entered"]
[connection signal="mouse_exited" from="Control/Paper_info/Illustration/Area2D" to="Control/Paper_info/Illustration/Take_object" method="_on_area_2d_mouse_exited"]
[connection signal="move_behind" from="Control/Paper_info/Illustration/Area2D/Apply_pos_behind" to="Control/Paper_info/Illustration/Apply_pos_anim" method="_on_apply_pos_behind_move_behind"]
