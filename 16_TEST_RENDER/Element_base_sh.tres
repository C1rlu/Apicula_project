[gd_resource type="VisualShader" load_steps=19 format=3 uid="uid://bii47ft606xyy"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_csrqu"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_fnumq"]
size = Vector2(620, 200)
expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_dgr1p"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_fhk1p"]
parameter_name = "BaseColor"
default_value_enabled = true

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_qeb05"]
parameter_name = "isGray"
qualifier = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_mcl60"]
parameter_name = "BaseGradient"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0dg5a"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_7spfd"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ibvl1"]
constant = 2.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ft2t5"]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_owa5p"]
operator = 5

[sub_resource type="VisualShaderNodeStep" id="VisualShaderNodeStep_ma16y"]

[sub_resource type="Curve" id="Curve_6hja2"]
_data = [Vector2(0, 0), 0.0, 0.170391, 0, 0, Vector2(1, 1), -0.117064, 0.0, 0, 0]
point_count = 2
metadata/_snap_enabled = true

[sub_resource type="CurveTexture" id="CurveTexture_t8qlx"]
curve = SubResource("Curve_6hja2")

[sub_resource type="VisualShaderNodeCurveTexture" id="VisualShaderNodeCurveTexture_b7fuh"]
output_port_for_preview = 0
texture = SubResource("CurveTexture_t8qlx")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_cf44r"]
parameter_name = "Dither_Opacity"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_6mqxf"]
size = Vector2(724.789, 654.559)
expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_gvssh"]
parameter_name = "Dither_size"
qualifier = 1

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled, ambient_light_disabled;

uniform vec4 BaseColor : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
global uniform float Dither_size;
uniform sampler2D BaseGradient : filter_nearest;
uniform float Dither_Opacity : hint_range(0, 1) = 1;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = BaseColor;


// FloatConstant:25
	float n_out25p0 = 2.000000;


// VectorOp:26
	vec3 n_out26p0 = vec3(n_out2p0.xyz) * vec3(n_out25p0);


// FloatConstant:10
	float n_out10p0 = 1.000000;


// FloatParameter:8
	float n_out8p0 = Dither_size;


	float n_out7p0;
// Expression:7
	n_out7p0 = 0.0;
	{
		const float DITHER_THRESHOLDS[16] ={
				1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
				13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
				4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
				16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
			};
			
		vec2 uv = FRAGCOORD.xy * n_out8p0;
		int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
		n_out7p0 = n_out10p0 - DITHER_THRESHOLDS[index];
	}


	vec4 n_out22p0;
// Texture2D:22
	n_out22p0 = texture(BaseGradient, UV);


// FloatParameter:4
	float n_out4p0 = Dither_Opacity;


// VectorOp:28
	vec3 n_out28p0 = pow(vec3(n_out22p0.xyz), vec3(n_out4p0));


// Step:30
	float n_out30p0 = step(n_out7p0, n_out28p0.x);


// Mix:23
	vec3 n_out23p0 = mix(vec3(n_out2p0.xyz), n_out26p0, vec3(n_out30p0));


// Output:0
	ALBEDO = n_out23p0;


}
"
graph_offset = Vector2(-1418.77, -114.443)
flags/unshaded = true
flags/shadows_disabled = true
flags/ambient_light_disabled = true
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_fhk1p")
nodes/fragment/2/position = Vector2(-800, -20)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_cf44r")
nodes/fragment/4/position = Vector2(-1400, 540)
nodes/fragment/7/node = SubResource("VisualShaderNodeExpression_6mqxf")
nodes/fragment/7/position = Vector2(-1560, 820)
nodes/fragment/7/size = Vector2(724.789, 654.559)
nodes/fragment/7/input_ports = "0,0,In;1,0,Size;"
nodes/fragment/7/output_ports = "0,0,Dither_Node;"
nodes/fragment/7/expression = "const float DITHER_THRESHOLDS[16] ={
		1.0 / 17.0, 9.0 / 17.0, 3.0 / 17.0, 11.0 / 17.0,
		13.0 / 17.0, 5.0 / 17.0, 15.0 / 17.0, 7.0 / 17.0,
		4.0 / 17.0, 12.0 / 17.0, 2.0 / 17.0, 10.0 / 17.0,
		16.0 / 17.0, 8.0 / 17.0, 14.0 / 17.0, 6.0 / 17.0
	};
	
vec2 uv = FRAGCOORD.xy * Size;
int index = (int(uv.x) % 4) * 4 + int(uv.y) % 4;
Dither_Node = In - DITHER_THRESHOLDS[index];"
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatParameter_gvssh")
nodes/fragment/8/position = Vector2(-1880, 1120)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatConstant_csrqu")
nodes/fragment/10/position = Vector2(-1740, 820)
nodes/fragment/18/node = SubResource("VisualShaderNodeExpression_fnumq")
nodes/fragment/18/position = Vector2(-520, -560)
nodes/fragment/18/size = Vector2(620, 200)
nodes/fragment/18/input_ports = "0,4,color;"
nodes/fragment/18/output_ports = "0,0,grey_value;"
nodes/fragment/18/expression = "float luminance = 0.299 * color.x + 0.587 * color.y + 0.114 * color.z;
grey_value = luminance;"
nodes/fragment/19/node = SubResource("VisualShaderNodeMix_dgr1p")
nodes/fragment/19/position = Vector2(160, -400)
nodes/fragment/20/node = SubResource("VisualShaderNodeBooleanParameter_qeb05")
nodes/fragment/20/position = Vector2(-860, -240)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture2DParameter_mcl60")
nodes/fragment/21/position = Vector2(-2860, 360)
nodes/fragment/22/node = SubResource("VisualShaderNodeTexture_0dg5a")
nodes/fragment/22/position = Vector2(-2480, 260)
nodes/fragment/23/node = SubResource("VisualShaderNodeMix_7spfd")
nodes/fragment/23/position = Vector2(-400, 280)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatConstant_ibvl1")
nodes/fragment/25/position = Vector2(-940, 280)
nodes/fragment/26/node = SubResource("VisualShaderNodeVectorOp_ft2t5")
nodes/fragment/26/position = Vector2(-720, 200)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_owa5p")
nodes/fragment/28/position = Vector2(-1000, 400)
nodes/fragment/30/node = SubResource("VisualShaderNodeStep_ma16y")
nodes/fragment/30/position = Vector2(-631.562, 592.086)
nodes/fragment/31/node = SubResource("VisualShaderNodeCurveTexture_b7fuh")
nodes/fragment/31/position = Vector2(-1640, -80)
nodes/fragment/connections = PackedInt32Array(8, 0, 7, 1, 10, 0, 7, 0, 20, 0, 19, 2, 18, 0, 19, 1, 21, 0, 22, 2, 2, 0, 26, 0, 25, 0, 26, 1, 26, 0, 23, 1, 2, 0, 23, 0, 23, 0, 0, 0, 28, 0, 30, 1, 7, 0, 30, 0, 4, 0, 28, 1, 30, 0, 23, 2, 22, 0, 31, 0, 22, 0, 28, 0)
