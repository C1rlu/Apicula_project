[gd_scene load_steps=13 format=3 uid="uid://34sisiyejwc5"]

[ext_resource type="Script" path="res://06_UI/Fps_counter.gd" id="1_6xjl0"]
[ext_resource type="Material" uid="uid://pvr0u5gwh5ek" path="res://05_SHADER_TEST/Subscene_materials/element_subscene_x_ray.tres" id="1_dqglg"]
[ext_resource type="Script" path="res://00_SCENE/Scene_Test/Pulse_test.gd" id="1_fkf57"]
[ext_resource type="Material" uid="uid://b7ffjkgpmtkc6" path="res://05_SHADER_TEST/Full_screen/Subscene_screen/Scanner_x_subscene_dither.tres" id="4_honhp"]

[sub_resource type="PlaneMesh" id="PlaneMesh_n037r"]

[sub_resource type="BoxMesh" id="BoxMesh_4feqb"]

[sub_resource type="SphereMesh" id="SphereMesh_36va6"]

[sub_resource type="QuadMesh" id="QuadMesh_tkha7"]
flip_faces = true
size = Vector2(2.055, 2)

[sub_resource type="Shader" id="Shader_ibdc7"]
code = "/* 
Basic sci-fi pulse post-processing effect.
Required to be put on a quad mesh that is rendered in the scene.
Required associated script to increase the radius over time.
Video tutorial on YouTube: https://youtu.be/x1dIJdz8Uj8
Written by Michael Watt

Thanks to Inigo Quilez for the SDF (https://iquilezles.org/articles/distfunctions/)
Thanks to nonunknown for the conditional statement replacements (https://godotshaders.com/shader/optimize-your-shaders/)
*/

shader_type spatial;
render_mode unshaded;

// Settings to play with
uniform mat4 start_point = mat4(1.0);
uniform float pulse_width = 2.0;
uniform vec4 color : source_color = vec4(1.0);

// Updated by Script
uniform float radius = 5.0;

// Access the screen and depth buffers
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;
uniform sampler2D DEPTH_TEXTURE : hint_depth_texture, filter_linear_mipmap;

// Necessary for rebuilding the world coordinates
varying mat4 CAMERA;

// Function from Inigo Quilez https://iquilezles.org/articles/distfunctions/
float sdSphere( vec3 p, float s ) {
	return length(p)-s;
}

// Replacements for < and > because math on GPU is fast. They return 1 or 0
float when_lt(float left_side, float right_side) {
	return max(sign(right_side - left_side), 0.0);
}
float when_gt(float left_side, float right_side) {
	return max(sign(left_side - right_side), 0.0);
}

void vertex() {
	POSITION = vec4(VERTEX, 1.0);

	CAMERA = INV_VIEW_MATRIX;
}

void fragment() {
	// Get the original screen rendered texture at the screen uv coordinates.
	vec4 original = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	// Get the depth value form the depth buffer.
	float depth = textureLod(DEPTH_TEXTURE, SCREEN_UV, 0.0).x;
	vec3 ndc = vec3(SCREEN_UV * 2.0 - 1.0, depth);
	
	// Unecessary for this effect, but to get the linear depth value,
	// use the following code.
	// vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	// view.xyz /= view.w;
	// float linear_depth = -view.z;
	
	// Calculate the fragment's world position
	vec4 world = CAMERA * INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	vec3 world_position = world.xyz / world.w;
	
	// Use the provided start transform and shift the world position to match
	// for the SDF to work as expected.
	vec3 adjusted_position = (inverse(start_point) * vec4(world_position, 1.0)).xyz;
	float dist = sdSphere(adjusted_position, radius);
	
	// Extra calculations to get the correct gradient direction.
	// Using calculation functions in place of if statements.
	float mix_ratio = 0.0;
	float check = when_lt(dist, 0.0) * when_gt(dist, -pulse_width);
	float percentage = abs(dist) / abs(pulse_width);
	mix_ratio = 1.0 * check - percentage;
	mix_ratio = clamp(mix_ratio, 0.0, 1.0);
	
	// Set the albedo to the mix between the original screen and the added
	// pulse color.
	ALBEDO = mix(original.rgb, color.rgb, mix_ratio);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_kygob"]
render_priority = 0
shader = SubResource("Shader_ibdc7")
shader_parameter/start_point = Projection(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
shader_parameter/pulse_width = 3.46
shader_parameter/color = Color(1, 1, 1, 1)
shader_parameter/radius = 3.13

[sub_resource type="ViewportTexture" id="ViewportTexture_btn5q"]
viewport_path = NodePath("SubViewport")

[sub_resource type="ViewportTexture" id="ViewportTexture_wtpdc"]
viewport_path = NodePath("Only_effect")

[node name="Test_scene_ZBuffer" type="Node3D"]

[node name="Node" type="Node" parent="."]

[node name="MeshInstance3D10" type="MeshInstance3D" parent="Node"]
transform = Transform3D(128.073, 0, 0, 0, 128.073, 0, 0, 0, 128.073, 0, 0, 0)
layers = 4
mesh = SubResource("PlaneMesh_n037r")
skeleton = NodePath("../..")

[node name="MeshInstance3D11" type="MeshInstance3D" parent="Node"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.17383, 0.421273, 0)
layers = 4
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")

[node name="MeshInstance3D12" type="MeshInstance3D" parent="Node"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.10455, 0.421273, -2.49199)
layers = 4
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")

[node name="MeshInstance3D13" type="MeshInstance3D" parent="Node"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.30204, 0.421273, -3.6793)
layers = 4
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")

[node name="MeshInstance3D14" type="MeshInstance3D" parent="Node"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.242746, 0.421273, -2.83585)
layers = 4
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")

[node name="MeshInstance3D15" type="MeshInstance3D" parent="Node"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.17055, 0.421273, -1.7059)
layers = 4
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")

[node name="MeshInstance3D16" type="MeshInstance3D" parent="Node"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.17055, 0.421273, -1.7059)
layers = 4
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")

[node name="MeshInstance3D17" type="MeshInstance3D" parent="Node"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.43747, 0.421273, 0.538457)
layers = 4
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")

[node name="o" type="MeshInstance3D" parent="Node"]
transform = Transform3D(2.71961, 0, 0, 0, 2.71961, 0, 0, 0, 2.71961, 3.50518, 0.421273, -1.96365)
layers = 4
mesh = SubResource("SphereMesh_36va6")
skeleton = NodePath("../..")

[node name="Node2" type="Node" parent="."]

[node name="MeshInstance3D10" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(128.073, 0, 0, 0, 128.073, 0, 0, 0, 128.073, 0, 0, 0)
layers = 4096
mesh = SubResource("PlaneMesh_n037r")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="MeshInstance3D11" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.17383, 0.421273, 0)
layers = 4096
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="MeshInstance3D12" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -2.10455, 0.421273, -2.49199)
layers = 4096
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="MeshInstance3D13" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.30204, 0.421273, -3.6793)
layers = 4096
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="MeshInstance3D14" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.242746, 0.421273, -2.83585)
layers = 4096
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="MeshInstance3D15" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.17055, 0.421273, -1.7059)
layers = 4096
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="MeshInstance3D16" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.17055, 0.421273, -1.7059)
layers = 4096
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="MeshInstance3D17" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.43747, 0.421273, 0.538457)
layers = 4096
mesh = SubResource("BoxMesh_4feqb")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="o" type="MeshInstance3D" parent="Node2"]
transform = Transform3D(2.71961, 0, 0, 0, 2.71961, 0, 0, 0, 2.71961, 3.50518, 0.421273, -1.96365)
layers = 4096
mesh = SubResource("SphereMesh_36va6")
skeleton = NodePath("../..")
surface_material_override/0 = ExtResource("1_dqglg")

[node name="OmniLight3D" type="OmniLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.878053, 0.706204, -0.617579)
layers = 4

[node name="SubViewport" type="SubViewport" parent="."]
transparent_bg = true
size = Vector2i(1920, 1080)

[node name="Camera3D" type="Camera3D" parent="SubViewport"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 5.217, -1)
cull_mask = 4

[node name="Only_effect" type="SubViewport" parent="."]
transparent_bg = true
size = Vector2i(1920, 1080)

[node name="Camera3D" type="Camera3D" parent="Only_effect"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 5.217, -1)
cull_mask = 4096

[node name="Pulse_test" type="Node" parent="Only_effect/Camera3D"]
script = ExtResource("1_fkf57")
origin_point = NodePath("../../../Node/o")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Only_effect/Camera3D"]
transform = Transform3D(2.78, 0, 0, 0, 2.78, 1.19209e-07, 0, -1.19209e-07, 2.78, 0, -0.0116273, -1.71676)
layers = 4096
mesh = SubResource("QuadMesh_tkha7")
surface_material_override/0 = SubResource("ShaderMaterial_kygob")

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="TextureRect2" type="TextureRect" parent="Control"]
layout_mode = 0
offset_right = 1920.0
offset_bottom = 1080.0
texture = SubResource("ViewportTexture_btn5q")

[node name="TextureRect" type="TextureRect" parent="Control"]
material = ExtResource("4_honhp")
layout_mode = 0
offset_right = 40.0
offset_bottom = 40.0
texture = SubResource("ViewportTexture_wtpdc")

[node name="FPS_COUNTER" type="Label" parent="Control"]
offset_left = 14.0
offset_top = 10.0
offset_right = 121.0
offset_bottom = 36.0
text = "FPS COUNTER"
script = ExtResource("1_6xjl0")
