[gd_scene load_steps=23 format=3 uid="uid://cein0q2eirkay"]

[ext_resource type="Script" path="res://10_BOARD/Board_CamTarget.gd" id="2_dow47"]
[ext_resource type="PackedScene" uid="uid://b3i04ha2iqr4l" path="res://10_BOARD/Loupe/loupe_rg.tscn" id="2_rffne"]
[ext_resource type="PackedScene" uid="uid://dr73p5vs0sixe" path="res://10_BOARD/board_scene.tscn" id="3_acdtw"]

[sub_resource type="GDScript" id="GDScript_w13ry"]
script/source = "extends Node


@export var debug_board = true

func _ready():
	_global_datas.Player_InBoard = debug_board
	$BOARD_UI.visible = debug_board
"

[sub_resource type="GDScript" id="GDScript_00hwt"]
script/source = "extends Node

@onready var Cam : Camera3D = $\"../BOARD_UI/SubViewport/CAM_STATE_BOARD_root2/Camera3D\"

@export var max_zoom = 22
@export var min_zoom = 42

@export var zoom_speed = 50
var zoom_value : float


func _ready():
	zoom_value = Cam.fov	
	_global_datas.zoom_value = zoom_value
func _process(delta):
		
	if !_global_datas.Player_InBoard:
		return
		
	if Input.is_action_pressed(\"Board_zoom_in\"):
		zoom_value -= zoom_speed * delta
		zoom_value = clamp(zoom_value,max_zoom,min_zoom)	
		Cam.fov = zoom_value
		_global_datas.zoom_value = zoom_value
	if Input.is_action_pressed(\"Board_zoom_out\"):
		zoom_value += zoom_speed * delta	
		zoom_value = clamp(zoom_value,max_zoom,min_zoom)
		Cam.fov = zoom_value
		_global_datas.zoom_value = zoom_value
			

"

[sub_resource type="GDScript" id="GDScript_y5335"]
script/source = "extends Camera3D


@onready var target = $\"../BOARD_UI/SubViewport/CAM_STATE_BOARD_root2\"

func _ready():
	fov = $\"../BOARD_UI/SubViewport/CAM_STATE_BOARD_root2/Camera3D\".fov
	

func _process(_delta):
	
	if !_global_datas.Player_InBoard:
		return
		
	transform.origin = target.position
	fov = $\"../BOARD_UI/SubViewport/CAM_STATE_BOARD_root2/Camera3D\".fov
"

[sub_resource type="GDScript" id="GDScript_vi1bh"]
script/source = "extends Node3D

@export var smooth_speed = 3.0
var offset: Vector3
var active_target : Vector3

@onready var Player_position = $\"../CamTarget\"

func _ready():
	
	var playerPosition = Player_position.transform.origin
	offset = self.transform.origin - playerPosition
	active_target = offset
	
		
func _physics_process(_delta):

	if !_global_datas.Player_InBoard:
		return
			
	var playerPosition = Player_position.transform.origin
	self.transform.origin = lerp(self.transform.origin, playerPosition + active_target, smooth_speed * _delta)
"

[sub_resource type="GDScript" id="GDScript_l5hmx"]
script/source = "extends Camera3D

func _ready():
	_global_datas.board_camera = self

"

[sub_resource type="GDScript" id="GDScript_gxd63"]
script/source = "extends Area3D

@onready var Camera = $\"../Camera_xray\"


@export var y = 6.0

func _ready():
	
	_global_datas.mouse_raycast.connect(MouseRaycast)
	
func _process(delta):
	
	if !_global_datas.Player_InBoard:
		return

		
	MouseRaycast()
		
func MouseRaycast():
	
	var mousePos = get_viewport().get_mouse_position()
	var rayLengh = 10.0
	var from = Camera.project_ray_origin(mousePos)
	var to = from + Camera.project_ray_normal(mousePos) * rayLengh
	var space = get_world_3d().direct_space_state
	var rayQuery = PhysicsRayQueryParameters3D.new()
	rayQuery.from = from
	rayQuery.to = to
	rayQuery.collide_with_areas = true
	rayQuery.collide_with_bodies = false

	var result = space.intersect_ray(rayQuery)

	if result.is_empty():
		return
	

	_global_datas.mouseRaycastPosition = result.position

func _check_name(result):
		
	if result:
		var collider = result.collider
		var object_name = collider.name
		print(object_name)
	
"

[sub_resource type="BoxShape3D" id="BoxShape3D_63y7c"]
size = Vector3(1.71357, 0.0473518, 0.953495)

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_1mwol"]
parameter_name = "Camera_viewport"
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_e672l"]
source = 5

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_guiue"]
size = Vector2(513.781, 284.487)
expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_6wov6"]
constant = 0.484

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_eadbo"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_t2oaf"]
constant = 0.01

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_xw27y"]
function = 31

[sub_resource type="VisualShader" id="VisualShader_ubtm6"]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform sampler2D Camera_viewport : filter_nearest;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Camera_viewport, UV);


// Input:6
	vec2 n_out6p0 = UV;


// FloatConstant:5
	float n_out5p0 = 0.484000;


// FloatConstant:7
	float n_out7p0 = 0.010000;


	vec4 n_out4p0;
// Expression:4
	n_out4p0 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		vec2 n_uv = n_out6p0 -0.5;
		float d = length(n_uv);
		float c = smoothstep(n_out5p0,n_out5p0 + n_out7p0,d);
		n_out4p0 = vec4(vec3(c),1.0);
	}


// FloatFunc:8
	float n_out8p0 = 1.0 - n_out4p0.x;


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out8p0;


}
"
flags/unshaded = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(600, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_1mwol")
nodes/fragment/2/position = Vector2(-220, -100)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_e672l")
nodes/fragment/3/position = Vector2(180, 0)
nodes/fragment/4/node = SubResource("VisualShaderNodeExpression_guiue")
nodes/fragment/4/position = Vector2(-611.479, 530.487)
nodes/fragment/4/size = Vector2(513.781, 284.487)
nodes/fragment/4/input_ports = "0,3,UV;1,0,r;2,0,feather;"
nodes/fragment/4/output_ports = "0,5,color;"
nodes/fragment/4/expression = "vec2 n_uv = UV -0.5;
float d = length(n_uv);
float c = smoothstep(r,r + feather,d);
color = vec4(vec3(c),1.0);"
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_6wov6")
nodes/fragment/5/position = Vector2(-980, 520)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_eadbo")
nodes/fragment/6/position = Vector2(-1080, 700)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_t2oaf")
nodes/fragment/7/position = Vector2(-915.302, 595.134)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatFunc_xw27y")
nodes/fragment/8/position = Vector2(143.355, 529.488)
nodes/fragment/connections = PackedInt32Array(6, 0, 4, 0, 5, 0, 4, 1, 7, 0, 4, 2, 4, 0, 8, 0, 8, 0, 0, 1, 2, 0, 3, 2, 3, 0, 0, 0)

[sub_resource type="ViewportTexture" id="ViewportTexture_ctpjn"]
viewport_path = NodePath("Loupe_RG/SubViewport")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ouw7r"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("VisualShader_ubtm6")
shader_parameter/Camera_viewport = SubResource("ViewportTexture_ctpjn")

[sub_resource type="ViewportTexture" id="ViewportTexture_numvm"]
viewport_path = NodePath("Loupe_RG/SubViewport")

[sub_resource type="GDScript" id="GDScript_4hiyv"]
script/source = "extends Camera3D


@onready var player_Eyes =$\"../../../BOARD_UI/SubViewport/CAM_STATE_BOARD_root2/Camera3D\"
var offset: Vector3

@onready var loupeRG = $\"../..\"
@onready var dir_target = $\"../../Dir_target\"

func _ready():


	offset = self.transform.origin - loupeRG.position
	
	#fov = player_Eyes.fov

	
func _physics_process(_delta):
	

	if !_global_datas.Player_InBoard:
		return

	transform.origin = loupeRG.position + offset
	#fov = player_Eyes.fov


	#var direction = player_Eyes.position - dir_target.position 
	#look_at(direction.normalized() * 10, Vector3.FORWARD)
"

[node name="04_BOARD" type="Node"]
script = SubResource("GDScript_w13ry")
debug_board = false
metadata/_edit_horizontal_guides_ = [-58.0]

[node name="ZOOM_Behaviour" type="Node" parent="."]
script = SubResource("GDScript_00hwt")

[node name="Camera_xray" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.173648, 0.984808, 0, -0.984808, 0.173648, 0, 21.173, 0.225)
cull_mask = 2
fov = 42.0
script = SubResource("GDScript_y5335")

[node name="BOARD_UI" type="SubViewportContainer" parent="."]
visible = false
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="BOARD_UI"]
handle_input_locally = false
scaling_3d_scale = 0.9
fsr_sharpness = 2.0
size = Vector2i(1920, 1080)
render_target_update_mode = 0

[node name="CAM_STATE_BOARD_root2" type="Node3D" parent="BOARD_UI/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 21.173, 0.225)
script = SubResource("GDScript_vi1bh")

[node name="Camera3D" type="Camera3D" parent="BOARD_UI/SubViewport/CAM_STATE_BOARD_root2"]
transform = Transform3D(1, 0, 0, 0, 0.173648, 0.984808, 0, -0.984808, 0.173648, 0, 0, 0)
cull_mask = 66
fov = 42.0
far = 15.0
script = SubResource("GDScript_l5hmx")

[node name="Camera3D2" type="Camera3D" parent="BOARD_UI/SubViewport/CAM_STATE_BOARD_root2"]
transform = Transform3D(1, 0, 0, 0, 0.173648, 0.984808, 0, -0.984808, 0.173648, 0, 0, 0)
cull_mask = 2
fov = 42.0
far = 15.0
script = SubResource("GDScript_l5hmx")

[node name="CamTarget" type="Node3D" parent="BOARD_UI/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 20.002, 0)
script = ExtResource("2_dow47")
move_speed = 1.0
min_x = -0.5
max_x = 0.5
min_z = -0.5
max_z = 0.5

[node name="Board_scene" parent="." instance=ExtResource("3_acdtw")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 20, 0)

[node name="Area3D" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 19.9974, 0)
collision_layer = 256
collision_mask = 256
priority = 2
script = SubResource("GDScript_gxd63")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0209293, -0.010353)
shape = SubResource("BoxShape3D_63y7c")

[node name="Loupe_RG" parent="." instance=ExtResource("2_rffne")]
transform = Transform3D(0.75, 0, -1.29904, 0, 1.5, 0, 1.29904, 0, 0.75, 0.159613, 19.9961, 0.0477558)
close_to_eyes_value = 0.9

[node name="Sprite3D2" type="Sprite3D" parent="Loupe_RG"]
transform = Transform3D(0.00394938, -0.00684052, -1.31232e-10, 0, 1.51533e-10, 0.00789873, -0.00684052, -0.00394938, -7.57665e-11, -0.0547663, 0.0097208, 0.000913404)
layers = 64
material_override = SubResource("ShaderMaterial_ouw7r")
cast_shadow = 0
transparent = false
double_sided = false
texture = SubResource("ViewportTexture_numvm")

[node name="SubViewport" type="SubViewport" parent="Loupe_RG"]
size = Vector2i(1080, 1080)
render_target_update_mode = 4

[node name="Camera3D" type="Camera3D" parent="Loupe_RG/SubViewport"]
transform = Transform3D(1, 0, 0, 0, 0.173648, 0.984808, 0, -0.984808, 0.173648, 0.11803, 20.061, -0.0234129)
top_level = true
cull_mask = 2
fov = 20.0
script = SubResource("GDScript_4hiyv")

[node name="Dir_target" type="Node3D" parent="Loupe_RG"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0565325, -0.0110044, -0.00275315)
